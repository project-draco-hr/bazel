{
  NestedSetBuilder<Artifact> specsBuilder=NestedSetBuilder.naiveLinkOrder();
  for (  ProguardSpecProvider dep : ruleContext.getPrerequisites("deps",Mode.TARGET,ProguardSpecProvider.class)) {
    specsBuilder.addTransitive(dep.getTransitiveProguardSpecs());
  }
  if (!getProguardConfigs(ruleContext).isEmpty()) {
    FilesToRunProvider proguardWhitelister=ruleContext.getExecutablePrerequisite("$proguard_whitelister",Mode.HOST);
    for (    Artifact specToValidate : getProguardConfigs(ruleContext)) {
      Artifact output=ruleContext.getUniqueDirectoryArtifact("validated_proguard",specToValidate.getRootRelativePath().replaceName(specToValidate.getFilename() + "_valid"),ruleContext.getBinOrGenfilesDirectory());
      ruleContext.registerAction(new SpawnAction.Builder().addInput(specToValidate).setExecutable(proguardWhitelister).setProgressMessage("Validating proguard configuration").setMnemonic("ValidateProguard").addArgument("--path").addArgument(specToValidate.getExecPathString()).addArgument("--output").addArgument(output.getExecPathString()).addOutput(output).build(ruleContext));
      specsBuilder.add(output);
    }
  }
  return specsBuilder.build();
}
