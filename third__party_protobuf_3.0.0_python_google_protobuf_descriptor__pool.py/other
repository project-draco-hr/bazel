"Provides DescriptorPool to use as a container for proto2 descriptors.\n\nThe DescriptorPool is used in conjection with a DescriptorDatabase to maintain\na collection of protocol buffer descriptors for use when dynamically creating\nmessage types at runtime.\n\nFor most applications protocol buffers should be used via modules generated by\nthe protocol buffer compiler tool. This should only be used when the type of\nprotocol buffers used in an application or library cannot be predetermined.\n\nBelow is a straightforward example on how to use this class:\n\n  pool = DescriptorPool()\n  file_descriptor_protos = [ ... ]\n  for file_descriptor_proto in file_descriptor_protos:\n    pool.Add(file_descriptor_proto)\n  my_message_descriptor = pool.FindMessageTypeByName('some.package.MessageType')\n\nThe message descriptor can be used in conjunction with the message_factory\nmodule in order to create a protocol buffer class that can be encoded and\ndecoded.\n\nIf you want to get a Python class for the specified proto, use the\nhelper functions inside google.protobuf.message_factory\ndirectly instead of this class.\n"
__author__ = 'matthewtoia@google.com (Matt Toia)'
from google.protobuf import descriptor
from google.protobuf import descriptor_database
from google.protobuf import text_encoding
_USE_C_DESCRIPTORS = descriptor._USE_C_DESCRIPTORS
if _USE_C_DESCRIPTORS:
    _DEFAULT = descriptor._message.default_pool
else:
    _DEFAULT = DescriptorPool()
