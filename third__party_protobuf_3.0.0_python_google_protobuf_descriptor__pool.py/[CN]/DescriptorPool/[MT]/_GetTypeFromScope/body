def _GetTypeFromScope(self, package, type_name, scope):
    'Finds a given type name in the current scope.\n\n    Args:\n      package: The package the proto should be located in.\n      type_name: The name of the type to be found in the scope.\n      scope: Dict mapping short and full symbols to message and enum types.\n\n    Returns:\n      The descriptor for the requested type.\n    '
    if (type_name not in scope):
        components = _PrefixWithDot(package).split('.')
        while components:
            possible_match = '.'.join((components + [type_name]))
            if (possible_match in scope):
                type_name = possible_match
                break
            else:
                components.pop((-1))
    return scope[type_name]
