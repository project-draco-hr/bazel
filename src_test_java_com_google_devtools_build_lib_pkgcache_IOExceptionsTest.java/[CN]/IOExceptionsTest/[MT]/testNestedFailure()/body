{
  reporter.removeHandler(failFastHandler);
  scratch.file("top/BUILD","sh_library(name = 'top', deps = ['//pkg:x'])");
  final Path buildPath=scratch.file("pkg/BUILD","sh_library(name = 'x')");
  crashMessage=new Function<Path,String>(){
    @Override public String apply(    Path path){
      if (buildPath.equals(path)) {
        return "custom crash: " + buildPath;
      }
      return null;
    }
  }
;
  assertFalse(visitor.sync(reporter,ImmutableSet.<Target>of(),ImmutableSet.of(Label.parseAbsolute("//top:top")),false,5,Integer.MAX_VALUE));
  assertContainsEvent("no such package 'pkg'");
  scratch.overwriteFile("pkg/BUILD","# another comment to force reload","sh_library(name = 'x')");
  crashMessage=NULL_FUNCTION;
  syncPackages();
  eventCollector.clear();
  reporter.addHandler(failFastHandler);
  assertTrue(visitor.sync(reporter,ImmutableSet.<Target>of(),ImmutableSet.of(Label.parseAbsolute("//top:top")),false,5,Integer.MAX_VALUE));
  assertNoEvents();
}
