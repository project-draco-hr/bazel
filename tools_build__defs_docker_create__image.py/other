'This tool creates a docker image from a layer and the various metadata.'
import sys
import tarfile
from tools.build_defs.pkg import archive
from third_party.py import gflags
DATA_FORMAT_VERSION = '1.0'
gflags.DEFINE_string('output', None, 'The output file, mandatory')
gflags.MarkFlagAsRequired('output')
gflags.DEFINE_string('metadata', None, 'The JSON metadata file for this image, mandatory.')
gflags.MarkFlagAsRequired('metadata')
gflags.DEFINE_string('layer', None, 'The tar file for the top layer of this image, mandatory.')
gflags.MarkFlagAsRequired('layer')
gflags.DEFINE_string('id', None, 'The hex identifier of this image (hexstring or @filename), mandatory.')
gflags.MarkFlagAsRequired('id')
gflags.DEFINE_string('base', None, 'The base image file for this image.')
gflags.DEFINE_string('repository', None, 'The name of the repository to add this image.')
gflags.DEFINE_string('name', None, 'The symbolic name of this image.')
FLAGS = gflags.FLAGS
if (__name__ == '__main__'):
    main(FLAGS(sys.argv))
