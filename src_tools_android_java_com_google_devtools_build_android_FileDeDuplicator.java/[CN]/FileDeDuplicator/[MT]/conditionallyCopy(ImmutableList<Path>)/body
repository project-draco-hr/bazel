{
  final Builder<Path> builder=ImmutableList.builder();
  for (  Path root : roots) {
    Preconditions.checkArgument(root.startsWith(workingDirectory),root + " must start with root " + workingDirectory+ " from "+ roots);
    Preconditions.checkArgument(!root.equals(workingDirectory),"Cannot deduplicate root directory: " + root + " from "+ roots);
    if (!seen.containsKey(root)) {
      seen.put(root,null);
      final Path newRoot=out.resolve(workingDirectory.relativize(root));
      Files.walkFileTree(root,ImmutableSet.of(FileVisitOption.FOLLOW_LINKS),Integer.MAX_VALUE,new ConditionalCopyVisitor(newRoot,root,seen,hashFunction));
      builder.add(newRoot);
    }
 else {
      LOGGER.warning(String.format("Duplicated directory %s",root));
    }
  }
  return builder.build();
}
