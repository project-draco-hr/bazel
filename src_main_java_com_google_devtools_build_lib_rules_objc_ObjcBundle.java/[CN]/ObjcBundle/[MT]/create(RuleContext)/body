{
  ObjcCommon common=new ObjcCommon.Builder(ruleContext).build();
  ImmutableList<Artifact> bundleImports=ruleContext.getPrerequisiteArtifacts("bundle_imports",Mode.TARGET).list();
  Iterable<String> bundleImportErrors=ObjcCommon.notInContainerErrors(bundleImports,ObjcCommon.BUNDLE_CONTAINER_TYPE);
  for (  String error : bundleImportErrors) {
    ruleContext.attributeError("bundle_imports",error);
  }
  NestedSet<Artifact> filesToBuild=NestedSetBuilder.emptySet(STABLE_ORDER);
  return ObjcRuleClasses.ruleConfiguredTarget(ruleContext,filesToBuild).addProvider(ObjcProvider.class,common.getObjcProvider()).build();
}
