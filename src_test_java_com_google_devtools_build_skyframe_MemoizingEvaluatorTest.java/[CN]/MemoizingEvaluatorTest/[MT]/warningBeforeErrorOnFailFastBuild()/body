{
  tester.set("dep",new StringValue("dep")).setWarning("warn-dep");
  SkyKey topKey=GraphTester.toSkyKey("top");
  tester.getOrCreate(topKey).setHasError(true).addDependency("dep");
  for (int i=0; i < 2; i++) {
    initializeReporter();
    EvaluationResult<StringValue> result=tester.eval(false,"top");
    assertTrue(result.hasError());
    if (i == 0 || rootCausesStored()) {
      assertThat(result.getError(topKey).getRootCauses()).containsExactly(topKey);
    }
    assertEquals(topKey.toString(),result.getError(topKey).getException().getMessage());
    assertTrue(result.getError(topKey).getException() instanceof SomeErrorException);
    if (i == 0 || eventsStored()) {
      assertContainsEvent(eventCollector,"warn-dep");
      assertEventCount(1,eventCollector);
    }
  }
}
