def _VarintDecoder(mask, result_type):
    'Return an encoder for a basic varint value (does not include tag).\n\n  Decoded values will be bitwise-anded with the given mask before being\n  returned, e.g. to limit them to 32 bits.  The returned decoder does not\n  take the usual "end" parameter -- the caller is expected to do bounds checking\n  after the fact (often the caller can defer such checking until later).  The\n  decoder returns a (value, new_pos) pair.\n  '

    def DecodeVarint(buffer, pos):
        result = 0
        shift = 0
        while 1:
            b = six.indexbytes(buffer, pos)
            result |= ((b & 127) << shift)
            pos += 1
            if (not (b & 128)):
                result &= mask
                result = result_type(result)
                return (result, pos)
            shift += 7
            if (shift >= 64):
                raise _DecodeError('Too many bytes when decoding varint.')
    return DecodeVarint
