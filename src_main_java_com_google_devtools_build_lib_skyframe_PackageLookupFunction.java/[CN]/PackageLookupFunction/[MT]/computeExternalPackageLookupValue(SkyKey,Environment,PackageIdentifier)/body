{
  PackageIdentifier id=(PackageIdentifier)skyKey.argument();
  SkyKey repositoryKey=RepositoryValue.key(id.getRepository());
  RepositoryValue repositoryValue;
  try {
    repositoryValue=(RepositoryValue)env.getValueOrThrow(repositoryKey,NoSuchPackageException.class,IOException.class,EvalException.class);
    if (repositoryValue == null) {
      return null;
    }
  }
 catch (  NoSuchPackageException|IOException|EvalException e) {
    throw new PackageLookupFunctionException(new BuildFileNotFoundException(id,e.getMessage()),Transience.PERSISTENT);
  }
  PathFragment buildFileFragment=id.getPackageFragment().getChild("BUILD");
  RootedPath buildFileRootedPath=RootedPath.toRootedPath(repositoryValue.getPath(),buildFileFragment);
  FileValue fileValue=getFileValue(buildFileRootedPath,env,packageIdentifier);
  if (fileValue == null) {
    return null;
  }
  if (fileValue.isFile()) {
    return PackageLookupValue.success(repositoryValue.getPath());
  }
  return PackageLookupValue.NO_BUILD_FILE_VALUE;
}
