{
  Set<EnvironmentGroup> refinedGroups=new LinkedHashSet<>();
  for (  EnvironmentWithGroup envWithGroup : refinedEnvironmentsSoFar) {
    refinedEnvironments.put(envWithGroup.group(),envWithGroup.environment());
    refinedGroups.add(envWithGroup.group());
  }
  Set<EnvironmentGroup> newlyEmptyGroups=groupsWithEnvironmentsRemoved.isEmpty() ? ImmutableSet.<EnvironmentGroup>of() : Sets.difference(groupsWithEnvironmentsRemoved,refinedGroups);
  if (!newlyEmptyGroups.isEmpty()) {
    ruleContext.ruleError(getOverRefinementError(newlyEmptyGroups,removedEnvironmentCulprits));
  }
}
