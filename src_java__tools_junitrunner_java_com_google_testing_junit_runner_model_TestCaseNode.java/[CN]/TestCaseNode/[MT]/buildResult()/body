{
  String name=getDescription().getMethodName();
  String className=getDescription().getClassName();
  if (name == null) {
    name=className;
    className=parent.getDescription().getDisplayName();
  }
  List<TestResult> childResults=new ArrayList<>();
  for (  Description dynamicTest : getDescription().getChildren()) {
    childResults.add(buildDynamicResult(dynamicTest,getRuntime(),getTestResultStatus()));
  }
  int numTests=getDescription().isTest() ? 1 : getDescription().getChildren().size();
  int numFailures=globalFailures.isEmpty() ? dynamicTestToFailures.keySet().size() : numTests;
  return new TestResult.Builder().name(name).className(className).properties(properties).failures(new ArrayList<>(globalFailures)).runTimeInterval(getRuntime()).status(getTestResultStatus()).numTests(numTests).numFailures(numFailures).childResults(childResults).integrations(integrations).build();
}
