{
  List<RankAndLabel> outputToOrder=options.orderOutput == OrderOutput.FULL ? new ArrayList<RankAndLabel>() : null;
  Digraph<Set<Node<Target>>> scGraph=result.getStrongComponentGraph();
  Set<Node<Set<Node<Target>>>> rankNodes=scGraph.getRoots();
  Set<Node<Set<Node<Target>>>> seen=new HashSet<>();
  seen.addAll(rankNodes);
  final String lineTerm=options.getLineTerminator();
  for (int rank=0; !rankNodes.isEmpty(); rank++) {
    for (    Node<Set<Node<Target>>> xScc : rankNodes) {
      for (      Node<Target> x : xScc.getLabel()) {
        outputToStreamOrSave(rank,x.getLabel().getLabel(),out,outputToOrder,lineTerm);
      }
    }
    Set<Node<Set<Node<Target>>>> nextRankNodes=new LinkedHashSet<>();
    for (    Node<Set<Node<Target>>> x : rankNodes) {
      for (      Node<Set<Node<Target>>> y : x.getSuccessors()) {
        if (seen.add(y)) {
          nextRankNodes.add(y);
        }
      }
    }
    rankNodes=nextRankNodes;
  }
  if (outputToOrder != null) {
    Collections.sort(outputToOrder);
    for (    RankAndLabel item : outputToOrder) {
      out.printf("%s%s",item,lineTerm);
    }
  }
}
