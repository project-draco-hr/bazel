def _AddPropertiesForField(field, cls):
    "Adds a public property for a protocol message field.\n  Clients can use this property to get and (in the case\n  of non-repeated scalar fields) directly set the value\n  of a protocol message field.\n\n  Args:\n    field: A FieldDescriptor for this field.\n    cls: The class we're constructing.\n  "
    assert (_FieldDescriptor.MAX_CPPTYPE == 10)
    constant_name = (field.name.upper() + '_FIELD_NUMBER')
    setattr(cls, constant_name, field.number)
    if (field.label == _FieldDescriptor.LABEL_REPEATED):
        _AddPropertiesForRepeatedField(field, cls)
    elif (field.cpp_type == _FieldDescriptor.CPPTYPE_MESSAGE):
        _AddPropertiesForNonRepeatedCompositeField(field, cls)
    else:
        _AddPropertiesForNonRepeatedScalarField(field, cls)
