{
  Collection<Target> testsToRun=loadingResult.getTestsToRun();
  Collection<ConfiguredTarget> configuredTargets=skyframeAnalysisResult.getConfiguredTargets();
  Collection<ConfiguredTarget> allTargetsToTest=null;
  if (testsToRun != null) {
    allTargetsToTest=Lists.<ConfiguredTarget>newArrayList(filterTestsByTargets(configuredTargets,Sets.newHashSet(testsToRun)));
  }
  Set<Artifact> artifactsToBuild=new HashSet<>();
  Set<ConfiguredTarget> parallelTests=new HashSet<>();
  Set<ConfiguredTarget> exclusiveTests=new HashSet<>();
  Collection<Artifact> buildInfoArtifacts=skyframeExecutor.getWorkspaceStatusArtifacts(eventHandler);
  Preconditions.checkState(buildInfoArtifacts.size() == 2,buildInfoArtifacts);
  artifactsToBuild.addAll(buildInfoArtifacts);
  addExtraActionsIfRequested(viewOptions,artifactsToBuild,configuredTargets);
  NestedSet<Artifact> baselineCoverageArtifacts=getBaselineCoverageArtifacts(configuredTargets);
  Iterables.addAll(artifactsToBuild,baselineCoverageArtifacts);
  if (coverageReportActionFactory != null) {
    CoverageReportActionsWrapper actionsWrapper;
    actionsWrapper=coverageReportActionFactory.createCoverageReportActionsWrapper(allTargetsToTest,baselineCoverageArtifacts,getArtifactFactory(),CoverageReportValue.ARTIFACT_OWNER);
    if (actionsWrapper != null) {
      ImmutableList<Action> actions=actionsWrapper.getActions();
      skyframeExecutor.injectCoverageReportData(actions);
      artifactsToBuild.addAll(actionsWrapper.getCoverageOutputs());
    }
  }
  scheduleTestsIfRequested(parallelTests,exclusiveTests,topLevelOptions,allTargetsToTest);
  String error=loadingResult.hasLoadingError() || skyframeAnalysisResult.hasLoadingError() ? "execution phase succeeded, but there were loading phase errors" : skyframeAnalysisResult.hasAnalysisError() ? "execution phase succeeded, but not all targets were analyzed" : null;
  final WalkableGraph graph=skyframeAnalysisResult.getWalkableGraph();
  final ActionGraph actionGraph=new ActionGraph(){
    @Nullable @Override public Action getGeneratingAction(    Artifact artifact){
      ArtifactOwner artifactOwner=artifact.getArtifactOwner();
      if (artifactOwner instanceof ActionLookupValue.ActionLookupKey) {
        SkyKey key=ActionLookupValue.key((ActionLookupValue.ActionLookupKey)artifactOwner);
        ActionLookupValue val=(ActionLookupValue)graph.getValue(key);
        return val == null ? null : val.getGeneratingAction(artifact);
      }
      return null;
    }
  }
;
  return new AnalysisResult(configuredTargets,skyframeAnalysisResult.getAspects(),allTargetsToTest,error,actionGraph,artifactsToBuild,parallelTests,exclusiveTests,topLevelOptions,skyframeAnalysisResult.getPackageRoots());
}
