{
switch (arg) {
case "--sources":
    collectFlagArguments(sourceFiles,args,"-");
  break;
case "--source_jars":
collectFlagArguments(sourceJars,args,"-");
break;
case "--messages":
collectFlagArguments(messageFiles,args,"-");
break;
case "--resources":
collectFlagArguments(resourceFiles,args,"-");
break;
case "--resource_jars":
collectFlagArguments(resourceJars,args,"-");
break;
case "--classpath_resources":
collectFlagArguments(rootResourceFiles,args,"-");
break;
case "--classpath":
classPath=getArgument(args,arg);
break;
case "--processorpath":
processorPath=getArgument(args,arg);
break;
case "--processors":
collectProcessorArguments(processorNames,args,"-");
break;
case "--output":
outputJar=getArgument(args,arg);
break;
case "--classdir":
classDir=getArgument(args,arg);
break;
case "--tempdir":
tempDir=getArgument(args,arg);
break;
case "--gendir":
getArgument(args,arg);
break;
case "--post_processor":
addExternalPostProcessor(postProcessors,args,arg);
break;
case "--compress_jar":
compressJar=true;
break;
case "--rule_kind":
ruleKind=getArgument(args,arg);
break;
case "--target_label":
targetLabel=getArgument(args,arg);
break;
default :
throw new InvalidCommandLineException("unknown option : '" + arg + "'");
}
}
