{
  this.parentVariableBindings=bindings;
  this.parentImportMap=importMap;
  builder.setWorkspaceName(aPackage.getWorkspaceName());
  builder.addEvents(aPackage.getEvents());
  if (aPackage.containsErrors()) {
    builder.setContainsErrors();
  }
  for (  Rule rule : aPackage.getTargets(Rule.class)) {
    try {
      Rule newRule=builder.createRule(rule.getLabel(),rule.getRuleClassObject(),rule.getLocation(),rule.getAttributeContainer());
      newRule.populateOutputFiles(NullEventHandler.INSTANCE,builder);
      if (rule.containsErrors()) {
        newRule.setContainsErrors();
      }
      builder.addRule(newRule);
    }
 catch (    LabelSyntaxException e) {
      throw new IllegalStateException(e);
    }
  }
}
