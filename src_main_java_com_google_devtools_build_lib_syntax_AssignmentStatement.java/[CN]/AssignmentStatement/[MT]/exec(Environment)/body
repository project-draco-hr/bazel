{
  if (!(lvalue instanceof Ident)) {
    throw new EvalException(getLocation(),"can only assign to variables, not to '" + lvalue + "'");
  }
  Ident ident=(Ident)lvalue;
  Object result=expression.eval(env);
  Preconditions.checkNotNull(result,"result of %s is null",expression);
  if (env.isSkylarkEnabled()) {
    SkylarkEnvironment skylarkEnv=(SkylarkEnvironment)env;
    if (skylarkEnv.hasBeenReadGlobalVariable(ident.getName())) {
      throw new EvalException(getLocation(),"Variable '" + ident.getName() + "' is referenced before assignment."+ "The variable is defined in the global scope.");
    }
    Class<?> variableType=skylarkEnv.getVariableType(ident.getName());
    Class<?> resultType=EvalUtils.getSkylarkType(result.getClass());
    if (variableType != null && !variableType.equals(resultType) && !resultType.equals(Environment.NoneType.class) && !variableType.equals(Environment.NoneType.class)) {
      throw new EvalException(getLocation(),String.format("Incompatible variable types, " + "trying to assign %s (type of %s) to variable %s which is already %s",EvalUtils.prettyPrintValue(result),EvalUtils.getDataTypeName(result),ident.getName(),EvalUtils.getDataTypeNameFromClass(variableType)));
    }
  }
  env.update(ident.getName(),result);
}
