{
  assertArgv(linuxBuilder().addArg("abc"),"abc");
  assertArgv(linuxBuilder().addArg("abc def"),"abc def");
  assertArgv(linuxBuilder().addArgs("abc","def"),"abc","def");
  assertArgv(linuxBuilder().addArgs(ImmutableList.of("abc","def")),"abc","def");
  assertArgv(linuxBuilder().addArg("abc").useShell(true),"/bin/sh","-c","abc");
  assertArgv(linuxBuilder().addArg("abc def").useShell(true),"/bin/sh","-c","abc def");
  assertArgv(linuxBuilder().addArgs("abc","def").useShell(true),"/bin/sh","-c","abc def");
  assertArgv(linuxBuilder().addArgs("/bin/sh","-c","abc").useShell(true),"/bin/sh","-c","abc");
  assertArgv(linuxBuilder().addArgs("/bin/sh","-c"),"/bin/sh","-c");
  assertArgv(linuxBuilder().addArgs("/bin/bash","-c"),"/bin/bash","-c");
  assertArgv(linuxBuilder().addArgs("/bin/sh","-c").useShell(true),"/bin/sh","-c");
  assertArgv(linuxBuilder().addArgs("/bin/bash","-c").useShell(true),"/bin/bash","-c");
}
