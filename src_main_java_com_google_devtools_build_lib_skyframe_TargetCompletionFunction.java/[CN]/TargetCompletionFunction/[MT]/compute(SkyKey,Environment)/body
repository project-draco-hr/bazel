{
  LabelAndConfiguration lac=(LabelAndConfiguration)skyKey.argument();
  ConfiguredTargetValue ctValue=(ConfiguredTargetValue)env.getValue(ConfiguredTargetValue.key(lac.getLabel(),lac.getConfiguration()));
  TopLevelArtifactContext topLevelContext=PrecomputedValue.TOP_LEVEL_CONTEXT.get(env);
  if (env.valuesMissing()) {
    return null;
  }
  Map<SkyKey,ValueOrException2<MissingInputFileException,ActionExecutionException>> inputDeps=env.getValuesOrThrow(ArtifactValue.mandatoryKeys(TopLevelArtifactHelper.getAllArtifactsToBuild(ctValue.getConfiguredTarget(),topLevelContext)),MissingInputFileException.class,ActionExecutionException.class);
  int missingCount=0;
  ActionExecutionException firstActionExecutionException=null;
  MissingInputFileException missingInputException=null;
  NestedSetBuilder<Label> rootCausesBuilder=NestedSetBuilder.stableOrder();
  for (  Map.Entry<SkyKey,ValueOrException2<MissingInputFileException,ActionExecutionException>> depsEntry : inputDeps.entrySet()) {
    Artifact input=ArtifactValue.artifact(depsEntry.getKey());
    try {
      depsEntry.getValue().get();
    }
 catch (    MissingInputFileException e) {
      missingCount++;
      if (input.getOwner() != null) {
        rootCausesBuilder.add(input.getOwner());
        env.getListener().handle(Event.error(ctValue.getConfiguredTarget().getTarget().getLocation(),String.format("%s: missing input file '%s'",lac.getLabel(),input.getOwner())));
      }
    }
catch (    ActionExecutionException e) {
      rootCausesBuilder.addTransitive(e.getRootCauses());
      if (firstActionExecutionException == null) {
        firstActionExecutionException=e;
      }
    }
  }
  if (missingCount > 0) {
    missingInputException=new MissingInputFileException(ctValue.getConfiguredTarget().getTarget().getLocation() + " " + missingCount+ " input file(s) do not exist",ctValue.getConfiguredTarget().getTarget().getLocation());
  }
  NestedSet<Label> rootCauses=rootCausesBuilder.build();
  if (!rootCauses.isEmpty()) {
    eventBusRef.get().post(TargetCompleteEvent.createFailed(ctValue.getConfiguredTarget(),rootCauses));
    if (firstActionExecutionException != null) {
      throw new TargetCompletionFunctionException(firstActionExecutionException);
    }
 else {
      throw new TargetCompletionFunctionException(missingInputException);
    }
  }
  return env.valuesMissing() ? null : new TargetCompletionValue(ctValue.getConfiguredTarget());
}
