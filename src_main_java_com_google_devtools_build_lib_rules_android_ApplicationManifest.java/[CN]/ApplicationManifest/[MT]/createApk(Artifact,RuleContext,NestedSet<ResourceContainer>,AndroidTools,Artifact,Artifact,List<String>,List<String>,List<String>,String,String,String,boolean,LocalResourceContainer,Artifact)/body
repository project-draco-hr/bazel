{
  ResourceContainer resourceContainer=checkForInlinedResources(new AndroidResourceContainerBuilder().withData(data).withManifest(getManifest()).withROutput(rTxt).withSymbolsFile(symbolsTxt).buildFromRule(ruleContext,resourceApk),resourceContainers,ruleContext);
  AndroidResourcesProcessorBuilder builder=new AndroidResourcesProcessorBuilder(tools,ruleContext).setApkOut(resourceContainer.getApk()).setConfigurationFilters(configurationFilters).setUncompressedExtensions(uncompressedExtensions).setJavaPackage(resourceContainer.getJavaPackage()).setDebug(ruleContext.getConfiguration().getCompilationMode() != CompilationMode.OPT).withPrimary(resourceContainer).withDependencies(resourceContainers).setWorkingDirectory(ruleContext.getUniqueDirectory("_resources")).setDensities(densities).setProguardOut(proguardCfg).setApplicationId(applicationId).setVersionCode(versionCode).setVersionName(versionName);
  if (!incremental) {
    builder.setRTxtOut(resourceContainer.getRTxt()).setSymbolsTxt(resourceContainer.getSymbolsTxt()).setSourceJarOut(resourceContainer.getJavaSourceJar());
  }
  ResourceContainer processed=builder.build(ruleContext);
  NestedSet<ResourceContainer> transitiveResources=NestedSetBuilder.<ResourceContainer>naiveLinkOrder().addAll(resourceContainers).add(processed).build();
  return new ResourceApk(resourceApk,processed.getJavaSourceJar(),transitiveResources,processed,manifest,proguardCfg,false);
}
