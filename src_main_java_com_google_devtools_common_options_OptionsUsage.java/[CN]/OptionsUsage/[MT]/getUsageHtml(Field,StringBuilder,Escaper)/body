{
  String plainFlagName=optionField.getAnnotation(Option.class).name();
  String flagName=getFlagName(optionField);
  String valueDescription=optionField.getAnnotation(Option.class).valueHelp();
  String typeDescription=getTypeDescription(optionField);
  Option annotation=optionField.getAnnotation(Option.class);
  usage.append("<dt><code><a name=\"flag--").append(plainFlagName).append("\"></a>--");
  usage.append(flagName);
  if (OptionsParserImpl.isBooleanField(optionField) || OptionsParserImpl.isVoidField(optionField)) {
  }
 else   if (!valueDescription.isEmpty()) {
    usage.append("=").append(escaper.escape(valueDescription));
  }
 else   if (!typeDescription.isEmpty()) {
    usage.append("=&lt;").append(escaper.escape(typeDescription)).append("&gt");
  }
  usage.append("</code>");
  if (annotation.abbrev() != '\0') {
    usage.append(" [<code>-").append(annotation.abbrev()).append("</code>]");
  }
  if (annotation.allowMultiple()) {
    usage.append(" multiple uses are accumulated");
  }
 else {
    String defaultValueString=OptionsParserImpl.getDefaultOptionString(optionField);
    if (OptionsParserImpl.isVoidField(optionField)) {
    }
 else     if (OptionsParserImpl.isSpecialNullDefault(defaultValueString,optionField)) {
      usage.append(" default: see description");
    }
 else {
      usage.append(" default: \"").append(escaper.escape(defaultValueString)).append("\"");
    }
  }
  usage.append("</dt>\n");
  usage.append("<dd>\n");
  if (!annotation.help().isEmpty()) {
    usage.append(paragraphFill(escaper.escape(annotation.help()),0,80));
    usage.append('\n');
  }
  if (annotation.expansion().length > 0) {
    usage.append("<br/>\n");
    StringBuilder expandsMsg=new StringBuilder("Expands to:<br/>\n");
    for (    String exp : annotation.expansion()) {
      expandsMsg.append("&nbsp;&nbsp;<code>").append(escaper.escape(exp)).append("</code><br/>\n");
    }
    usage.append(expandsMsg.toString());
    usage.append('\n');
  }
  usage.append("</dd>\n");
}
