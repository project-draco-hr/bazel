{
  PackageContext context=getContext(env,ast);
  Preconditions.checkState(namedArgs[0] != null);
  String name=Type.STRING.convert(namedArgs[0],"'package_group' argument");
  List<String> packages=namedArgs[1] == null ? Collections.<String>emptyList() : Type.STRING_LIST.convert(namedArgs[1],"'package_group' argument");
  List<Label> includes=namedArgs[2] == null ? Collections.<Label>emptyList() : Type.LABEL_LIST.convert(namedArgs[2],"'package_group argument'",context.pkgBuilder.getBuildFileLabel());
  try {
    context.pkgBuilder.addPackageGroup(name,packages,includes,context.eventHandler,ast.getLocation());
    return Environment.NONE;
  }
 catch (  Label.SyntaxException e) {
    throw new EvalException(ast.getLocation(),"package group has invalid name: " + name + ": "+ e.getMessage());
  }
catch (  Package.NameConflictException e) {
    throw new EvalException(ast.getLocation(),e.getMessage());
  }
}
