{
  try {
    Globber.Token globToken=context.globber.runAsync(includes,excludes,excludeDirs);
    List<String> matches=context.globber.fetch(globToken);
    return GlobList.captureResults(includes,excludes,matches);
  }
 catch (  IOException expected) {
    context.eventHandler.handle(Event.error(ast.getLocation(),"error globbing [" + Joiner.on(", ").join(includes) + "]: "+ expected.getMessage()));
    context.pkgBuilder.setContainsTemporaryErrors();
    return GlobList.captureResults(includes,excludes,ImmutableList.<String>of());
  }
catch (  GlobCache.BadGlobException e) {
    throw new EvalException(ast.getLocation(),e.getMessage());
  }
}
