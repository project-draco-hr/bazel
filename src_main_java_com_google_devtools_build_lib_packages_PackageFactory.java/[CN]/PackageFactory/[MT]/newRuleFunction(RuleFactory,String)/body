{
  return new BuiltinFunction(ruleClass,FunctionSignature.KWARGS,BuiltinFunction.USE_AST_ENV){
    @SuppressWarnings("unchecked") public Environment.NoneType invoke(    Map<String,Object> kwargs,    FuncallExpression ast,    Environment env) throws EvalException {
      try {
        addRule(ruleFactory,ruleClass,getContext(env,ast),kwargs,ast);
      }
 catch (      RuleFactory.InvalidRuleException|Package.NameConflictException e) {
        throw new EvalException(ast.getLocation(),e.getMessage());
      }
      return Environment.NONE;
    }
  }
;
}
