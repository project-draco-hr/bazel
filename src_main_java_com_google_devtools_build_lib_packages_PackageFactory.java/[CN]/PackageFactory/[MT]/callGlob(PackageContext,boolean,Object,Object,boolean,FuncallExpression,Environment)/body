{
  PackageContext context;
  if (originalContext == null) {
    Preconditions.checkArgument(!async);
    context=getContext(env,ast);
  }
 else {
    context=originalContext;
  }
  List<String> includes=Type.STRING_LIST.convert(include,"'glob' argument");
  List<String> excludes=Type.STRING_LIST.convert(exclude,"'glob' argument");
  GlobList<String> globList;
  if (async) {
    try {
      context.globber.runAsync(includes,excludes,excludeDirs);
    }
 catch (    BadGlobException e) {
    }
    globList=GlobList.captureResults(includes,excludes,ImmutableList.<String>of());
  }
 else {
    globList=handleGlob(includes,excludes,excludeDirs,context,ast);
  }
  return new MutableList(globList,env);
}
