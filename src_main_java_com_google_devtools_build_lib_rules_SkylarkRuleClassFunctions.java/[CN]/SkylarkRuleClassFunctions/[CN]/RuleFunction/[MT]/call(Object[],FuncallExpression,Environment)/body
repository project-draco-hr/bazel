{
  env.checkLoadingPhase(getName(),ast.getLocation());
  if (ruleClass == null) {
    throw new EvalException(ast.getLocation(),"Invalid rule class hasn't been exported by a Skylark file");
  }
  for (  Attribute attribute : ruleClass.getAttributes()) {
    for (    Map.Entry<String,ImmutableSet<String>> attrRequirements : attribute.getRequiredAspectParameters().entrySet()) {
      for (      String required : attrRequirements.getValue()) {
        if (!ruleClass.hasAttr(required,Type.STRING)) {
          throw new EvalException(definitionLocation,String.format("Aspect %s requires rule %s to specify attribute '%s' with type string.",attrRequirements.getKey(),ruleClass.getName(),required));
        }
      }
    }
  }
  BuildLangTypedAttributeValuesMap attributeValues=new BuildLangTypedAttributeValuesMap((Map<String,Object>)args[0]);
  try {
    PackageContext pkgContext=(PackageContext)env.lookup(PackageFactory.PKG_CONTEXT);
    return RuleFactory.createAndAddRule(pkgContext,ruleClass,attributeValues,ast,env,pkgContext.getAttributeContainerFactory().apply(ruleClass));
  }
 catch (  InvalidRuleException|NameConflictException e) {
    throw new EvalException(ast.getLocation(),e.getMessage());
  }
catch (  NoSuchVariableException e) {
    throw new EvalException(ast.getLocation(),"Cannot instantiate a rule when loading a .bzl file. Rules can only called from " + "a BUILD file (possibly via a macro).");
  }
}
