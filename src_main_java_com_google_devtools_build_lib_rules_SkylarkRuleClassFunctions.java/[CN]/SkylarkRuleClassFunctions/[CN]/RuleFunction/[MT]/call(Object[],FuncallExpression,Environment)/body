{
  env.checkLoadingPhase(getName(),ast.getLocation());
  try {
    if (ruleClassName == null || skylarkFile == null) {
      throw new EvalException(ast.getLocation(),"Invalid rule class hasn't been exported by a Skylark file");
    }
    if (type == RuleClassType.TEST != TargetUtils.isTestRuleName(ruleClassName)) {
      throw new EvalException(ast.getLocation(),"Invalid rule class name '" + ruleClassName + "', test rule class names must end with '_test' and other rule classes must not");
    }
    RuleClass ruleClass=builder.build(ruleClassName);
    PackageContext pkgContext=(PackageContext)env.lookup(PackageFactory.PKG_CONTEXT);
    return RuleFactory.createAndAddRule(pkgContext,ruleClass,addGeneratorAttributesForMacros((Map<String,Object>)args[0],env),ast);
  }
 catch (  InvalidRuleException|NameConflictException|NoSuchVariableException e) {
    throw new EvalException(ast.getLocation(),e.getMessage());
  }
}
