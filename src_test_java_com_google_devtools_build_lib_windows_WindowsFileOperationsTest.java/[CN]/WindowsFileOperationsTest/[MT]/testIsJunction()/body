{
  final Map<String,String> junctions=new HashMap<>();
  junctions.put("shrtpath/a","shrttrgt");
  junctions.put("shrtpath/b","longtargetpath");
  junctions.put("shrtpath/c","longta~1");
  junctions.put("longlinkpath/a","shrttrgt");
  junctions.put("longlinkpath/b","longtargetpath");
  junctions.put("longlinkpath/c","longta~1");
  junctions.put("abbrev~1/a","shrttrgt");
  junctions.put("abbrev~1/b","longtargetpath");
  junctions.put("abbrev~1/c","longta~1");
  String root=scratchDir("shrtpath").getParent().toAbsolutePath().toString();
  scratchDir("longlinkpath");
  scratchDir("abbreviated");
  scratchDir("control/a");
  scratchDir("control/b");
  scratchDir("control/c");
  scratchFile("shrttrgt/file1.txt","hello");
  scratchFile("longtargetpath/file2.txt","hello");
  createJunctions(junctions);
  assertThat(WindowsFileOperations.isJunction(root + "/shrtpath/a")).isTrue();
  assertThat(WindowsFileOperations.isJunction(root + "/shrtpath/b")).isTrue();
  assertThat(WindowsFileOperations.isJunction(root + "/shrtpath/c")).isTrue();
  assertThat(WindowsFileOperations.isJunction(root + "/longlinkpath/a")).isTrue();
  assertThat(WindowsFileOperations.isJunction(root + "/longlinkpath/b")).isTrue();
  assertThat(WindowsFileOperations.isJunction(root + "/longlinkpath/c")).isTrue();
  assertThat(WindowsFileOperations.isJunction(root + "/longli~1/a")).isTrue();
  assertThat(WindowsFileOperations.isJunction(root + "/longli~1/b")).isTrue();
  assertThat(WindowsFileOperations.isJunction(root + "/longli~1/c")).isTrue();
  assertThat(WindowsFileOperations.isJunction(root + "/abbreviated/a")).isTrue();
  assertThat(WindowsFileOperations.isJunction(root + "/abbreviated/b")).isTrue();
  assertThat(WindowsFileOperations.isJunction(root + "/abbreviated/c")).isTrue();
  assertThat(WindowsFileOperations.isJunction(root + "/abbrev~1/a")).isTrue();
  assertThat(WindowsFileOperations.isJunction(root + "/abbrev~1/b")).isTrue();
  assertThat(WindowsFileOperations.isJunction(root + "/abbrev~1/c")).isTrue();
  assertThat(WindowsFileOperations.isJunction(root + "/control/a")).isFalse();
  assertThat(WindowsFileOperations.isJunction(root + "/control/b")).isFalse();
  assertThat(WindowsFileOperations.isJunction(root + "/control/c")).isFalse();
  assertThat(WindowsFileOperations.isJunction(root + "/shrttrgt/file1.txt")).isFalse();
  assertThat(WindowsFileOperations.isJunction(root + "/longtargetpath/file2.txt")).isFalse();
  assertThat(WindowsFileOperations.isJunction(root + "/longta~1/file2.txt")).isFalse();
  try {
    WindowsFileOperations.isJunction(root + "/non-existent");
    fail("expected to throw");
  }
 catch (  IOException e) {
    assertThat(e.getMessage()).contains("GetFileAttributesA");
  }
  assertThat(Arrays.asList(new File(root + "/shrtpath/a").list())).containsExactly("file1.txt");
  assertThat(Arrays.asList(new File(root + "/shrtpath/b").list())).containsExactly("file2.txt");
  assertThat(Arrays.asList(new File(root + "/shrtpath/c").list())).containsExactly("file2.txt");
  assertThat(Arrays.asList(new File(root + "/longlinkpath/a").list())).containsExactly("file1.txt");
  assertThat(Arrays.asList(new File(root + "/longlinkpath/b").list())).containsExactly("file2.txt");
  assertThat(Arrays.asList(new File(root + "/longlinkpath/c").list())).containsExactly("file2.txt");
  assertThat(Arrays.asList(new File(root + "/abbreviated/a").list())).containsExactly("file1.txt");
  assertThat(Arrays.asList(new File(root + "/abbreviated/b").list())).containsExactly("file2.txt");
  assertThat(Arrays.asList(new File(root + "/abbreviated/c").list())).containsExactly("file2.txt");
}
