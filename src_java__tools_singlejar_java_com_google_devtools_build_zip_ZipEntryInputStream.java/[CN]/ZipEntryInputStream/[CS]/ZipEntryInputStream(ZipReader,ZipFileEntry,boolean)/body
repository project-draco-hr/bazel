{
  stream=zipReader.getStreamAt(zipEntry.getLocalHeaderOffset());
  byte[] fileHeader=new byte[LocalFileHeader.FIXED_DATA_SIZE];
  ZipUtil.readFully(stream,fileHeader);
  if (!ZipUtil.arrayStartsWith(fileHeader,ZipUtil.intToLittleEndian(LocalFileHeader.SIGNATURE))) {
    throw new ZipException(String.format("The file '%s' is not a correctly formatted zip file: " + "Expected a File Header at file offset %d, but was not present.",zipReader.getFilename(),zipEntry.getLocalHeaderOffset()));
  }
  int nameLength=ZipUtil.getUnsignedShort(fileHeader,LocalFileHeader.FILENAME_LENGTH_OFFSET);
  int extraFieldLength=ZipUtil.getUnsignedShort(fileHeader,LocalFileHeader.EXTRA_FIELD_LENGTH_OFFSET);
  ZipUtil.readFully(stream,new byte[nameLength + extraFieldLength]);
  if (raw) {
    rem=zipEntry.getCompressedSize();
  }
 else {
    rem=zipEntry.getSize();
  }
  if (!raw && zipEntry.getMethod() == Compression.DEFLATED) {
    stream=new InflaterInputStream(stream,new Inflater(true));
  }
}
