{
  SkylarkAspectLoadingKey aspectLoadingKey=(SkylarkAspectLoadingKey)skyKey.argument();
  String skylarkValueName=aspectLoadingKey.getSkylarkValueName();
  PathFragment extensionFile=aspectLoadingKey.getExtensionFile();
  ImmutableMap<PathFragment,Label> labelLookupMap;
  try {
    labelLookupMap=SkylarkImportLookupFunction.labelsForAbsoluteImports(ImmutableSet.of(extensionFile),env);
  }
 catch (  SkylarkImportFailedException e) {
    env.getListener().handle(Event.error(e.getMessage()));
    throw new LoadSkylarkAspectFunctionException(new AspectCreationException(e.getMessage()));
  }
  if (labelLookupMap == null) {
    return null;
  }
  SkylarkAspect skylarkAspect=null;
  try {
    skylarkAspect=AspectFunction.loadSkylarkAspect(env,labelLookupMap.get(extensionFile),skylarkValueName);
  }
 catch (  AspectCreationException e) {
    throw new LoadSkylarkAspectFunctionException(e);
  }
  if (skylarkAspect == null) {
    return null;
  }
  SkyKey aspectKey=AspectValue.key(aspectLoadingKey.getTargetLabel(),aspectLoadingKey.getTargetConfiguration(),skylarkAspect.getAspectClass(),AspectParameters.EMPTY);
  return env.getValue(aspectKey);
}
