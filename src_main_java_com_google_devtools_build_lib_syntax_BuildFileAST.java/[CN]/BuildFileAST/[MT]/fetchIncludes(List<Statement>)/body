{
  ImmutableSet.Builder<Label> result=new ImmutableSet.Builder<>();
  for (  Statement stmt : stmts) {
    if (!(stmt instanceof ExpressionStatement)) {
      continue;
    }
    ExpressionStatement expr=(ExpressionStatement)stmt;
    if (!(expr.getExpression() instanceof FuncallExpression)) {
      continue;
    }
    FuncallExpression funcall=(FuncallExpression)expr.getExpression();
    if (!funcall.getFunction().getName().equals("include") || funcall.getArguments().size() != 1) {
      continue;
    }
    Expression arg=funcall.getArguments().get(0).value;
    if (!(arg instanceof StringLiteral)) {
      continue;
    }
    try {
      Label label=Label.parseAbsolute(((StringLiteral)arg).getValue());
      result.add(label);
    }
 catch (    Label.SyntaxException e) {
    }
  }
  return result.build();
}
