{
  Map<Label,Collection<Artifact>> locationMap=new HashMap<>();
  for (  OutputFile out : ruleContext.getRule().getOutputFiles()) {
    mapGet(locationMap,out.getLabel()).add(ruleContext.createOutputArtifact(out));
  }
  if (ruleContext.getRule().isAttrDefined("srcs",Type.LABEL_LIST)) {
    for (    FileProvider src : ruleContext.getPrerequisites("srcs",Mode.TARGET,FileProvider.class)) {
      Iterables.addAll(mapGet(locationMap,src.getLabel()),src.getFilesToBuild());
    }
  }
  List<FilesToRunProvider> depsDataAndTools=new ArrayList<>();
  if (ruleContext.getRule().isAttrDefined("deps",Type.LABEL_LIST)) {
    Iterables.addAll(depsDataAndTools,ruleContext.getPrerequisites("deps",Mode.DONT_CHECK,FilesToRunProvider.class));
  }
  if (allowDataAttributeEntriesInLabel && ruleContext.getRule().isAttrDefined("data",Type.LABEL_LIST)) {
    Iterables.addAll(depsDataAndTools,ruleContext.getPrerequisites("data",Mode.DATA,FilesToRunProvider.class));
  }
  if (ruleContext.getRule().isAttrDefined("tools",Type.LABEL_LIST)) {
    Iterables.addAll(depsDataAndTools,ruleContext.getPrerequisites("tools",Mode.HOST,FilesToRunProvider.class));
  }
  for (  FilesToRunProvider dep : depsDataAndTools) {
    Label label=dep.getLabel();
    Artifact executableArtifact=dep.getExecutable();
    if (executableArtifact != null) {
      mapGet(locationMap,label).add(executableArtifact);
    }
 else {
      mapGet(locationMap,label).addAll(dep.getFilesToRun());
    }
  }
  return locationMap;
}
