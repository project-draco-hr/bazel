{
  Map<String,Object> lateBoundDefaults=Maps.newHashMap();
  for (  Fragment fragment : fragments) {
    lateBoundDefaults.putAll(fragment.lateBoundOptionDefaults());
  }
  ImmutableMap.Builder<String,OptionDetails> map=ImmutableMap.builder();
  try {
    for (    FragmentOptions options : buildOptions.getOptions()) {
      for (      Field field : options.getClass().getFields()) {
        if (field.isAnnotationPresent(Option.class)) {
          Option option=field.getAnnotation(Option.class);
          Object value=field.get(options);
          if (value == null) {
            if (lateBoundDefaults.containsKey(option.name())) {
              value=lateBoundDefaults.get(option.name());
            }
 else             if (!option.defaultValue().equals("null")) {
              value=option.defaultValue();
            }
          }
          map.put(option.name(),new OptionDetails(options.getClass(),value,option.allowMultiple()));
        }
      }
    }
  }
 catch (  IllegalAccessException e) {
    throw new IllegalStateException("Unexpected illegal access trying to create this configuration's options map: ",e);
  }
  return map.build();
}
