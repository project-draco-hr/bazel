def WriteAsmFiles(perlasms):
    'Generates asm files from perlasm directives for each supported OS x\n  platform combination.'
    asmfiles = {}
    for osarch in OS_ARCH_COMBOS:
        (osname, arch, perlasm_style, extra_args, asm_ext) = osarch
        key = (osname, arch)
        outDir = ('%s-%s' % key)
        for perlasm in perlasms:
            filename = os.path.basename(perlasm['input'])
            output = perlasm['output']
            if (not output.startswith('src')):
                raise ValueError(('output missing src: %s' % output))
            output = os.path.join(outDir, output[4:])
            if output.endswith('-armx.${ASM_EXT}'):
                output = output.replace('-armx', ('-armx64' if (arch == 'aarch64') else '-armx32'))
            output = output.replace('${ASM_EXT}', asm_ext)
            if (arch in ArchForAsmFilename(filename)):
                PerlAsm(output, perlasm['input'], perlasm_style, (perlasm['extra_args'] + extra_args))
                asmfiles.setdefault(key, []).append(output)
    for (key, non_perl_asm_files) in NON_PERL_FILES.iteritems():
        asmfiles.setdefault(key, []).extend(non_perl_asm_files)
    return asmfiles
