def WriteFiles(self, files, asm_outputs):
    with open('boringssl.gypi', 'w+') as gypi:
        gypi.write((self.header + "{\n  'variables': {\n"))
        self.PrintVariableSection(gypi, 'boringssl_ssl_sources', files['ssl'])
        self.PrintVariableSection(gypi, 'boringssl_crypto_sources', files['crypto'])
        for ((osname, arch), asm_files) in asm_outputs:
            self.PrintVariableSection(gypi, ('boringssl_%s_%s_sources' % (osname, arch)), asm_files)
        gypi.write('  }\n}\n')
    with open('boringssl_tests.gypi', 'w+') as test_gypi:
        test_gypi.write((self.header + "{\n  'targets': [\n"))
        test_names = []
        for test in sorted(files['test']):
            test_name = ('boringssl_%s' % os.path.splitext(os.path.basename(test))[0])
            test_gypi.write(("    {\n      'target_name': '%s',\n      'type': 'executable',\n      'dependencies': [\n        'boringssl.gyp:boringssl',\n      ],\n      'sources': [\n        '%s',\n        '<@(boringssl_test_support_sources)',\n      ],\n      # TODO(davidben): Fix size_t truncations in BoringSSL.\n      # https://crbug.com/429039\n      'msvs_disabled_warnings': [ 4267, ],\n    },\n" % (test_name, test)))
            test_names.append(test_name)
        test_names.sort()
        test_gypi.write("  ],\n  'variables': {\n")
        self.PrintVariableSection(test_gypi, 'boringssl_test_support_sources', files['test_support'])
        test_gypi.write("    'boringssl_test_targets': [\n")
        for test in test_names:
            test_gypi.write(("      '%s',\n" % test))
        test_gypi.write('    ],\n  }\n}\n')
