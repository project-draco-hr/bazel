{
  final Thread mainThread=Thread.currentThread();
  final ThreadPoolExecutor executor=(ThreadPoolExecutor)Executors.newFixedThreadPool(10);
  Predicate<Path> interrupterPredicate=new Predicate<Path>(){
    @Override public boolean apply(    Path input){
      mainThread.interrupt();
      return true;
    }
  }
;
  Future<?> globResult=null;
  try {
    globResult=new UnixGlob.Builder(tmpPath).addPattern("**").setDirectoryFilter(interrupterPredicate).setThreadPool(executor).globAsync(true);
    globResult.get();
    fail();
  }
 catch (  InterruptedException e) {
  }
  globResult.cancel(true);
  try {
    Uninterruptibles.getUninterruptibly(globResult);
    fail();
  }
 catch (  CancellationException e) {
  }
  Thread.interrupted();
  assertFalse(executor.isShutdown());
  executor.shutdown();
  assertTrue(executor.awaitTermination(TestUtils.WAIT_TIMEOUT_SECONDS,TimeUnit.SECONDS));
}
