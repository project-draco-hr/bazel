{
  SkyframeBuildView view=buildViewProvider.getSkyframeBuildView();
  NestedSetBuilder<Package> transitivePackages=NestedSetBuilder.stableOrder();
  NestedSetBuilder<Label> transitiveLoadingRootCauses=NestedSetBuilder.stableOrder();
  ConfiguredTargetKey configuredTargetKey=(ConfiguredTargetKey)key.argument();
  LabelAndConfiguration lc=LabelAndConfiguration.of(configuredTargetKey.getLabel(),configuredTargetKey.getConfiguration());
  BuildConfiguration configuration=lc.getConfiguration();
  PackageValue packageValue=(PackageValue)env.getValue(PackageValue.key(lc.getLabel().getPackageIdentifier()));
  if (packageValue == null) {
    return null;
  }
  Package pkg=packageValue.getPackage();
  if (pkg.containsErrors()) {
    throw new ConfiguredTargetFunctionException(new BuildFileContainsErrorsException(lc.getLabel().getPackageIdentifier()));
  }
  Target target;
  try {
    target=packageValue.getPackage().getTarget(lc.getLabel().getName());
  }
 catch (  NoSuchTargetException e) {
    throw new ConfiguredTargetFunctionException(e);
  }
  transitivePackages.add(packageValue.getPackage());
  if (!target.isConfigurable()) {
    configuration=null;
  }
  SkyframeDependencyResolver resolver=view.createDependencyResolver(env);
  TargetAndConfiguration ctgValue=new TargetAndConfiguration(target,configuration);
  try {
    Set<ConfigMatchingProvider> configConditions=getConfigConditions(ctgValue.getTarget(),env,resolver,ctgValue,transitivePackages,transitiveLoadingRootCauses);
    if (env.valuesMissing()) {
      return null;
    }
    ListMultimap<Attribute,ConfiguredTarget> depValueMap=computeDependencies(env,resolver,ctgValue,null,configConditions,ruleClassProvider,view.getHostConfiguration(configuration),transitivePackages,transitiveLoadingRootCauses);
    if (env.valuesMissing()) {
      return null;
    }
    if (!transitiveLoadingRootCauses.isEmpty()) {
      throw new ConfiguredTargetFunctionException(new ConfiguredValueCreationException(transitiveLoadingRootCauses.build()));
    }
    Preconditions.checkNotNull(depValueMap);
    ConfiguredTargetValue ans=createConfiguredTarget(view,env,target,configuration,depValueMap,configConditions,transitivePackages);
    return ans;
  }
 catch (  DependencyEvaluationException e) {
    if (e.getCause() instanceof ConfiguredValueCreationException) {
      throw new ConfiguredTargetFunctionException((ConfiguredValueCreationException)e.getCause());
    }
 else {
      InvalidConfigurationException cause=(InvalidConfigurationException)e.getCause();
      throw new ConfiguredTargetFunctionException(new ConfiguredValueCreationException(cause.getMessage(),target.getLabel()));
    }
  }
catch (  AspectCreationException e) {
    Label analysisRootCause=target.getLabel();
    if (e.getAnalysisRootCause() != null) {
      analysisRootCause=e.getAnalysisRootCause();
    }
    throw new ConfiguredTargetFunctionException(new ConfiguredValueCreationException(e.getMessage(),analysisRootCause));
  }
}
