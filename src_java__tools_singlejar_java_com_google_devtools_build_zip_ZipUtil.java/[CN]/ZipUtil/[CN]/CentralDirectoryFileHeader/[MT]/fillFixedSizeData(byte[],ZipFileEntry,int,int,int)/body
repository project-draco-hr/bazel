{
  intToLittleEndian(buf,SIGNATURE_OFFSET,SIGNATURE);
  shortToLittleEndian(buf,VERSION_OFFSET,entry.getVersion());
  shortToLittleEndian(buf,VERSION_NEEDED_OFFSET,entry.getVersionNeeded());
  shortToLittleEndian(buf,FLAGS_OFFSET,entry.getFlags());
  shortToLittleEndian(buf,METHOD_OFFSET,(short)(entry.getMethod().getValue() & 0xffff));
  intToLittleEndian(buf,MOD_TIME_OFFSET,unixToDosTime(entry.getTime()));
  intToLittleEndian(buf,CRC_OFFSET,(int)(entry.getCrc() & 0xffffffff));
  intToLittleEndian(buf,COMPRESSED_SIZE_OFFSET,(int)(entry.getCompressedSize() & 0xffffffff));
  intToLittleEndian(buf,UNCOMPRESSED_SIZE_OFFSET,(int)(entry.getSize() & 0xffffffff));
  shortToLittleEndian(buf,FILENAME_LENGTH_OFFSET,(short)(nameLength & 0xffff));
  shortToLittleEndian(buf,EXTRA_FIELD_LENGTH_OFFSET,(short)(extraLength & 0xffff));
  shortToLittleEndian(buf,COMMENT_LENGTH_OFFSET,(short)(commentLength & 0xffff));
  shortToLittleEndian(buf,DISK_START_OFFSET,(short)0);
  shortToLittleEndian(buf,INTERNAL_ATTRIBUTES_OFFSET,entry.getInternalAttributes());
  intToLittleEndian(buf,EXTERNAL_ATTRIBUTES_OFFSET,entry.getExternalAttributes());
  intToLittleEndian(buf,LOCAL_HEADER_OFFSET_OFFSET,(int)(entry.getLocalHeaderOffset() & 0xffffffff));
}
