{
  buildFile=scratch.file("isolated/BUILD","# contents don't matter in this test");
  scratch.file("isolated/sub/BUILD","# contents don't matter in this test");
  packageDirectory=buildFile.getParentDirectory();
  scratch.file("isolated/first.txt","# this is first.txt");
  scratch.file("isolated/second.txt","# this is second.txt");
  scratch.file("isolated/first.js","# this is first.js");
  scratch.file("isolated/second.js","# this is second.js");
  scratch.file("isolated/foo/first.js","# this is foo/first.js");
  scratch.file("isolated/foo/second.js","# this is foo/second.js");
  scratch.file("isolated/bar/first.js","# this is bar/first.js");
  scratch.file("isolated/bar/second.js","# this is bar/second.js");
  scratch.file("isolated/sub/sub.js","# this is sub/sub.js");
  cache=new GlobCache(packageDirectory,PackageIdentifier.createInDefaultRepo("isolated"),new CachingPackageLocator(){
    @Override public Path getBuildFileForPackage(    PackageIdentifier packageId){
      String packageName=packageId.getPackageFragment().getPathString();
      if (packageName.equals("isolated")) {
        return scratch.resolve("isolated/BUILD");
      }
 else       if (packageName.equals("isolated/sub")) {
        return scratch.resolve("isolated/sub/BUILD");
      }
 else {
        return null;
      }
    }
  }
,null,TestUtils.getPool());
}
