{
  RuleClass ruleClassC=new RuleClass("ruleC",false,false,false,false,false,false,ImplicitOutputsFunction.fromTemplates("foo-%{name}.bar","lib%{name}-wazoo-%{name}.mumble","stuff-%{outs}-bar"),RuleClass.NO_CHANGE,DUMMY_CONFIGURED_TARGET_FACTORY,PredicatesWithMessage.<Rule>alwaysTrue(),PREFERRED_DEPENDENCY_PREDICATE,ImmutableSet.<Class<?>>of(),false,null,NO_EXTERNAL_BINDINGS,null,ImmutableSet.<Class<?>>of(),MissingFragmentPolicy.FAIL_ANALYSIS,true,attr("outs",OUTPUT_LIST).build());
  Map<String,Object> attributeValues=new HashMap<>();
  attributeValues.put("outs",Collections.singletonList("explicit_out"));
  Rule rule=createRule(ruleClassC,"myrule",attributeValues,testRuleLocation);
  Set<String> set=new HashSet<>();
  for (  OutputFile outputFile : rule.getOutputFiles()) {
    set.add(outputFile.getName());
    assertSame(rule,outputFile.getGeneratingRule());
  }
  assertThat(set).containsExactly("foo-myrule.bar","libmyrule-wazoo-myrule.mumble","stuff-explicit_out-bar","explicit_out");
}
