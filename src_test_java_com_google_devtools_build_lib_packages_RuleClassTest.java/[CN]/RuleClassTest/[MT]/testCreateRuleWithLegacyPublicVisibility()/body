{
  RuleClass ruleClass=new RuleClass("ruleVis",false,false,false,false,false,false,ImplicitOutputsFunction.NONE,RuleClass.NO_CHANGE,DUMMY_CONFIGURED_TARGET_FACTORY,PredicatesWithMessage.<Rule>alwaysTrue(),PREFERRED_DEPENDENCY_PREDICATE,ImmutableSet.<Class<?>>of(),null,NO_EXTERNAL_BINDINGS,null,ImmutableSet.<Class<?>>of(),MissingFragmentPolicy.FAIL_ANALYSIS,true,attr("visibility",LABEL_LIST).legacyAllowAnyFileType().build());
  Map<String,Object> attributeValues=new HashMap<>();
  attributeValues.put("visibility",Arrays.asList("//visibility:legacy_public"));
  reporter.removeHandler(failFastHandler);
  EventCollector collector=new EventCollector(EventKind.ERRORS);
  reporter.addHandler(collector);
  createRule(ruleClass,TEST_RULE_NAME,attributeValues,testRuleLocation);
  assertContainsEvent("//visibility:legacy_public only allowed in package declaration");
}
