{
  DashRequest request;
  try {
    request=new DashRequest(req);
  }
 catch (  IllegalArgumentException e) {
    response.setContentType("text/html");
    response.getWriter().println("Error: " + HtmlEscapers.htmlEscaper().escape(e.getMessage()));
    return;
  }
  Key buildKey=KeyFactory.createKey(DashRequest.KEY_KIND,request.getBuildId());
  BuildData.Builder data=BuildData.newBuilder();
  Query query=new Query(DashRequest.KEY_KIND).setFilter(new FilterPredicate(DashRequest.BUILD_ID,FilterOperator.EQUAL,request.getBuildId()));
  PreparedQuery preparedQuery=datastore.prepare(query);
  for (  Entity result : preparedQuery.asIterable()) {
    data.mergeFrom(BuildData.parseFrom(((Blob)result.getProperty(DashRequest.BUILD_DATA)).getBytes()));
  }
  VelocityEngine velocityEngine=new VelocityEngine();
  velocityEngine.init();
  Template template=velocityEngine.getTemplate("result.html");
  VelocityContext context=new VelocityContext();
  context.put("build_data",data);
  StringWriter writer=new StringWriter();
  template.merge(context,writer);
  response.setContentType("text/html");
  response.getWriter().println(writer.toString());
}
