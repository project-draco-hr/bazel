{
  if (pathEntriesWithoutDiffInformation.isEmpty() && Iterables.isEmpty(customDirtinessCheckers) && !externalFilesHelper.isExternalFileSeen()) {
    return;
  }
  buildDriver.evaluate(ImmutableList.<SkyKey>of(),false,DEFAULT_THREAD_COUNT,eventHandler);
  FilesystemValueChecker fsvc=new FilesystemValueChecker(tsgm,null);
  Set<Path> diffPackageRootsUnderWhichToCheck=new HashSet<>();
  for (  Pair<Path,DiffAwarenessManager.ProcessableModifiedFileSet> pair : pathEntriesWithoutDiffInformation) {
    diffPackageRootsUnderWhichToCheck.add(pair.getFirst());
  }
  Differencer.Diff diff=fsvc.getDirtyKeys(memoizingEvaluator.getValues(),new UnionDirtinessChecker(Iterables.concat(customDirtinessCheckers,ImmutableList.<SkyValueDirtinessChecker>of(new ExternalDirtinessChecker(pkgLocator.get()),new MissingDiffDirtinessChecker(diffPackageRootsUnderWhichToCheck)))));
  handleChangedFiles(diffPackageRootsUnderWhichToCheck,diff);
  for (  Pair<Path,DiffAwarenessManager.ProcessableModifiedFileSet> pair : pathEntriesWithoutDiffInformation) {
    pair.getSecond().markProcessed();
  }
}
