{
  List<SkyKey> depKeys=Lists.newArrayList();
  if (target instanceof Rule) {
    Map<Label,ValueOrException2<NoSuchPackageException,NoSuchTargetException>> labelDepMap=new HashMap<>(depMap.size());
    for (    Entry<SkyKey,ValueOrException2<NoSuchPackageException,NoSuchTargetException>> entry : depMap.entrySet()) {
      labelDepMap.put((Label)entry.getKey().argument(),entry.getValue());
    }
    Multimap<Attribute,Label> transitions=((Rule)target).getTransitions(DependencyFilter.NO_NODEP_ATTRIBUTES);
    for (    Entry<Attribute,Label> entry : transitions.entries()) {
      ValueOrException2<NoSuchPackageException,NoSuchTargetException> value=labelDepMap.get(entry.getValue());
      for (      Label label : getAspectLabels((Rule)target,entry.getKey(),entry.getValue(),value,env)) {
        depKeys.add(getKey(label));
      }
    }
  }
  return depKeys;
}
