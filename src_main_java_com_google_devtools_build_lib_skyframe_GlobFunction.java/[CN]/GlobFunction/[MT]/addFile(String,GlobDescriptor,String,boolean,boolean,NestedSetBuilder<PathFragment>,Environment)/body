{
  if (isDirectory && subdirPattern != null) {
    SkyKey subdirGlobKey=GlobValue.internalKey(glob.getPackageId(),glob.getPackageRoot(),glob.getSubdir().getRelative(fileName),subdirPattern,glob.excludeDirs());
    GlobValue subdirGlob=(GlobValue)env.getValue(subdirGlobKey);
    if (subdirGlob == null) {
      return;
    }
    matches.addTransitive(subdirGlob.getMatches());
  }
  if (directResult && !(isDirectory && glob.excludeDirs())) {
    if (isDirectory) {
      PathFragment directory=glob.getPackageId().getPackageFragment().getRelative(glob.getSubdir()).getRelative(fileName);
      PackageLookupValue pkgLookupValue=(PackageLookupValue)env.getValue(PackageLookupValue.key(PackageIdentifier.create(glob.getPackageId().getRepository(),directory)));
      if (pkgLookupValue == null) {
        return;
      }
      if (pkgLookupValue.packageExists()) {
        return;
      }
    }
    matches.add(glob.getSubdir().getRelative(fileName));
  }
}
