{
  final Thread mainThread=Thread.currentThread();
  final CountDownLatch latch1=new CountDownLatch(1);
  final CountDownLatch latch2=new CountDownLatch(1);
  final boolean[] workerThreadCompleted={false};
  final ConcreteQueueVisitor visitor=new ConcreteQueueVisitor();
  visitor.enqueue(new Runnable(){
    @Override public void run(){
      try {
        latch1.countDown();
        latch2.await();
        workerThreadCompleted[0]=true;
      }
 catch (      InterruptedException e) {
      }
    }
  }
);
  TestThread interrupterThread=new TestThread(){
    @Override public void runTest() throws Exception {
      latch1.await();
      mainThread.interrupt();
      assertTrue(visitor.awaitInterruptionForTestingOnly(TestUtils.WAIT_TIMEOUT_MILLISECONDS,TimeUnit.MILLISECONDS));
      latch2.countDown();
    }
  }
;
  interrupterThread.start();
  try {
    visitor.work(false);
    fail();
  }
 catch (  InterruptedException e) {
  }
  interrupterThread.joinAndAssertState(400);
  assertTrue(workerThreadCompleted[0]);
}
