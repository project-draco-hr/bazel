{
  Set<T> fromValue=QueryUtil.evalAll(env,args.get(0).getExpression());
  Set<T> toValue=QueryUtil.evalAll(env,args.get(1).getExpression());
  env.buildTransitiveClosure(expression,fromValue,Integer.MAX_VALUE);
  Set<T> reachableFromX=env.getTransitiveClosure(fromValue);
  Predicate<T> reachable=Predicates.in(reachableFromX);
  Uniquifier<T> uniquifier=env.createUniquifier();
  Collection<T> result=uniquifier.unique(intersection(reachableFromX,toValue));
  callback.process(result);
  Collection<T> worklist=result;
  while (!worklist.isEmpty()) {
    Collection<T> reverseDeps=env.getReverseDeps(worklist);
    worklist=uniquifier.unique(Iterables.filter(reverseDeps,reachable));
    callback.process(worklist);
  }
}
