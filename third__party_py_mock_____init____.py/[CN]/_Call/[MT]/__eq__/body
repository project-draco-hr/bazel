def __eq__(self, other):
    if (other is ANY):
        return True
    try:
        len_other = len(other)
    except TypeError:
        return False
    self_name = ''
    if (len(self) == 2):
        (self_args, self_kwargs) = self
    else:
        (self_name, self_args, self_kwargs) = self
    other_name = ''
    if (len_other == 0):
        (other_args, other_kwargs) = ((), {})
    elif (len_other == 3):
        (other_name, other_args, other_kwargs) = other
    elif (len_other == 1):
        (value,) = other
        if isinstance(value, tuple):
            other_args = value
            other_kwargs = {}
        elif isinstance(value, basestring):
            other_name = value
            (other_args, other_kwargs) = ((), {})
        else:
            other_args = ()
            other_kwargs = value
    else:
        (first, second) = other
        if isinstance(first, basestring):
            other_name = first
            if isinstance(second, tuple):
                (other_args, other_kwargs) = (second, {})
            else:
                (other_args, other_kwargs) = ((), second)
        else:
            (other_args, other_kwargs) = (first, second)
    if (self_name and (other_name != self_name)):
        return False
    return ((other_args, other_kwargs) == (self_args, self_kwargs))
