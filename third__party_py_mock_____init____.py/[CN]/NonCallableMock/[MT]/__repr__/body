def __repr__(self):
    _name_list = [self._mock_new_name]
    _parent = self._mock_new_parent
    last = self
    dot = '.'
    if (_name_list == ['()']):
        dot = ''
    seen = set()
    while (_parent is not None):
        last = _parent
        _name_list.append((_parent._mock_new_name + dot))
        dot = '.'
        if (_parent._mock_new_name == '()'):
            dot = ''
        _parent = _parent._mock_new_parent
        if (id(_parent) in seen):
            break
        seen.add(id(_parent))
    _name_list = list(reversed(_name_list))
    _first = (last._mock_name or 'mock')
    if (len(_name_list) > 1):
        if (_name_list[1] not in ('()', '().')):
            _first += '.'
    _name_list[0] = _first
    name = ''.join(_name_list)
    name_string = ''
    if (name not in ('mock', 'mock.')):
        name_string = (' name=%r' % name)
    spec_string = ''
    if (self._spec_class is not None):
        spec_string = ' spec=%r'
        if self._spec_set:
            spec_string = ' spec_set=%r'
        spec_string = (spec_string % self._spec_class.__name__)
    return ("<%s%s%s id='%s'>" % (type(self).__name__, name_string, spec_string, id(self)))
