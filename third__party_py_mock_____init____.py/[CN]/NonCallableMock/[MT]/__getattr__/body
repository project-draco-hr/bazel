def __getattr__(self, name):
    if (name == '_mock_methods'):
        raise AttributeError(name)
    elif (self._mock_methods is not None):
        if ((name not in self._mock_methods) or (name in _all_magics)):
            raise AttributeError(('Mock object has no attribute %r' % name))
    elif _is_magic(name):
        raise AttributeError(name)
    result = self._mock_children.get(name)
    if (result is _deleted):
        raise AttributeError(name)
    elif (result is None):
        wraps = None
        if (self._mock_wraps is not None):
            wraps = getattr(self._mock_wraps, name)
        result = self._get_child_mock(parent=self, name=name, wraps=wraps, _new_name=name, _new_parent=self)
        self._mock_children[name] = result
    elif isinstance(result, _SpecState):
        result = create_autospec(result.spec, result.spec_set, result.instance, result.parent, result.name)
        self._mock_children[name] = result
    return result
