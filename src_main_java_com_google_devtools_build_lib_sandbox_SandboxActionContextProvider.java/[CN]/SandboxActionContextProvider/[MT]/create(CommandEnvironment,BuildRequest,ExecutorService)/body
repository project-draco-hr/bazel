{
  boolean verboseFailures=buildRequest.getOptions(ExecutionOptions.class).verboseFailures;
  boolean unblockNetwork=buildRequest.getOptions(BuildConfiguration.Options.class).testArguments.contains("--wrapper_script_flag=--debug");
  Builder<ActionContext> strategies=ImmutableList.builder();
  if (OS.getCurrent() == OS.LINUX) {
    strategies.add(new LinuxSandboxedStrategy(buildRequest.getOptions(SandboxOptions.class),env.getClientEnv(),env.getDirectories(),backgroundWorkers,verboseFailures,unblockNetwork,env.getRuntime().getProductName()));
  }
 else   if (OS.getCurrent() == OS.DARWIN) {
    strategies.add(DarwinSandboxedStrategy.create(buildRequest.getOptions(SandboxOptions.class),env.getClientEnv(),env.getDirectories(),backgroundWorkers,verboseFailures,unblockNetwork,env.getRuntime().getProductName()));
  }
  return new SandboxActionContextProvider(strategies.build());
}
