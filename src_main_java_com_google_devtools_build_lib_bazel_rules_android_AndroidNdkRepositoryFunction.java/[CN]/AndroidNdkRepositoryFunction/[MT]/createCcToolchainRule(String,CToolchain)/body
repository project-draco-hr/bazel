{
  ToolPath gcc=null;
  for (  ToolPath toolPath : toolchain.getToolPathList()) {
    if ("gcc".equals(toolPath.getName())) {
      gcc=toolPath;
    }
  }
  checkNotNull(gcc,"gcc not found in crosstool toolpaths");
  String toolchainDirectory=NdkPaths.getToolchainDirectoryFromToolPath(gcc.getPath());
  String androidPlatformIncludes=NdkPaths.stripRepositoryPrefix(toolchain.getBuiltinSysroot()) + "/**/*";
  List<String> toolchainFileGlobPatterns=new ArrayList<>();
  toolchainFileGlobPatterns.add(androidPlatformIncludes);
  for (  String cxxFlag : toolchain.getUnfilteredCxxFlagList()) {
    if (!cxxFlag.startsWith("-")) {
      toolchainFileGlobPatterns.add(NdkPaths.stripRepositoryPrefix(cxxFlag) + "/**/*");
    }
  }
  int gccToolchainIndex=toolchain.getCompilerFlagList().indexOf("-gcc-toolchain");
  if (gccToolchainIndex > -1) {
    String gccToolchain=toolchain.getCompilerFlagList().get(gccToolchainIndex + 1);
    toolchainFileGlobPatterns.add(NdkPaths.stripRepositoryPrefix(gccToolchain) + "/**/*");
  }
  StringBuilder toolchainFileGlobs=new StringBuilder();
  for (  String toolchainFileGlobPattern : toolchainFileGlobPatterns) {
    toolchainFileGlobs.append(String.format("        \"%s\",\n",toolchainFileGlobPattern));
  }
  return ccToolchainTemplate.replace("%toolchainName%",toolchain.getToolchainIdentifier()).replace("%cpu%",toolchain.getTargetCpu()).replace("%dynamicRuntimeLibs%",toolchain.getDynamicRuntimesFilegroup()).replace("%staticRuntimeLibs%",toolchain.getStaticRuntimesFilegroup()).replace("%toolchainDirectory%",toolchainDirectory).replace("%toolchainFileGlobs%",toolchainFileGlobs.toString().trim());
}
