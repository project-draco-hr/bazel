{
  assertTrue(CollectionUtils.isImmutable(ImmutableList.of(1,2,3)));
  assertTrue(CollectionUtils.isImmutable(ImmutableSet.of(1,2,3)));
  NestedSet<Integer> ns=NestedSetBuilder.<Integer>compileOrder().add(1).add(2).add(3).build();
  assertTrue(CollectionUtils.isImmutable(ns));
  NestedSet<Integer> ns2=NestedSetBuilder.<Integer>linkOrder().add(1).add(2).add(3).build();
  assertTrue(CollectionUtils.isImmutable(ns2));
  IterablesChain<Integer> chain=IterablesChain.<Integer>builder().addElement(1).build();
  assertTrue(CollectionUtils.isImmutable(chain));
  assertFalse(CollectionUtils.isImmutable(Lists.newArrayList()));
  assertFalse(CollectionUtils.isImmutable(Lists.newLinkedList()));
  assertFalse(CollectionUtils.isImmutable(Sets.newHashSet()));
  assertFalse(CollectionUtils.isImmutable(Sets.newLinkedHashSet()));
  assertFalse(CollectionUtils.isImmutable(Iterables.concat(ns,ns2)));
  assertTrue(CollectionUtils.isImmutable(ImmutableIterable.from(Iterables.concat(ns,ns2))));
}
