{
  return new OutputFormatterCallback<Target>(){
    private Document doc;
    private Element queryElem;
    @Override public void start(){
      try {
        DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
        doc=factory.newDocumentBuilder().newDocument();
      }
 catch (      ParserConfigurationException e) {
        throw new IllegalStateException("XML output failed",e);
      }
      doc.setXmlVersion("1.1");
      queryElem=doc.createElement("query");
      queryElem.setAttribute("version","2");
      doc.appendChild(queryElem);
    }
    @Override protected void processOutput(    Iterable<Target> partialResult) throws IOException, InterruptedException {
      for (      Target target : partialResult) {
        queryElem.appendChild(createTargetElement(doc,target));
      }
    }
    @Override public void close() throws IOException {
      try {
        Transformer transformer=TransformerFactory.newInstance().newTransformer();
        transformer.setOutputProperty(OutputKeys.INDENT,"yes");
        transformer.transform(new DOMSource(doc),new StreamResult(out));
      }
 catch (      TransformerFactoryConfigurationError|TransformerException e) {
        throw new IllegalStateException("XML output failed",e);
      }
    }
  }
;
}
