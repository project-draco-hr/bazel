{
  this.xmlLineNumbers=options.xmlLineNumbers;
  this.showDefaultValues=options.xmlShowDefaultValues;
  this.relativeLocations=options.relativeLocations;
  this.dependencyFilter=OutputFormatter.getDependencyFilter(options);
  this.aspectResolver=aspectResolver;
  Document doc;
  try {
    DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
    doc=factory.newDocumentBuilder().newDocument();
  }
 catch (  ParserConfigurationException e) {
    throw new IllegalStateException("XML output failed",e);
  }
  doc.setXmlVersion("1.1");
  Element queryElem=doc.createElement("query");
  queryElem.setAttribute("version","2");
  doc.appendChild(queryElem);
  for (  Target target : result) {
    queryElem.appendChild(createTargetElement(doc,target));
  }
  try {
    Transformer transformer=TransformerFactory.newInstance().newTransformer();
    transformer.setOutputProperty(OutputKeys.INDENT,"yes");
    transformer.transform(new DOMSource(doc),new StreamResult(out));
  }
 catch (  TransformerFactoryConfigurationError|TransformerException e) {
    throw new IllegalStateException("XML output failed",e);
  }
}
