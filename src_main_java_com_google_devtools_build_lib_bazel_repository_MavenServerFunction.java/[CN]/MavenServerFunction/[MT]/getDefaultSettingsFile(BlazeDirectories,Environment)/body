{
  String m2Home=System.getenv("M2_HOME");
  ImmutableList.Builder<SkyKey> settingsFilesBuilder=ImmutableList.builder();
  SkyKey systemKey=null;
  if (m2Home != null) {
    PathFragment mavenInstallSettings=new PathFragment(m2Home).getRelative("conf/settings.xml");
    systemKey=FileValue.key(RootedPath.toRootedPath(directories.getWorkspace().getRelative(mavenInstallSettings),PathFragment.EMPTY_FRAGMENT));
    settingsFilesBuilder.add(systemKey);
  }
  String userHome=System.getenv("HOME");
  SkyKey userKey=null;
  if (userHome != null) {
    PathFragment userSettings=new PathFragment(userHome).getRelative(".m2/settings.xml");
    userKey=FileValue.key(RootedPath.toRootedPath(directories.getWorkspace().getRelative(userSettings),PathFragment.EMPTY_FRAGMENT));
    settingsFilesBuilder.add(userKey);
  }
  ImmutableList<SkyKey> settingsFiles=settingsFilesBuilder.build();
  if (settingsFiles.isEmpty()) {
    return ImmutableMap.of();
  }
  Map<SkyKey,SkyValue> values=env.getValues(settingsFiles);
  ImmutableMap.Builder<String,FileValue> settingsBuilder=ImmutableMap.builder();
  for (  Map.Entry<SkyKey,SkyValue> entry : values.entrySet()) {
    if (entry.getValue() == null) {
      return null;
    }
    if (systemKey != null && systemKey.equals(entry.getKey())) {
      settingsBuilder.put(SYSTEM_KEY,(FileValue)entry.getValue());
    }
 else     if (userKey != null && userKey.equals(entry.getKey())) {
      settingsBuilder.put(USER_KEY,(FileValue)entry.getValue());
    }
  }
  return settingsBuilder.build();
}
