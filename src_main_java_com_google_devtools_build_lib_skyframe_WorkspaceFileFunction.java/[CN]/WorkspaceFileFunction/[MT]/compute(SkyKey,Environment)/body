{
  RootedPath workspaceRoot=(RootedPath)skyKey.argument();
  FileValue workspaceFileValue=(FileValue)env.getValue(FileValue.key(workspaceRoot));
  if (workspaceFileValue == null) {
    return null;
  }
  Path repoWorkspace=workspaceRoot.getRoot().getRelative(workspaceRoot.getRelativePath());
  Builder builder=new Builder(repoWorkspace,packageFactory.getRuleClassProvider().getRunfilesPrefix());
  try (Mutability mutability=Mutability.create("workspace %s",repoWorkspace)){
    WorkspaceFactory parser=new WorkspaceFactory(builder,packageFactory.getRuleClassProvider(),mutability,installDir.getPathString());
    parser.parse(ParserInputSource.create(ruleClassProvider.getDefaultWorkspaceFile(),new PathFragment("DEFAULT.WORKSPACE")));
    if (!workspaceFileValue.exists()) {
      return new PackageValue(builder.build());
    }
    try {
      parser.parse(ParserInputSource.create(repoWorkspace));
    }
 catch (    IOException e) {
      throw new WorkspaceFileFunctionException(e,Transience.TRANSIENT);
    }
  }
   return new PackageValue(builder.build());
}
