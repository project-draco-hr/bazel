{
  RootedPath workspaceRoot=(RootedPath)skyKey.argument();
  FileValue workspaceFileValue=(FileValue)env.getValue(FileValue.key(workspaceRoot));
  if (workspaceFileValue == null) {
    return null;
  }
  Path repoWorkspace=workspaceRoot.getRoot().getRelative(workspaceRoot.getRelativePath());
  Builder builder=new Builder(repoWorkspace);
  WorkspaceFactory parser=new WorkspaceFactory(builder,packageFactory.getRuleClassProvider(),installDir.getPathString());
  parser.parse(ParserInputSource.create(ruleClassProvider.getDefaultWorkspaceFile(),new PathFragment("DEFAULT.WORKSPACE")));
  if (!workspaceFileValue.exists()) {
    return new PackageValue(builder.build());
  }
  try {
    parser.parse(ParserInputSource.create(repoWorkspace));
  }
 catch (  IOException e) {
    throw new WorkspaceFileFunctionException(e,Transience.TRANSIENT);
  }
  try {
    builder.resolveBindTargets(packageFactory.getRuleClass("bind"));
  }
 catch (  NoSuchBindingException e) {
    throw new WorkspaceFileFunctionException(new EvalException(e.getLocation(),e.getMessage()));
  }
catch (  EvalException e) {
    throw new WorkspaceFileFunctionException(e);
  }
  return new PackageValue(builder.build());
}
