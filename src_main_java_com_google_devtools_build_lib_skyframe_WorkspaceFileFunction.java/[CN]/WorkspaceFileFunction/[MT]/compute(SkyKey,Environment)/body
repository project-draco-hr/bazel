{
  RootedPath workspaceRoot=(RootedPath)skyKey.argument();
  FileValue workspaceFileValue=(FileValue)env.getValue(FileValue.key(workspaceRoot));
  if (workspaceFileValue == null) {
    return null;
  }
  Path repoWorkspace=workspaceRoot.getRoot().getRelative(workspaceRoot.getRelativePath());
  Builder builder=new Builder(repoWorkspace);
  List<PathFragment> workspaceFiles=packageFactory.getRuleClassProvider().getWorkspaceFiles();
  for (  PathFragment workspaceFile : workspaceFiles) {
    workspaceRoot=RootedPath.toRootedPath(installDir,workspaceFile);
    if (env.getValue(FileValue.key(workspaceRoot)) == null) {
      return null;
    }
    parseWorkspaceFile(installDir.getRelative(workspaceFile),builder);
  }
  if (!workspaceFileValue.exists()) {
    return new PackageValue(builder.build());
  }
  parseWorkspaceFile(repoWorkspace,builder);
  try {
    builder.resolveBindTargets(packageFactory.getRuleClass(BIND));
  }
 catch (  NoSuchBindingException e) {
    throw new WorkspaceFileFunctionException(new EvalException(e.getLocation(),e.getMessage()));
  }
catch (  EvalException e) {
    throw new WorkspaceFileFunctionException(e);
  }
  return new PackageValue(builder.build());
}
