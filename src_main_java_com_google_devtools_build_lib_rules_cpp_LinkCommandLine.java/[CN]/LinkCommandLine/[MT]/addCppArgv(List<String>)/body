{
  argv.add(cppConfiguration.getCppExecutable().getPathString());
  if (symbolCountsOutput != null) {
    argv.add("-Wl,--print-symbol-counts=" + symbolCountsOutput.getExecPathString());
  }
  if (linkTargetType == LinkTargetType.DYNAMIC_LIBRARY) {
    argv.add("-shared");
  }
  for (  Artifact linkstampOutput : linkstamps.values()) {
    argv.add(linkstampOutput.getExecPathString());
  }
  boolean fullyStatic=(linkStaticness == LinkStaticness.FULLY_STATIC);
  boolean mostlyStatic=(linkStaticness == LinkStaticness.MOSTLY_STATIC);
  boolean sharedLinkopts=linkTargetType == LinkTargetType.DYNAMIC_LIBRARY || linkopts.contains("-shared") || cppConfiguration.getLinkOptions().contains("-shared");
  if (output != null) {
    argv.add("-o");
    String execpath=output.getExecPathString();
    if (mostlyStatic && linkTargetType == LinkTargetType.EXECUTABLE && cppConfiguration.skipStaticOutputs()) {
      Collections.addAll(argv,"/dev/null","-MMD","-MF",execpath);
    }
 else {
      argv.add(execpath);
    }
  }
  addInputFileLinkOptions(argv,needWholeArchive);
  argv.addAll(linkopts);
  if (fullyStatic) {
    argv.addAll(cppConfiguration.getFullyStaticLinkOptions(features,sharedLinkopts));
  }
 else   if (mostlyStatic) {
    argv.addAll(cppConfiguration.getMostlyStaticLinkOptions(features,sharedLinkopts));
  }
 else {
    argv.addAll(cppConfiguration.getDynamicLinkOptions(features,sharedLinkopts));
  }
  if (useTestOnlyFlags) {
    argv.addAll(cppConfiguration.getTestOnlyLinkOptions());
  }
  if (linkTargetType == LinkTargetType.EXECUTABLE && cppConfiguration.forcePic()) {
    argv.add("-pie");
  }
  argv.addAll(cppConfiguration.getLinkOptions());
  if (featureConfiguration != null) {
    argv.addAll(featureConfiguration.getCommandLine(CPP_LINK,variables));
  }
}
