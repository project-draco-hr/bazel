{
  update();
  AspectDescriptor simpleAspect=new AspectDescriptor(TestAspects.SIMPLE_ASPECT);
  AspectDescriptor attributeAspect=new AspectDescriptor(TestAspects.ATTRIBUTE_ASPECT);
  ImmutableMap<AspectDescriptor,BuildConfiguration> twoAspectMap=ImmutableMap.of(simpleAspect,getTargetConfiguration(),attributeAspect,getHostConfiguration());
  Dependency targetDep=Dependency.withConfiguredAspects(Label.parseAbsolute("//a"),getTargetConfiguration(),twoAspectMap);
  assertThat(targetDep.getLabel()).isEqualTo(Label.parseAbsolute("//a"));
  assertThat(targetDep.hasStaticConfiguration()).isTrue();
  assertThat(targetDep.getConfiguration()).isEqualTo(getTargetConfiguration());
  assertThat(targetDep.getAspects()).containsExactlyElementsIn(ImmutableSet.of(simpleAspect,attributeAspect));
  assertThat(targetDep.getAspectConfigurations()).containsExactlyEntriesIn(twoAspectMap);
  try {
    targetDep.getTransition();
    fail("withConfiguredAspects-created Dependencies should throw ISE on getTransition()");
  }
 catch (  IllegalStateException ex) {
  }
}
