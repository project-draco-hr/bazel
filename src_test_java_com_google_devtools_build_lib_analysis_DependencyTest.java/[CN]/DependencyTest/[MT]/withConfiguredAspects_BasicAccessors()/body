{
  update();
  Aspect simpleAspect=new Aspect(new NativeAspectClass<TestAspects.SimpleAspect>(TestAspects.SimpleAspect.class));
  Aspect attributeAspect=new Aspect(new NativeAspectClass<TestAspects.AttributeAspect>(TestAspects.AttributeAspect.class));
  ImmutableMap<Aspect,BuildConfiguration> twoAspectMap=ImmutableMap.of(simpleAspect,getTargetConfiguration(),attributeAspect,getHostConfiguration());
  Dependency targetDep=Dependency.withConfiguredAspects(Label.parseAbsolute("//a"),getTargetConfiguration(),twoAspectMap);
  assertThat(targetDep.getLabel()).isEqualTo(Label.parseAbsolute("//a"));
  assertThat(targetDep.hasStaticConfiguration()).isTrue();
  assertThat(targetDep.getConfiguration()).isEqualTo(getTargetConfiguration());
  assertThat(targetDep.getAspects()).containsExactlyElementsIn(ImmutableSet.of(simpleAspect,attributeAspect));
  assertThat(targetDep.getAspectConfigurations()).containsExactlyEntriesIn(twoAspectMap);
  try {
    targetDep.getTransition();
    fail("withConfiguredAspects-created Dependencies should throw ISE on getTransition()");
  }
 catch (  IllegalStateException ex) {
  }
}
