{
  final Collection<Node<T>> set=predecessorSet ? preds : succs;
  if (set == null) {
    return false;
  }
  int previousSize=set.size();
  if (previousSize == 1) {
    if (set.contains(value)) {
      return updateField(predecessorSet,null);
    }
 else {
      return false;
    }
  }
  if (set.remove(value)) {
    if (previousSize == 2) {
      List<Node<T>> list=Collections.singletonList(set.iterator().next());
      return updateField(predecessorSet,list);
    }
 else     if (previousSize == 1 + ARRAYLIST_THRESHOLD) {
      Collection<Node<T>> newSet=new ArrayList<Node<T>>(ARRAYLIST_THRESHOLD);
      newSet.addAll(set);
      return updateField(predecessorSet,newSet);
    }
    return true;
  }
  return false;
}
