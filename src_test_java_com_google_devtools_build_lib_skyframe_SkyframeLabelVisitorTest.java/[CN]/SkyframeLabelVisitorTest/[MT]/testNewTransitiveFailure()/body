{
  reporter.removeHandler(failFastHandler);
  Path buildFile=scratch.file("pkg/BUILD","sh_library(name = 'x', deps = ['z'])","sh_library(name = 'z')");
  scratch.file("pkg2/BUILD","sh_library(name = 'q', deps=['F','F'])","sh_library(name = 'F')");
  assertLabelsVisited(ImmutableSet.of("//pkg:x","//pkg:z"),ImmutableSet.of("//pkg:x"),!EXPECT_ERROR,!KEEP_GOING);
  scratch.overwriteFile("pkg/BUILD","sh_library(name = 'x', deps = ['z'])","sh_library(name = 'z', deps = [ '//pkg2:q'])");
  buildFile.setLastModifiedTime(buildFile.getLastModifiedTime() + 1);
  syncPackages();
  assertLabelsVisited(ImmutableSet.of("//pkg:x","//pkg:z","//pkg2:q","//pkg2:F"),ImmutableSet.of("//pkg:x"),EXPECT_ERROR,KEEP_GOING);
  assertLabelsVisited(ImmutableSet.of("//pkg:x","//pkg:z","//pkg2:q","//pkg2:F"),ImmutableSet.of("//pkg:x"),EXPECT_ERROR,KEEP_GOING);
}
