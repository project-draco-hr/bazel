{
  if (!JavaCommon.getConstraints(ruleContext).contains("android") && !ruleContext.getRule().getRuleClass().startsWith("android_")) {
    return new ConfiguredAspect.Builder(NAME,ruleContext).build();
  }
  List<TransitiveInfoCollection> deps=new ArrayList<>();
  for (  String attribute : ATTRIBUTES) {
    if (!ruleContext.getRule().getRuleClassObject().hasAttr(attribute,BuildType.LABEL_LIST)) {
      continue;
    }
    deps.addAll(ruleContext.getPrerequisites(attribute,Mode.TARGET));
  }
  return new ConfiguredAspect.Builder(NAME,ruleContext).addProvider(AndroidNeverLinkLibrariesProvider.create(AndroidCommon.collectTransitiveNeverlinkLibraries(ruleContext,deps,base.getProvider(JavaRuntimeJarProvider.class).getRuntimeJars()))).build();
}
