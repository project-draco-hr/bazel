{
  Set<String> formatNames=new HashSet<>();
  if (format != null) {
    Collections.addAll(formatNames,format.split("\\|"));
  }
  XMLEvent nextTag=XmlResourceValues.peekNextTag(eventReader);
  if (nextTag != null && nextTag.isStartElement()) {
    QName tagName=nextTag.asStartElement().getName();
    if (TAG_FLAG.equals(tagName)) {
      formatNames.add(FLAGS);
    }
 else {
      formatNames.add(tagName.getLocalPart().toLowerCase());
    }
  }
  Builder<String,ResourceXmlAttrValue> formats=ImmutableMap.builder();
  for (  String formatName : formatNames) {
switch (formatName) {
case FLAGS:
      Map<String,String> flags=readSubValues(eventReader,TAG_FLAG);
    endAttrElement(eventReader);
  formats.put(formatName,FlagResourceXmlAttrValue.of(flags));
break;
case ENUM:
Map<String,String> enums=readSubValues(eventReader,TAG_ENUM);
endAttrElement(eventReader);
formats.put(formatName,EnumResourceXmlAttrValue.of(enums));
break;
case REFERENCE:
formats.put(formatName,ReferenceResourceXmlAttrValue.of());
break;
case COLOR:
formats.put(formatName,ColorResourceXmlAttrValue.of());
break;
case BOOLEAN:
formats.put(formatName,BooleanResourceXmlAttrValue.of());
break;
case DIMENSION:
formats.put(formatName,DimensionResourceXmlAttrValue.of());
break;
case FLOAT:
formats.put(formatName,FloatResourceXmlAttrValue.of());
break;
case INTEGER:
formats.put(formatName,IntegerResourceXmlAttrValue.of());
break;
case STRING:
formats.put(formatName,StringResourceXmlAttrValue.of());
break;
case FRACTION:
formats.put(formatName,FractionResourceXmlAttrValue.of());
break;
default :
throw new XMLStreamException(String.format("Unexpected attr format: %S",formatName),attr.getLocation());
}
}
return of(formats.build());
}
