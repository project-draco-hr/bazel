def get_go_environ(toolset_root, workspace=None):
    'Returns a copy of os.environ with added GO* environment variables.\n\n  Overrides GOROOT, GOPATH and GOBIN. Keeps everything else. Idempotent.\n\n  Args:\n    toolset_root: GOROOT would be <toolset_root>/go.\n    workspace: main workspace directory or None if compiling in GOROOT.\n  '
    env = os.environ.copy()
    env['GOROOT'] = os.path.join(toolset_root, 'go')
    if workspace:
        env['GOBIN'] = os.path.join(workspace, 'bin')
    else:
        env.pop('GOBIN', None)
    all_go_paths = []
    if workspace:
        all_go_paths.append(workspace)
    env['GOPATH'] = os.pathsep.join(all_go_paths)
    paths_to_add = [os.path.join(env['GOROOT'], 'bin'), env.get('GOBIN')]
    path = env['PATH'].split(os.pathsep)
    paths_to_add = [p for p in paths_to_add if (p and (p not in path))]
    env['PATH'] = os.pathsep.join((paths_to_add + path))
    return env
