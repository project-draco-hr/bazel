{
  Environment env;
  try (Mutability mutability=Mutability.create("testFrozen")){
    env=Environment.builder(mutability).setGlobals(Environment.BUILD).setEventHandler(Environment.FAIL_FAST_HANDLER).build();
    env.update("x",1);
    assertEquals(env.lookup("x"),1);
    env.update("y",2);
    assertEquals(env.lookup("y"),2);
    assertEquals(env.lookup("x"),1);
    env.update("x",3);
    assertEquals(env.lookup("x"),3);
  }
   try {
    env.update("x",4);
    throw new Exception("failed to fail");
  }
 catch (  AssertionError e) {
    assertThat(e).hasMessage("Can't update x to 4 in frozen environment");
  }
  try {
    env.update("newvar",5);
    throw new Exception("failed to fail");
  }
 catch (  AssertionError e) {
    assertThat(e).hasMessage("Can't update newvar to 5 in frozen environment");
  }
}
