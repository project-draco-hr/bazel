{
  Environment outerEnv;
  Environment innerEnv;
  try (Mutability mut=Mutability.create("outer")){
    outerEnv=Environment.builder(mut).setGlobals(Environment.BUILD).build().update("foo","bar").update("wiz",3);
  }
   try (Mutability mut=Mutability.create("inner")){
    innerEnv=Environment.builder(mut).setGlobals(outerEnv.getGlobals()).build().update("foo","bat").update("quux",42);
  }
   assertEquals(Sets.newHashSet("foo","wiz","False","None","True","-","all","any","bool","dict","enumerate","int","len","list","max","min","range","repr","reversed","select","set","sorted","str","zip"),outerEnv.getVariableNames());
  assertEquals(Sets.newHashSet("foo","wiz","quux","False","None","True","-","all","any","bool","dict","enumerate","int","len","list","max","min","range","repr","reversed","select","set","sorted","str","zip"),innerEnv.getVariableNames());
}
