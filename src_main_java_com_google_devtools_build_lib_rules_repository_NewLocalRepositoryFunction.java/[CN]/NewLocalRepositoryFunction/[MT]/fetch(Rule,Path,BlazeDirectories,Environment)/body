{
  NewRepositoryBuildFileHandler buildFileHandler=new NewRepositoryBuildFileHandler(directories.getWorkspace());
  if (!buildFileHandler.prepareBuildFile(rule,env)) {
    return null;
  }
  PathFragment pathFragment=getTargetPath(rule,directories.getWorkspace());
  FileSystem fs=directories.getOutputBase().getFileSystem();
  Path path=fs.getPath(pathFragment);
  SkyKey dirKey=DirectoryListingValue.key(RootedPath.toRootedPath(fs.getRootDirectory(),path));
  DirectoryListingValue directoryValue;
  try {
    directoryValue=(DirectoryListingValue)env.getValueOrThrow(dirKey,InconsistentFilesystemException.class);
  }
 catch (  InconsistentFilesystemException e) {
    throw new RepositoryFunctionException(new IOException(e),SkyFunctionException.Transience.PERSISTENT);
  }
  if (directoryValue == null) {
    return null;
  }
  if (!symlinkLocalRepositoryContents(outputDirectory,fs.getPath(pathFragment))) {
    return null;
  }
  buildFileHandler.finishBuildFile(outputDirectory);
  Path workspaceFile=outputDirectory.getRelative("WORKSPACE");
  if (workspaceFile.exists()) {
    try {
      workspaceFile.delete();
    }
 catch (    IOException e) {
      throw new RepositoryFunctionException(e,SkyFunctionException.Transience.TRANSIENT);
    }
  }
  createWorkspaceFile(outputDirectory,rule);
  return RepositoryDirectoryValue.createWithSourceDirectory(outputDirectory,directoryValue);
}
