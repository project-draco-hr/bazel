{
  CppConfigurationLoader loader=loader("major_version: \"12\"\n" + "minor_version: \"0\"\n" + "default_target_cpu: \"k8\"\n"+ "default_toolchain {\n"+ "  cpu: \"piii\"\n"+ "  toolchain_identifier: \"toolchain-identifier-AA-piii\"\n"+ "}\n"+ "default_toolchain {\n"+ "  cpu: \"k8\"\n"+ "  toolchain_identifier: \"toolchain-identifier-BB\"\n"+ "}\n"+ "toolchain {\n"+ "  toolchain_identifier: \"toolchain-identifier-AA\"\n"+ "  host_system_name: \"host-system-name-AA\"\n"+ "  target_system_name: \"target-system-name-AA\"\n"+ "  target_cpu: \"k8\"\n"+ "  target_libc: \"target-libc-A\"\n"+ "  compiler: \"compiler-A\"\n"+ "  abi_version: \"abi-version-A\"\n"+ "  abi_libc_version: \"abi-libc-version-A\"\n"+ "}\n"+ "toolchain {\n"+ "  toolchain_identifier: \"toolchain-identifier-AA-piii\"\n"+ "  host_system_name: \"host-system-name-AA\"\n"+ "  target_system_name: \"target-system-name-AA\"\n"+ "  target_cpu: \"piii\"\n"+ "  target_libc: \"target-libc-A\"\n"+ "  compiler: \"compiler-A\"\n"+ "  abi_version: \"abi-version-A\"\n"+ "  abi_libc_version: \"abi-libc-version-A\"\n"+ "}\n"+ "toolchain {\n"+ "  toolchain_identifier: \"toolchain-identifier-AB\"\n"+ "  host_system_name: \"host-system-name-AB\"\n"+ "  target_system_name: \"target-system-name-AB\"\n"+ "  target_cpu: \"k8\"\n"+ "  target_libc: \"target-libc-A\"\n"+ "  compiler: \"compiler-B\"\n"+ "  abi_version: \"abi-version-B\"\n"+ "  abi_libc_version: \"abi-libc-version-A\"\n"+ "}\n"+ "toolchain {\n"+ "  toolchain_identifier: \"toolchain-identifier-BA\"\n"+ "  host_system_name: \"host-system-name-BA\"\n"+ "  target_system_name: \"target-system-name-BA\"\n"+ "  target_cpu: \"k8\"\n"+ "  target_libc: \"target-libc-B\"\n"+ "  compiler: \"compiler-A\"\n"+ "  abi_version: \"abi-version-A\"\n"+ "  abi_libc_version: \"abi-libc-version-B\"\n"+ "}\n"+ "toolchain {\n"+ "  toolchain_identifier: \"toolchain-identifier-BB\"\n"+ "  host_system_name: \"host-system-name-BB\"\n"+ "  target_system_name: \"target-system-name-BB\"\n"+ "  target_cpu: \"k8\"\n"+ "  target_libc: \"target-libc-B\"\n"+ "  compiler: \"compiler-B\"\n"+ "  abi_version: \"abi-version-B\"\n"+ "  abi_libc_version: \"abi-libc-version-B\"\n"+ "}\n"+ "toolchain {\n"+ "  toolchain_identifier: \"toolchain-identifier-BC\"\n"+ "  host_system_name: \"host-system-name-BC\"\n"+ "  target_system_name: \"target-system-name-BC\"\n"+ "  target_cpu: \"k8\"\n"+ "  target_libc: \"target-libc-B\"\n"+ "  compiler: \"compiler-C\"\n"+ "  abi_version: \"abi-version-C\"\n"+ "  abi_libc_version: \"abi-libc-version-B\"\n"+ "}");
  assertEquals("toolchain-identifier-BB",create(loader,"--cpu=k8").getToolchainIdentifier());
  assertEquals("toolchain-identifier-BA",create(loader,"--compiler=compiler-A","--glibc=target-libc-B").getToolchainIdentifier());
  assertEquals("toolchain-identifier-AA-piii",create(loader,"--cpu=piii").getToolchainIdentifier());
  assertEquals("toolchain-identifier-AA-piii",create(loader,"--cpu=piii","--compiler=compiler-A").getToolchainIdentifier());
  assertEquals("toolchain-identifier-AA-piii",create(loader,"--cpu=piii","--glibc=target-libc-A").getToolchainIdentifier());
  assertEquals("toolchain-identifier-BC",create(loader,"--compiler=compiler-C").getToolchainIdentifier());
  try {
    create(loader,"--compiler=nonexistent-compiler");
    fail("Expected an error that no toolchain matched.");
  }
 catch (  InvalidConfigurationException e) {
    assertThat(e).hasMessage("No toolchain found for --cpu='k8' --compiler='nonexistent-compiler'. " + "Valid toolchains are: [\n" + "  --cpu='k8' --compiler='compiler-A' --glibc='target-libc-A',\n"+ "  --cpu='piii' --compiler='compiler-A' --glibc='target-libc-A',\n"+ "  --cpu='k8' --compiler='compiler-B' --glibc='target-libc-A',\n"+ "  --cpu='k8' --compiler='compiler-A' --glibc='target-libc-B',\n"+ "  --cpu='k8' --compiler='compiler-B' --glibc='target-libc-B',\n"+ "  --cpu='k8' --compiler='compiler-C' --glibc='target-libc-B',\n"+ "]");
  }
  try {
    create(loader,"--glibc=target-libc-A");
    fail("Expected an error that multiple toolchains matched.");
  }
 catch (  InvalidConfigurationException e) {
    assertThat(e).hasMessage("Multiple toolchains found for --cpu='k8' --glibc='target-libc-A': [\n" + "  --cpu='k8' --compiler='compiler-A' --glibc='target-libc-A',\n" + "  --cpu='k8' --compiler='compiler-B' --glibc='target-libc-A',\n"+ "]");
  }
}
