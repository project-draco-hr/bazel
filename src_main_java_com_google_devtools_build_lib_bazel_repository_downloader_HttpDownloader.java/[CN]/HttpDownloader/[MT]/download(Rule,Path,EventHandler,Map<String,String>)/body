{
  WorkspaceAttributeMapper mapper=WorkspaceAttributeMapper.of(rule);
  String url;
  String sha256;
  String type;
  try {
    url=mapper.get("url",Type.STRING);
    sha256=mapper.get("sha256",Type.STRING);
    type=mapper.isAttributeValueExplicitlySpecified("type") ? mapper.get("type",Type.STRING) : "";
  }
 catch (  EvalException e) {
    throw new RepositoryFunctionException(e,Transience.PERSISTENT);
  }
  try {
    return new HttpDownloader(eventHandler,url,sha256,outputDirectory,type,clientEnv).download();
  }
 catch (  IOException e) {
    throw new RepositoryFunctionException(new IOException("Error downloading from " + url + " to "+ outputDirectory+ ": "+ e.getMessage()),SkyFunctionException.Transience.TRANSIENT);
  }
}
