{
  List<Artifact> outs=new ArrayList<>();
  List<Artifact> ins=new ArrayList<>();
  List<String> args=new ArrayList<>();
  args.add("--mainData");
  addPrimaryResourceContainer(ins,args,primary);
  if (manifest != null) {
    args.add("--manifest");
    args.add(manifest.getExecPathString());
    ins.add(manifest);
  }
  if (rTxt != null) {
    args.add("--rtxt");
    args.add(rTxt.getExecPathString());
    ins.add(rTxt);
  }
  if (classes != null) {
    args.add("--classes");
    args.add(classes.getExecPathString());
    ins.add(classes);
  }
  args.add("--aarOutput");
  args.add(aarOut.getExecPathString());
  outs.add(aarOut);
  ruleContext.registerAction(this.builder.addInputs(ImmutableList.<Artifact>copyOf(ins)).addOutputs(ImmutableList.<Artifact>copyOf(outs)).setCommandLine(CommandLine.of(args,false)).setExecutable(ruleContext.getExecutablePrerequisite("$android_aar_generator",Mode.HOST)).setProgressMessage("Building AAR package for " + ruleContext.getLabel()).setMnemonic("AARGenerator").build(context));
}
