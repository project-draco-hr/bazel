{
  this.name=name;
  this.targetKind=name + " rule";
  this.skylarkExecutable=skylarkExecutable;
  this.documented=documented;
  this.publicByDefault=publicByDefault;
  this.binaryOutput=binaryOutput;
  this.implicitOutputsFunction=implicitOutputsFunction;
  this.configurator=Preconditions.checkNotNull(configurator);
  this.configuredTargetFactory=configuredTargetFactory;
  this.validityPredicate=validityPredicate;
  this.preferredDependencyPredicate=preferredDependencyPredicate;
  this.advertisedProviders=advertisedProviders;
  this.configuredTargetFunction=configuredTargetFunction;
  this.externalBindingsFunction=externalBindingsFunction;
  this.ruleDefinitionEnvironment=ruleDefinitionEnvironment;
  this.attributes=attributes;
  this.workspaceOnly=workspaceOnly;
  this.outputsDefaultExecutable=outputsDefaultExecutable;
  this.requiredConfigurationFragments=ImmutableSet.copyOf(allowedConfigurationFragments);
  this.requiredConfigurationFragmentNames=ImmutableSet.copyOf(allowedConfigurationFragmentNames);
  this.fragmentNameResolver=fragmentNameResolver;
  this.missingFragmentPolicy=missingFragmentPolicy;
  this.supportsConstraintChecking=supportsConstraintChecking;
  int index=0;
  for (  Attribute attribute : attributes) {
    attributeIndex.put(attribute.getName(),index++);
  }
}
