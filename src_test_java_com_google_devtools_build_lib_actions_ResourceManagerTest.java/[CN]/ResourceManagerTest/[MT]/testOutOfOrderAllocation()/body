{
  assertFalse(rm.inUse());
  TestThread thread1=new TestThread(){
    @Override public void runTest() throws Exception {
      sync.await();
      acquire(900,0.5,0);
      validate(5);
      release(900,0.5,0);
      sync.await();
    }
  }
;
  TestThread thread2=new TestThread(){
    @Override public void runTest() throws Exception {
      while (rm.getWaitCount() == 0) {
        Thread.yield();
      }
      acquire(100,0.1,0);
      validate(2);
      release(100,0.1,0);
      sync2.await();
      acquire(200,0.5,0);
      validate(4);
      sync2.await();
      release(200,0.5,0);
    }
  }
;
  acquire(900,0.9,0);
  validate(1);
  thread1.start();
  sync.await(1,TimeUnit.SECONDS);
  thread2.start();
  sync2.await(1,TimeUnit.SECONDS);
  while (rm.getWaitCount() < 2) {
    Thread.yield();
  }
  validate(3);
  release(100,0.4,0);
  sync2.await(1,TimeUnit.SECONDS);
  release(750,0.3,0);
  sync.await(1,TimeUnit.SECONDS);
  release(50,0.2,0);
  thread1.join();
  thread2.join();
  assertFalse(rm.inUse());
}
