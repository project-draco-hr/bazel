{
  FileValue directoryValue=createOutputDirectory(env,rule.getName());
  if (directoryValue == null) {
    return null;
  }
  Path outputDirectory=directoryValue.realRootedPath().asPath();
  AggregatingAttributeMapper mapper=AggregatingAttributeMapper.of(rule);
  URL url=null;
  try {
    url=new URL(mapper.get("url",Type.STRING));
  }
 catch (  MalformedURLException e) {
    throw new RepositoryFunctionException(new EvalException(rule.getLocation(),"Error parsing URL: " + e.getMessage()),Transience.PERSISTENT);
  }
  String sha256=mapper.get("sha256",Type.STRING);
  HttpDownloader downloader=new HttpDownloader(url,sha256,outputDirectory);
  try {
    Path archiveFile=downloader.download();
    outputDirectory=DecompressorFactory.create(rule,archiveFile).decompress();
  }
 catch (  IOException e) {
    throw new RepositoryFunctionException(e,Transience.TRANSIENT);
  }
catch (  DecompressorException e) {
    throw new RepositoryFunctionException(new IOException(e.getMessage()),Transience.TRANSIENT);
  }
  return new RepositoryValue(outputDirectory,directoryValue);
}
