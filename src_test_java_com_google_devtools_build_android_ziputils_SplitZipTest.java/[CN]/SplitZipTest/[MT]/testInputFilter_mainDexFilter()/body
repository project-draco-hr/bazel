{
  new ZipFileBuilder().add("pkg1/test1.class","hello world").add("pkg2/test1.class","how are you").add("pkg1/test2.class","hello world").add("pkg2/test2.class","how are you").add("pkg1/test3.class","bye bye").add("pkg2/test3.class","bye bye").create("input.jar");
  String classFileList="pkg1/test1.class\npkg2/test2.class\n";
  fileSystem.addFile("main_dex_list.txt",classFileList);
  new SplitZip().addOutput(new ZipOut(fileSystem.getOutputChannel("out/shard1.jar",false),"out/shard1.jar")).addOutput(new ZipOut(fileSystem.getOutputChannel("out/shard2.jar",false),"out/shard2.jar")).setVerbose(true).setMainClassListFile(fileSystem.getInputStream("main_dex_list.txt")).addInput(new ZipIn(fileSystem.getInputChannel("input.jar"),"input.jar")).setInputFilter(Predicates.in(ImmutableSet.of("pkg1/test1.class","pkg2/test1.class","pkg3/test1.class"))).setSplitDexedClasses(true).run().close();
  new ZipFileBuilder().add("pkg1/test1.class","hello world").create("expected/shard1.jar");
  new ZipFileBuilder().add("pkg2/test1.class","how are you").create("expected/shard2.jar");
  assertThat(fileSystem.toByteArray("out/shard1.jar")).isEqualTo(fileSystem.toByteArray("expected/shard1.jar"));
  assertThat(fileSystem.toByteArray("out/shard2.jar")).isEqualTo(fileSystem.toByteArray("expected/shard2.jar"));
}
