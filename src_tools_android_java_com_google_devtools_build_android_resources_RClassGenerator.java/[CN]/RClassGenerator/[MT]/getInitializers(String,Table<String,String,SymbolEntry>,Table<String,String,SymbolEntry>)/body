{
  Map<String,SymbolEntry> rowMap=symbols.row(typeName);
  Set<String> symbolSet=rowMap.keySet();
  List<String> symbolList=new ArrayList<>(symbolSet);
  Collections.sort(symbolList);
  List<FieldInitializer> initializers=new ArrayList<>();
  for (  String symbolName : symbolList) {
    SymbolEntry value=values.get(typeName,symbolName);
    if (value != null) {
      if (value.getType().equals("int")) {
        initializers.add(IntFieldInitializer.of(value.getName(),value.getValue()));
      }
 else {
        Preconditions.checkArgument(value.getType().equals("int[]"));
        initializers.add(IntArrayFieldInitializer.of(value.getName(),value.getValue()));
      }
    }
 else {
      logger.fine(String.format("Skipping R.%s.%s -- value not known in binary's R.txt",typeName,symbolName));
    }
  }
  return initializers;
}
