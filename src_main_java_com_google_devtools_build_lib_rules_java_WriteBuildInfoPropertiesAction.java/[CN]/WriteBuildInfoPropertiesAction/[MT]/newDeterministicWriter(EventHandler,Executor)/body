{
  final long timestamp=System.currentTimeMillis();
  return new DeterministicWriter(){
    @Override public void writeOutputFile(    OutputStream out) throws IOException {
      WorkspaceStatusAction.Context context=executor.getContext(WorkspaceStatusAction.Context.class);
      Map<String,String> values=new LinkedHashMap<>();
      for (      Artifact valueFile : valueArtifacts) {
        values.putAll(WorkspaceStatusAction.parseValues(valueFile.getPath()));
      }
      Map<String,String> keys=new HashMap<>();
      if (includeVolatile) {
        addValues(keys,values,context.getVolatileKeys());
        keys.put("BUILD_TIMESTAMP",Long.toString(timestamp / 1000));
        keys.put("BUILD_TIME",timestampFormatter.format(timestamp));
      }
      addValues(keys,values,context.getStableKeys());
      Properties properties=new Properties();
      keyTranslations.translate(keys,properties);
      properties.store(new StripFirstLineWriter(out),null);
    }
  }
;
}
