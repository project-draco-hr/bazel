{
  ZipWriter writer=new ZipWriter(new FileOutputStream(test),UTF_8);
  writer.setComment("file comment");
  byte[] fooContent="content".getBytes(UTF_8);
  crc.update(fooContent);
  long fooCrc=crc.getValue();
  ZipFileEntry rawFoo=new ZipFileEntry("foo");
  rawFoo.setMethod(Compression.STORED);
  rawFoo.setSize(fooContent.length);
  rawFoo.setCompressedSize(fooContent.length);
  rawFoo.setCrc(crc.getValue());
  rawFoo.setTime(cal.getTimeInMillis());
  rawFoo.setComment("foo comment");
  writer.putNextEntry(rawFoo);
  writer.write(fooContent);
  writer.closeEntry();
  byte[] barContent="stuff".getBytes(UTF_8);
  byte[] deflatedBarContent=new byte[128];
  crc.reset();
  crc.update(barContent);
  long barCrc=crc.getValue();
  deflater.setInput(barContent);
  deflater.finish();
  int deflatedSize=deflater.deflate(deflatedBarContent);
  ZipFileEntry rawBar=new ZipFileEntry("bar");
  rawBar.setMethod(Compression.DEFLATED);
  rawBar.setSize(barContent.length);
  rawBar.setCompressedSize(deflatedSize);
  rawBar.setCrc(barCrc);
  rawBar.setTime(cal.getTimeInMillis());
  writer.putNextEntry(rawBar);
  writer.write(deflatedBarContent,0,deflatedSize);
  writer.closeEntry();
  writer.close();
  byte[] buf=new byte[128];
  try (ZipFile zipFile=new ZipFile(test)){
    assertThat(zipFile.getComment()).isEqualTo("file comment");
    ZipEntry foo=zipFile.getEntry("foo");
    assertThat(foo.getMethod()).isEqualTo(ZipEntry.STORED);
    assertThat(foo.getSize()).isEqualTo(fooContent.length);
    assertThat(foo.getCompressedSize()).isEqualTo(fooContent.length);
    assertThat(foo.getCrc()).isEqualTo(fooCrc);
    assertThat(foo.getTime()).isEqualTo(cal.getTimeInMillis());
    assertThat(foo.getComment()).isEqualTo("foo comment");
    zipFile.getInputStream(foo).read(buf);
    assertThat(Bytes.indexOf(buf,fooContent)).isEqualTo(0);
    ZipEntry bar=zipFile.getEntry("bar");
    assertThat(bar.getMethod()).isEqualTo(ZipEntry.DEFLATED);
    assertThat(bar.getSize()).isEqualTo(barContent.length);
    assertThat(bar.getCompressedSize()).isEqualTo(deflatedSize);
    assertThat(bar.getCrc()).isEqualTo(barCrc);
    assertThat(bar.getTime()).isEqualTo(cal.getTimeInMillis());
    zipFile.getInputStream(bar).read(buf);
    assertThat(Bytes.indexOf(buf,barContent)).isEqualTo(0);
  }
 }
