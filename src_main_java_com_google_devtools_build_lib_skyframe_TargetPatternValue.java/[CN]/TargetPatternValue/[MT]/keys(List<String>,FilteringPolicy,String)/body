{
  TargetPattern.Parser parser=new TargetPattern.Parser(offset);
  AggregatedPatterns aggregatedPatterns=new AggregatedPatterns(policy,offset);
  ImmutableList.Builder<TargetPatternSkyKeyOrException> builder=ImmutableList.builder();
  for (  String pattern : patterns) {
    boolean positive=!pattern.startsWith("-");
    String absoluteValueOfPattern=positive ? pattern : pattern.substring(1);
    try {
      aggregatedPatterns.addPattern(new SignedPattern(positive,parser.parse(absoluteValueOfPattern)));
    }
 catch (    TargetParsingException e) {
      builder.add(new TargetPatternSkyKeyException(e,absoluteValueOfPattern));
    }
  }
  for (  TargetPatternKey patternKey : aggregatedPatterns.build()) {
    builder.add(new TargetPatternSkyKeyValue(new SkyKey(SkyFunctions.TARGET_PATTERN,patternKey)));
  }
  return builder.build();
}
