{
  update();
  BuildConfiguration c1=getTargetConfiguration();
  BuildConfiguration c2=getHostConfiguration();
  Label l1=Label.parseAbsolute("//a:l1");
  Label l1b=Label.parseAbsolute("//a:l1");
  Label l2=Label.parseAbsolute("//a:l2");
  AspectParameters i1=new AspectParameters.Builder().addAttribute("foo","bar").build();
  AspectParameters i1b=new AspectParameters.Builder().addAttribute("foo","bar").build();
  AspectParameters i2=new AspectParameters.Builder().addAttribute("foo","baz").build();
  NativeAspectClass<AttributeAspect> a1=new NativeAspectClass<AttributeAspect>(AttributeAspect.class);
  NativeAspectClass<AttributeAspect> a1b=new NativeAspectClass<AttributeAspect>(AttributeAspect.class);
  NativeAspectClass<ExtraAttributeAspect> a2=new NativeAspectClass<ExtraAttributeAspect>(ExtraAttributeAspect.class);
  new EqualsTester().addEqualityGroup(AspectValue.key(l1,c1,c1,a1,i1),AspectValue.key(l1,c1,c1,a1,i1b),AspectValue.key(l1,c1,c1,a1b,i1),AspectValue.key(l1,c1,c1,a1b,i1b),AspectValue.key(l1b,c1,c1,a1,i1),AspectValue.key(l1b,c1,c1,a1,i1b),AspectValue.key(l1b,c1,c1,a1b,i1),AspectValue.key(l1b,c1,c1,a1b,i1b)).addEqualityGroup(AspectValue.key(l1,c1,c1,a1,i2),AspectValue.key(l1,c1,c1,a1b,i2),AspectValue.key(l1b,c1,c1,a1,i2),AspectValue.key(l1b,c1,c1,a1b,i2)).addEqualityGroup(AspectValue.key(l1,c1,c1,a2,i1),AspectValue.key(l1,c1,c1,a2,i1b),AspectValue.key(l1b,c1,c1,a2,i1),AspectValue.key(l1b,c1,c1,a2,i1b)).addEqualityGroup(AspectValue.key(l1,c1,c1,a2,i2),AspectValue.key(l1b,c1,c1,a2,i2)).addEqualityGroup(AspectValue.key(l1,c1,c2,a1,i1),AspectValue.key(l1,c1,c2,a1,i1b),AspectValue.key(l1,c1,c2,a1b,i1),AspectValue.key(l1,c1,c2,a1b,i1b),AspectValue.key(l1b,c1,c2,a1,i1),AspectValue.key(l1b,c1,c2,a1,i1b),AspectValue.key(l1b,c1,c2,a1b,i1),AspectValue.key(l1b,c1,c2,a1b,i1b)).addEqualityGroup(AspectValue.key(l1,c1,c2,a1,i2),AspectValue.key(l1,c1,c2,a1b,i2),AspectValue.key(l1b,c1,c2,a1,i2),AspectValue.key(l1b,c1,c2,a1b,i2)).addEqualityGroup(AspectValue.key(l1,c1,c2,a2,i1),AspectValue.key(l1,c1,c2,a2,i1b),AspectValue.key(l1b,c1,c2,a2,i1),AspectValue.key(l1b,c1,c2,a2,i1b)).addEqualityGroup(AspectValue.key(l1,c1,c2,a2,i2),AspectValue.key(l1b,c1,c2,a2,i2)).addEqualityGroup(AspectValue.key(l1,c2,c1,a1,i1),AspectValue.key(l1,c2,c1,a1,i1b),AspectValue.key(l1,c2,c1,a1b,i1),AspectValue.key(l1,c2,c1,a1b,i1b),AspectValue.key(l1b,c2,c1,a1,i1),AspectValue.key(l1b,c2,c1,a1,i1b),AspectValue.key(l1b,c2,c1,a1b,i1),AspectValue.key(l1b,c2,c1,a1b,i1b)).addEqualityGroup(AspectValue.key(l1,c2,c1,a1,i2),AspectValue.key(l1,c2,c1,a1b,i2),AspectValue.key(l1b,c2,c1,a1,i2),AspectValue.key(l1b,c2,c1,a1b,i2)).addEqualityGroup(AspectValue.key(l1,c2,c1,a2,i1),AspectValue.key(l1,c2,c1,a2,i1b),AspectValue.key(l1b,c2,c1,a2,i1),AspectValue.key(l1b,c2,c1,a2,i1b)).addEqualityGroup(AspectValue.key(l1,c2,c1,a2,i2),AspectValue.key(l1b,c2,c1,a2,i2)).addEqualityGroup(AspectValue.key(l1,c2,c2,a1,i1),AspectValue.key(l1,c2,c2,a1,i1b),AspectValue.key(l1,c2,c2,a1b,i1),AspectValue.key(l1,c2,c2,a1b,i1b),AspectValue.key(l1b,c2,c2,a1,i1),AspectValue.key(l1b,c2,c2,a1,i1b),AspectValue.key(l1b,c2,c2,a1b,i1),AspectValue.key(l1b,c2,c2,a1b,i1b)).addEqualityGroup(AspectValue.key(l1,c2,c2,a1,i2),AspectValue.key(l1,c2,c2,a1b,i2),AspectValue.key(l1b,c2,c2,a1,i2),AspectValue.key(l1b,c2,c2,a1b,i2)).addEqualityGroup(AspectValue.key(l1,c2,c2,a2,i1),AspectValue.key(l1,c2,c2,a2,i1b),AspectValue.key(l1b,c2,c2,a2,i1),AspectValue.key(l1b,c2,c2,a2,i1b)).addEqualityGroup(AspectValue.key(l1,c2,c2,a2,i2),AspectValue.key(l1b,c2,c2,a2,i2)).addEqualityGroup(AspectValue.key(l2,c1,c1,a1,i1),AspectValue.key(l2,c1,c1,a1,i1b),AspectValue.key(l2,c1,c1,a1b,i1),AspectValue.key(l2,c1,c1,a1b,i1b)).addEqualityGroup(AspectValue.key(l2,c1,c1,a1,i2),AspectValue.key(l2,c1,c1,a1b,i2)).addEqualityGroup(AspectValue.key(l2,c1,c1,a2,i1),AspectValue.key(l2,c1,c1,a2,i1b)).addEqualityGroup(AspectValue.key(l2,c1,c1,a2,i2)).addEqualityGroup(AspectValue.key(l2,c1,c2,a1,i1),AspectValue.key(l2,c1,c2,a1,i1b),AspectValue.key(l2,c1,c2,a1b,i1),AspectValue.key(l2,c1,c2,a1b,i1b)).addEqualityGroup(AspectValue.key(l2,c1,c2,a1,i2),AspectValue.key(l2,c1,c2,a1b,i2)).addEqualityGroup(AspectValue.key(l2,c1,c2,a2,i1),AspectValue.key(l2,c1,c2,a2,i1b)).addEqualityGroup(AspectValue.key(l2,c1,c2,a2,i2)).addEqualityGroup(AspectValue.key(l2,c2,c1,a1,i1),AspectValue.key(l2,c2,c1,a1,i1b),AspectValue.key(l2,c2,c1,a1b,i1),AspectValue.key(l2,c2,c1,a1b,i1b)).addEqualityGroup(AspectValue.key(l2,c2,c1,a1,i2),AspectValue.key(l2,c2,c1,a1b,i2)).addEqualityGroup(AspectValue.key(l2,c2,c1,a2,i1),AspectValue.key(l2,c2,c1,a2,i1b)).addEqualityGroup(AspectValue.key(l2,c2,c1,a2,i2)).addEqualityGroup(AspectValue.key(l2,c2,c2,a1,i1),AspectValue.key(l2,c2,c2,a1,i1b),AspectValue.key(l2,c2,c2,a1b,i1),AspectValue.key(l2,c2,c2,a1b,i1b)).addEqualityGroup(AspectValue.key(l2,c2,c2,a1,i2),AspectValue.key(l2,c2,c2,a1b,i2)).addEqualityGroup(AspectValue.key(l2,c2,c2,a2,i1),AspectValue.key(l2,c2,c2,a2,i1b)).addEqualityGroup(AspectValue.key(l2,c2,c2,a2,i2)).testEquals();
}
