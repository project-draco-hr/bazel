{
  SkyKey outputDirectoryKey=FileValue.key(RootedPath.toRootedPath(repositoryDirectory,PathFragment.EMPTY_FRAGMENT));
  FileValue value;
  try {
    value=(FileValue)env.getValueOrThrow(outputDirectoryKey,IOException.class,FileSymlinkCycleException.class,InconsistentFilesystemException.class);
  }
 catch (  IOException|FileSymlinkCycleException|InconsistentFilesystemException e) {
    throw new RepositoryFunctionException(new IOException("Could not access " + repositoryDirectory + ": "+ e.getMessage()),Transience.PERSISTENT);
  }
  String targetName=repositoryDirectory.getBaseName();
  try {
    Path backlink=repositoryDirectory.getRelative("external").getRelative(targetName);
    FileSystemUtils.createDirectoryAndParents(backlink.getParentDirectory());
    if (backlink.exists()) {
      backlink.delete();
    }
    backlink.createSymbolicLink(repositoryDirectory);
  }
 catch (  IOException e) {
    throw new RepositoryFunctionException(new IOException("Error creating execution root symlink for " + targetName + ": "+ e.getMessage()),Transience.TRANSIENT);
  }
  return value;
}
