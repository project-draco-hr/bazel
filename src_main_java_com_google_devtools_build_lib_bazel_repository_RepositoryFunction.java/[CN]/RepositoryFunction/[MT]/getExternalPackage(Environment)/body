{
  SkyKey packageKey=PackageValue.key(Package.EXTERNAL_PACKAGE_IDENTIFIER);
  PackageValue packageValue;
  try {
    packageValue=(PackageValue)env.getValueOrThrow(packageKey,NoSuchPackageException.class);
  }
 catch (  NoSuchPackageException e) {
    throw new RepositoryFunctionException(new BuildFileNotFoundException(Package.EXTERNAL_PACKAGE_IDENTIFIER,"Could not load //external package"),Transience.PERSISTENT);
  }
  if (packageValue == null) {
    return null;
  }
  Package externalPackage=packageValue.getPackage();
  if (externalPackage.containsErrors()) {
    throw new RepositoryFunctionException(new BuildFileContainsErrorsException(Package.EXTERNAL_PACKAGE_IDENTIFIER,"Could not load //external package"),Transience.PERSISTENT);
  }
  return externalPackage;
}
