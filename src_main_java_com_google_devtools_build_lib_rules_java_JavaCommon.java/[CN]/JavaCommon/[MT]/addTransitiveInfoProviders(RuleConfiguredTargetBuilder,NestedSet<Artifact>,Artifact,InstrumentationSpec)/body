{
  builder.add(InstrumentedFilesProvider.class,getInstrumentationFilesProvider(ruleContext,filesToBuild,instrumentationSpec)).add(JavaExportsProvider.class,collectTransitiveExports()).addSkylarkTransitiveInfo(JavaSkylarkApiProvider.NAME,new JavaSkylarkApiProvider()).addOutputGroup(OutputGroupProvider.FILES_TO_COMPILE,getFilesToCompile(classJar)).add(JavaCompilationInfoProvider.class,createCompilationInfoProvider());
}
