{
  try {
    return callUninterruptibly(new Callable<SkyValue>(){
      @Override public SkyValue call() throws E, InterruptedException {
synchronized (valueLookupLock) {
          EvaluationResult<SkyValue> result=buildDriver.evaluate(ImmutableList.of(key),true,ResourceUsage.getAvailableProcessors(),errorEventListener);
          if (!result.hasError()) {
            return Preconditions.checkNotNull(result.get(key),"%s %s",result,key);
          }
          ErrorInfo errorInfo=Preconditions.checkNotNull(result.getError(key),"%s %s",key,result);
          Throwables.propagateIfPossible(errorInfo.getException(),clazz);
          if (errorInfo.getException() != null) {
            throw new IllegalStateException(errorInfo.getException());
          }
          throw new IllegalStateException(errorInfo.toString());
        }
      }
    }
);
  }
 catch (  Exception e) {
    Throwables.propagateIfPossible(e,clazz);
    throw new IllegalStateException(e);
  }
}
