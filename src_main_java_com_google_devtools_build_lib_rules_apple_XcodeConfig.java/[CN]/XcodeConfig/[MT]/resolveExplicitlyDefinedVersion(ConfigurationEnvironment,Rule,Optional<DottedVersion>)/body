{
  Map<String,XcodeVersionRuleData> aliasesToVersionMap=aliasesToVersionMap(env,xcodeConfigTarget);
  if (versionOverrideFlag.isPresent()) {
    XcodeVersionRuleData explicitVersion=aliasesToVersionMap.get(versionOverrideFlag.get().toString());
    if (explicitVersion != null) {
      return explicitVersion;
    }
  }
 else {
    XcodeVersionRuleData defaultVersion=getDefaultVersion(env,xcodeConfigTarget);
    if (defaultVersion != null) {
      return defaultVersion;
    }
  }
  boolean requireDefinedVersions=NonconfigurableAttributeMapper.of(xcodeConfigTarget).get(XcodeConfigRule.REQUIRE_DEFINED_VERSIONS_ATTR_NAME,Type.BOOLEAN);
  if (requireDefinedVersions) {
    throw new InvalidConfigurationException("xcode version config required an explicitly defined version, but none was available");
  }
  return null;
}
