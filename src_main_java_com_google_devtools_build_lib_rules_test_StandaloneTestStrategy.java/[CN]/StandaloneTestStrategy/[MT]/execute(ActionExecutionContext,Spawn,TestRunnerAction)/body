{
  Executor executor=actionExecutionContext.getExecutor();
  Closeable streamed=null;
  Path testLogPath=action.getTestLog().getPath();
  TestResultData.Builder builder=TestResultData.newBuilder();
  long startTime=executor.getClock().currentTimeMillis();
  try {
    try {
      if (executionOptions.testOutput.equals(TestOutputFormat.STREAMED)) {
        streamed=new StreamedTestOutput(Reporter.outErrForReporter(actionExecutionContext.getExecutor().getEventHandler()),testLogPath);
      }
      executor.getSpawnActionContext(action.getMnemonic()).exec(spawn,actionExecutionContext);
      builder.setTestPassed(true).setStatus(BlazeTestStatus.PASSED).setCachable(true);
    }
 catch (    ExecException e) {
      builder.setTestPassed(false).setStatus(e.hasTimedOut() ? BlazeTestStatus.TIMEOUT : BlazeTestStatus.FAILED);
    }
 finally {
      long duration=executor.getClock().currentTimeMillis() - startTime;
      builder.addTestTimes(duration);
      builder.setRunDurationMillis(duration);
      if (streamed != null) {
        streamed.close();
      }
    }
    TestCase details=parseTestResult(action.resolve(actionExecutionContext.getExecutor().getExecRoot()).getXmlOutputPath());
    if (details != null) {
      builder.setTestCase(details);
    }
    return builder.build();
  }
 catch (  IOException e) {
    throw new TestExecException(e.getMessage());
  }
}
