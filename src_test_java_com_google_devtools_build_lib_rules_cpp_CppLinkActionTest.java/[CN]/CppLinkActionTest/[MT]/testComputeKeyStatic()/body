{
  final RuleContext ruleContext=createDummyRuleContext();
  final PathFragment outputPath=new PathFragment("dummyRuleContext/output/path.xyz");
  final Artifact outputFile=getBinArtifactWithNoOwner(outputPath.getPathString());
  final Artifact oFile=getSourceArtifact("cc/a.o");
  final Artifact oFile2=getSourceArtifact("cc/a2.o");
  final Artifact interfaceSoBuilder=getBinArtifactWithNoOwner("foo/build_interface_so");
  final FeatureConfiguration featureConfiguration=getMockFeatureConfiguration();
  ActionTester.runTest(4,new ActionCombinationFactory(){
    @Override public Action generate(    int i){
      CppLinkActionBuilder builder=new CppLinkActionBuilder(ruleContext,outputFile){
        @Override protected Artifact getInterfaceSoBuilder(){
          return interfaceSoBuilder;
        }
      }
;
      builder.addCompilationInputs((i & 1) == 0 ? ImmutableList.of(oFile) : ImmutableList.of(oFile2));
      builder.setLinkType((i & 2) == 0 ? LinkTargetType.STATIC_LIBRARY : LinkTargetType.DYNAMIC_LIBRARY);
      builder.setFeatureConfiguration(featureConfiguration);
      return builder.build();
    }
  }
);
}
