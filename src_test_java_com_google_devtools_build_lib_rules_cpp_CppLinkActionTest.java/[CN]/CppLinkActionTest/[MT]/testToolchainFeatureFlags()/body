{
  FeatureConfiguration featureConfiguration=CcToolchainFeaturesTest.buildFeatures("feature {","   name: 'a'","   flag_set {","      action: '" + Link.LinkTargetType.EXECUTABLE.getActionName() + "'","      flag_group { flag: 'some_flag' }","   }","}","action_config {","   config_name: '" + Link.LinkTargetType.EXECUTABLE.getActionName() + "'","   action_name: '" + Link.LinkTargetType.EXECUTABLE.getActionName() + "'","   tool {","      tool_path: 'toolchain/mock_tool'","   }","}").getFeatureConfiguration("a",Link.LinkTargetType.EXECUTABLE.getActionName());
  CppLinkAction linkAction=createLinkBuilder(Link.LinkTargetType.EXECUTABLE,"out",ImmutableList.<Artifact>of(),ImmutableList.<LibraryToLink>of(),featureConfiguration).build();
  assertThat(Joiner.on(" ").join(linkAction.getArgv())).contains("mock_tool");
  assertThat(linkAction.getArgv()).contains("some_flag");
}
