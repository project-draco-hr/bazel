{
  WatchUtils.addXcodeSettings(ruleContext,xcodeProviderBuilder);
  addXcodeSettings(xcodeProviderBuilder);
  registerActions();
  ObjcProvider objcProvider=objcProvider(objcProviderBuilder);
  ReleaseBundling.Builder releaseBundling=new ReleaseBundling.Builder().setIpaArtifact(ipaArtifact).setBundleId(attributes.bundleId()).setAppIcon(attributes.appIcon()).setProvisioningProfile(attributes.provisioningProfile()).setProvisioningProfileAttributeName(WATCH_APP_PROVISIONING_PROFILE_ATTR).setTargetDeviceFamilies(families()).setIntermediateArtifacts(intermediateArtifacts).setInfoPlistsFromRule(attributes.infoPlists()).setArtifactPrefix(artifactPrefix).setEntitlements(attributes.entitlements());
  if (attributes.isBundleIdExplicitySpecified()) {
    releaseBundling.setPrimaryBundleId(attributes.bundleId());
  }
 else {
    releaseBundling.setFallbackBundleId(attributes.bundleId());
  }
  new ReleaseBundlingSupport(ruleContext,objcProvider,LinkedBinary.DEPENDENCIES_ONLY,ReleaseBundlingSupport.APP_BUNDLE_DIR_FORMAT,bundleName,WatchUtils.determineMinimumOsVersion(ObjcRuleClasses.objcConfiguration(ruleContext).getMinimumOs()),releaseBundling.build()).registerActions(DsymOutputType.APP).addXcodeSettings(xcodeProviderBuilder).addFilesToBuild(filesToBuild,DsymOutputType.APP).validateResources().validateAttributes();
  XcodeSupport xcodeSupport=new XcodeSupport(ruleContext,intermediateArtifacts,labelForWatchApplication()).addXcodeSettings(xcodeProviderBuilder,objcProvider,watchOSVersion.getApplicationXcodeProductType(),ruleContext.getFragment(AppleConfiguration.class).getIosCpu(),configurationDistinguisher);
  for (  Attribute attribute : dependencyAttributes) {
    xcodeSupport.addDependencies(xcodeProviderBuilder,attribute);
  }
}
