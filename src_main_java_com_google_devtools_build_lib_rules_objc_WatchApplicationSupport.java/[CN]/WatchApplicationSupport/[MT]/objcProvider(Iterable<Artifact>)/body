{
  ObjcProvider.Builder objcProviderBuilder=new ObjcProvider.Builder();
  objcProviderBuilder.addAll(MERGE_ZIP,innerBundleZips);
  for (  Attribute attribute : dependencyAttributes) {
    Iterable<ObjcProvider> dependencyObjcProviders=ruleContext.getPrerequisites(attribute.getName(),attribute.getAccessMode(),ObjcProvider.class);
    for (    ObjcProvider dependencyObjcProvider : dependencyObjcProviders) {
      objcProviderBuilder.addTransitiveAndPropagate(GENERAL_RESOURCE_FILE,dependencyObjcProvider);
      objcProviderBuilder.addTransitiveAndPropagate(GENERAL_RESOURCE_DIR,dependencyObjcProvider);
      objcProviderBuilder.addTransitiveAndPropagate(BUNDLE_FILE,dependencyObjcProvider);
      objcProviderBuilder.addTransitiveAndPropagate(XCASSETS_DIR,dependencyObjcProvider);
      objcProviderBuilder.addTransitiveAndPropagate(ASSET_CATALOG,dependencyObjcProvider);
      objcProviderBuilder.addTransitiveAndPropagate(STRINGS,dependencyObjcProvider);
      objcProviderBuilder.addTransitiveAndPropagate(STORYBOARD,dependencyObjcProvider);
    }
  }
  objcProviderBuilder.add(ObjcProvider.MERGE_ZIP,watchKitStubZip());
  objcProviderBuilder.addAll(GENERAL_RESOURCE_FILE,attributes.storyboards()).addAll(GENERAL_RESOURCE_FILE,attributes.resources()).addAll(GENERAL_RESOURCE_FILE,attributes.strings()).addAll(GENERAL_RESOURCE_DIR,ObjcCommon.xcodeStructuredResourceDirs(attributes.structuredResources())).addAll(BUNDLE_FILE,BundleableFile.flattenedRawResourceFiles(attributes.resources())).addAll(BUNDLE_FILE,BundleableFile.structuredRawResourceFiles(attributes.structuredResources())).addAll(XCASSETS_DIR,ObjcCommon.uniqueContainers(attributes.assetCatalogs(),ObjcCommon.ASSET_CATALOG_CONTAINER_TYPE)).addAll(ASSET_CATALOG,attributes.assetCatalogs()).addAll(STRINGS,attributes.strings()).addAll(STORYBOARD,attributes.storyboards());
  return objcProviderBuilder.build();
}
