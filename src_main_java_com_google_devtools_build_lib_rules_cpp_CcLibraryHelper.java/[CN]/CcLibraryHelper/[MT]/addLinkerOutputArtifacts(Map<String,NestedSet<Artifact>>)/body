{
  NestedSetBuilder<Artifact> archiveFile=new NestedSetBuilder<>(Order.STABLE_ORDER);
  NestedSetBuilder<Artifact> dynamicLibrary=new NestedSetBuilder<>(Order.STABLE_ORDER);
  if (ruleContext.attributes().get("alwayslink",Type.BOOLEAN)) {
    archiveFile.add(CppHelper.getLinuxLinkedArtifact(ruleContext,Link.LinkTargetType.ALWAYS_LINK_STATIC_LIBRARY));
  }
 else {
    archiveFile.add(CppHelper.getLinuxLinkedArtifact(ruleContext,Link.LinkTargetType.STATIC_LIBRARY));
  }
  if (CppRuleClasses.shouldCreateDynamicLibrary(ruleContext.attributes())) {
    dynamicLibrary.add(CppHelper.getLinuxLinkedArtifact(ruleContext,Link.LinkTargetType.DYNAMIC_LIBRARY));
  }
  outputGroups.put("archive",archiveFile.build());
  outputGroups.put("dynamic_library",dynamicLibrary.build());
}
