{
  List<CppModuleMap> result=new ArrayList<>();
  Iterables.addAll(result,Iterables.transform(deps,CPP_DEPS_TO_MODULES));
  CppCompilationContext stl=ruleContext.getPrerequisite(":stl",Mode.TARGET,CppCompilationContext.class);
  if (stl != null) {
    result.add(stl.getCppModuleMap());
  }
  CcToolchainProvider toolchain=CppHelper.getToolchain(ruleContext);
  if (toolchain != null) {
    result.add(toolchain.getCppCompilationContext().getCppModuleMap());
  }
  if (emitHeaderTargetModuleMaps) {
    for (    HeaderTargetModuleMapProvider provider : AnalysisUtils.getProviders(deps,HeaderTargetModuleMapProvider.class)) {
      result.addAll(provider.getCppModuleMaps());
    }
  }
  return Iterables.filter(result,Predicates.<CppModuleMap>notNull());
}
