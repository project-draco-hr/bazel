{
  Map<String,Artifact> bundlePathToFile=new HashMap<>();
  NestedSet<Artifact> artifacts=objcProvider.get(STRINGS);
  Iterable<BundleableFile> bundleFiles=Iterables.concat(objcProvider.get(BUNDLE_FILE),BundleableFile.flattenedRawResourceFiles(artifacts));
  for (  BundleableFile bundleFile : bundleFiles) {
    String bundlePath=bundleFile.getBundlePath();
    Artifact bundled=bundleFile.getBundled();
    if (bundlePathToFile.containsKey(bundlePath)) {
      Artifact original=bundlePathToFile.get(bundlePath);
      if (!Objects.equals(original.getOwner(),bundled.getOwner())) {
        ruleContext.ruleError(String.format("Two files map to the same path [%s] in this bundle but come from different " + "locations: %s and %s",bundlePath,original.getOwner(),bundled.getOwner()));
      }
 else {
        Verify.verify(!original.getRoot().equals(bundled.getRoot()),"%s and %s should have different roots but have %s and %s",original,bundleFile,original.getRoot(),bundled.getRoot());
      }
    }
 else {
      bundlePathToFile.put(bundlePath,bundled);
    }
  }
}
