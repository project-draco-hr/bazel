{
  IntermediateArtifacts intermediateArtifacts=ObjcRuleClasses.intermediateArtifacts(ruleContext);
  NestedSetBuilder<Artifact> infoPlists=NestedSetBuilder.stableOrder();
  if (ruleContext.attributes().has("options",Type.LABEL)) {
    OptionsProvider optionsProvider=ruleContext.getPrerequisite("options",Mode.TARGET,OptionsProvider.class);
    if (optionsProvider != null) {
      infoPlists.addAll(optionsProvider.getInfoplists());
    }
  }
  Artifact infoplist=ruleContext.getPrerequisiteArtifact("infoplist",Mode.TARGET);
  if (infoplist != null) {
    infoPlists.add(infoplist);
  }
  return new InfoplistMerging.Builder(ruleContext).setIntermediateArtifacts(intermediateArtifacts).setInputPlists(NestedSetBuilder.<Artifact>stableOrder().addTransitive(infoPlists.build()).addAll(actoolPartialInfoplist(ruleContext,objcProvider).asSet()).addAll(extraMergePlists).build()).setPlmerge(ruleContext.getExecutablePrerequisite("$plmerge",Mode.HOST)).setBundleIdentifiers(primaryBundleId,fallbackBundleId).build();
}
