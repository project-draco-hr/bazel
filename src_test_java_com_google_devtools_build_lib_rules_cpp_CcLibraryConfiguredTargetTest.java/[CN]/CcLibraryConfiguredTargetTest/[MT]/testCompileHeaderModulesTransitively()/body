{
  AnalysisMock.get().ccSupport().setupCrosstool(mockToolsConfig,MockCcSupport.HEADER_MODULES_FEATURE_CONFIGURATION);
  useConfiguration();
  setupPackagesForModuleTests(false);
  getConfiguredTarget("//nomodule:f");
  assertThat(getGeneratingAction(getBinArtifact("_objs/f/nomodule/f.pic.pcm","//nomodule:f"))).isNull();
  Artifact fObjectArtifact=getBinArtifact("_objs/f/nomodule/f.pic.o","//nomodule:f");
  CppCompileAction fObjectAction=(CppCompileAction)getGeneratingAction(fObjectArtifact);
  assertThat(getNonSystemModuleMaps(fObjectAction.getInputs())).containsExactly(getGenfilesArtifact("f.cppmap","//nomodule:f"),getGenfilesArtifact("e.cppmap","//nomodule:e"));
  assertThat(getHeaderModules(fObjectAction.getInputs())).isEmpty();
  assertThat(fObjectAction.getIncludeScannerSources()).containsExactly(getSourceArtifact("nomodule/f.cc"));
  assertThat(getHeaderModuleFlags(fObjectAction.getCompilerOptions())).isEmpty();
  getConfiguredTarget("//nomodule:c");
  assertThat(getGeneratingAction(getBinArtifact("_objs/c/nomodule/c.pic.pcm","//nomodule:c"))).isNull();
  Artifact cObjectArtifact=getBinArtifact("_objs/c/nomodule/c.pic.o","//nomodule:c");
  CppCompileAction cObjectAction=(CppCompileAction)getGeneratingAction(cObjectArtifact);
  assertThat(getNonSystemModuleMaps(cObjectAction.getInputs())).containsExactly(getGenfilesArtifact("b.cppmap","//module:b"),getGenfilesArtifact("c.cppmap","//nomodule:e"));
  assertThat(getHeaderModules(cObjectAction.getInputs())).containsExactly(getBinArtifact("_objs/b/module/b.pic.pcm","//module:b"));
  assertThat(cObjectAction.getIncludeScannerSources()).containsExactly(getSourceArtifact("nomodule/c.cc"));
  assertThat(cObjectAction.getMainIncludeScannerSource()).isEqualTo(getSourceArtifact("nomodule/c.cc"));
  assertThat(getHeaderModuleFlags(cObjectAction.getCompilerOptions())).isEmpty();
  getConfiguredTarget("//nomodule:d");
  assertThat(getGeneratingAction(getBinArtifact("_objs/d/nomodule/d.pic.pcm","//nomodule:d"))).isNull();
  Artifact dObjectArtifact=getBinArtifact("_objs/d/nomodule/d.pic.o","//nomodule:d");
  CppCompileAction dObjectAction=(CppCompileAction)getGeneratingAction(dObjectArtifact);
  assertThat(getNonSystemModuleMaps(dObjectAction.getInputs())).containsExactly(getGenfilesArtifact("c.cppmap","//nomodule:c"),getGenfilesArtifact("d.cppmap","//nomodule:d"));
  assertThat(getHeaderModules(dObjectAction.getInputs())).containsExactly(getBinArtifact("_objs/b/module/b.pic.pcm","//module:b"));
  assertThat(dObjectAction.getIncludeScannerSources()).containsExactly(getSourceArtifact("nomodule/d.cc"));
  assertThat(getHeaderModuleFlags(dObjectAction.getCompilerOptions())).isEmpty();
  getConfiguredTarget("//module:j");
  Artifact jObjectArtifact=getBinArtifact("_objs/j/module/j.pic.o","//module:j");
  CppCompileAction jObjectAction=(CppCompileAction)getGeneratingAction(jObjectArtifact);
  assertThat(getHeaderModules(jObjectAction.getInputs())).containsExactly(getBinArtifact("_objs/b/module/b.pic.pcm","//module:b"),getBinArtifact("_objs/g/module/g.pic.pcm","//module:g"));
  assertThat(jObjectAction.getIncludeScannerSources()).containsExactly(getSourceArtifact("module/j.cc"));
  assertThat(jObjectAction.getMainIncludeScannerSource()).isEqualTo(getSourceArtifact("module/j.cc"));
  assertThat(getHeaderModuleFlags(jObjectAction.getCompilerOptions())).containsExactly("b.pic.pcm","g.pic.pcm");
}
