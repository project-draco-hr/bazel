{
  Artifact buildInfo=Iterables.getOnlyElement(ruleContext.getAnalysisEnvironment().getBuildInfo(ruleContext,ObjcBuildInfoFactory.KEY));
  ruleContext.registerAction(new SpawnAction.Builder().setMnemonic("ObjcVersionPlist").setExecutable(new PathFragment("/bin/bash")).setCommandLine(new CustomCommandLine.Builder().add("-c").add("VERSION=\"$(" + "grep \"^" + BuildInfo.BUILD_EMBED_LABEL + "\" "+ buildInfo.getExecPathString()+ " | cut -d' ' -f2- | sed -e 's#\"#\\\"#g')\" && "+ "cat >"+ getGeneratedVersionPlist().getExecPathString()+ " <<EOF\n"+ "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"+ "<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" "+ "\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n"+ "<plist version=\"1.0\">\n"+ "<dict>\n"+ "EOF\n"+ "if [[ -n \"${VERSION}\" ]]; then\n"+ "  for KEY in CFBundleVersion CFBundleShortVersionString; do\n"+ "    echo \"  <key>${KEY}</key>\n\" >> "+ getGeneratedVersionPlist().getExecPathString()+ "\n"+ "    echo \"  <string>${VERSION}</string>\n\" >> "+ getGeneratedVersionPlist().getExecPathString()+ "\n"+ "  done\n"+ "fi\n"+ "cat >>"+ getGeneratedVersionPlist().getExecPathString()+ " <<EOF\n"+ "</dict>\n"+ "</plist>\n"+ "EOF\n").build()).addInput(buildInfo).addOutput(getGeneratedVersionPlist()).build(ruleContext));
}
