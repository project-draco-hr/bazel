{
  Map<FullyQualifiedName,Boolean> members=new LinkedHashMap<>();
  for (XMLEvent element=nextTag(eventReader); !isEndTag(element,TAG_DECLARE_STYLEABLE); element=nextTag(eventReader)) {
    if (isStartTag(element,TAG_ATTR)) {
      StartElement attr=element.asStartElement();
      FullyQualifiedName attrName=fqnFactory.create(ResourceType.ATTR,getElementName(attr));
      if (XmlResourceValues.getElementAttributeByName(attr,ATTR_FORMAT) != null || (XmlResourceValues.peekNextTag(eventReader) != null && XmlResourceValues.peekNextTag(eventReader).isStartElement())) {
        overwritingConsumer.consume(attrName,DataResourceXml.createWithNoNamespace(path,parseAttr(eventReader,attr)));
        members.put(attrName,Boolean.TRUE);
      }
 else {
        members.put(attrName,Boolean.FALSE);
      }
    }
  }
  combiningConsumer.consume(fqnFactory.create(ResourceType.STYLEABLE,getElementName(start)),DataResourceXml.createWithNoNamespace(path,StyleableXmlResourceValue.of(members)));
}
