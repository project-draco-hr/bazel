{
  if (!ndkRelease.isValid) {
    ndkRelease=NdkRelease.guessBitness(KNOWN_NDK_REVISION);
    eventHandler.handle(Event.warn(String.format("The revision of the Andorid NDK given in android_ndk_repository rule '%s' could not be " + "determined (the revision string found is '%s'). " + "Defaulting to Android NDK revision %s",repositoryName,ndkRelease.rawRelease,ndkRelease)));
  }
 else   if (!KNOWN_NDK_REVISION.equals(ndkRelease.release)) {
    eventHandler.handle(Event.warn(String.format("Bazel Android NDK crosstools are based on Android NDK revision %s. " + "The revision of the Android NDK given in android_ndk_repository rule '%s' is '%s'",KNOWN_NDK_REVISION,repositoryName,ndkRelease.release)));
  }
  CrosstoolRelease crosstoolRelease=CrosstoolRelease.newBuilder().setMajorVersion("android").setMinorVersion("").setDefaultTargetCpu("armeabi").addAllDefaultToolchain(getDefaultCpuToolchains(stlImpl)).addAllToolchain(createToolchains(ndkPaths,stlImpl,hostPlatform)).build();
  return crosstoolRelease;
}
