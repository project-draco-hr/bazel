{
  List<Artifact> outs=new ArrayList<>();
  List<Artifact> ins=new ArrayList<>();
  List<String> args=new ArrayList<>();
  args.add("--aapt");
  args.add(sdk.getAapt().getExecutable().getExecPathString());
  Iterables.addAll(ins,ruleContext.getExecutablePrerequisite("$android_resources_processor",Mode.HOST).getRunfilesSupport().getRunfilesArtifactsWithoutMiddlemen());
  args.add("--annotationJar");
  args.add(sdk.getAnnotationsJar().getExecPathString());
  ins.add(sdk.getAnnotationsJar());
  args.add("--androidJar");
  args.add(sdk.getAndroidJar().getExecPathString());
  ins.add(sdk.getAndroidJar());
  args.add("--primaryData");
  addPrimaryResourceContainer(ins,args,primary);
  if (!dependencies.isEmpty()) {
    args.add("--data");
    List<String> data=new ArrayList<>();
    for (    ResourceContainer container : dependencies) {
      addResourceContainer(ins,data,container);
    }
    args.add(Joiner.on(",").join(data));
  }
  if (rTxtOut != null) {
    args.add("--rOutput");
    args.add(rTxtOut.getExecPathString());
    outs.add(rTxtOut);
    args.add("--packageType");
    args.add("LIBRARY");
  }
  if (symbolsTxt != null) {
    args.add("--symbolsTxtOut");
    args.add(symbolsTxt.getExecPathString());
    outs.add(symbolsTxt);
  }
  if (sourceJarOut != null) {
    args.add("--srcJarOutput");
    args.add(sourceJarOut.getExecPathString());
    outs.add(sourceJarOut);
  }
  if (proguardOut != null) {
    args.add("--proguardOutput");
    args.add(proguardOut.getExecPathString());
    outs.add(proguardOut);
  }
  if (apkOut != null) {
    args.add("--packagePath");
    args.add(apkOut.getExecPathString());
    outs.add(apkOut);
  }
  if (!resourceConfigs.isEmpty()) {
    args.add("--resourceConfigs");
    args.add(Joiner.on(',').join(resourceConfigs));
  }
  if (!densities.isEmpty()) {
    args.add("--densities");
    args.add(Joiner.on(',').join(densities));
  }
  if (!uncompressedExtensions.isEmpty()) {
    args.add("--uncompressedExtensions");
    args.add(Joiner.on(',').join(uncompressedExtensions));
  }
  if (!assetsToIgnore.isEmpty()) {
    args.add("--assetsToIgnore");
    args.add(Joiner.on(',').join(assetsToIgnore));
  }
  if (debug) {
    args.add("--debug");
  }
  if (versionCode != null) {
    args.add("--versionCode");
    args.add(versionCode);
  }
  if (versionName != null) {
    args.add("--versionName");
    args.add(versionName);
  }
  if (applicationId != null) {
    args.add("--applicationId");
    args.add(applicationId);
  }
  if (!Strings.isNullOrEmpty(customJavaPackage)) {
    args.add("--packageForR");
    args.add(customJavaPackage);
  }
  ruleContext.registerAction(this.spawnActionBuilder.addTool(sdk.getAapt()).addInputs(ImmutableList.<Artifact>copyOf(ins)).addOutputs(ImmutableList.<Artifact>copyOf(outs)).addArguments(ImmutableList.<String>copyOf(args)).setExecutable(ruleContext.getExecutablePrerequisite("$android_resources_processor",Mode.HOST)).setProgressMessage("Processing resources").setMnemonic("AndroidAapt").build(context));
  return new ResourceContainer(primary.getLabel(),primary.getJavaPackage(),primary.getRenameManifestPackage(),primary.getConstantsInlined(),apkOut != null ? apkOut : primary.getApk(),primary.getManifest(),sourceJarOut,primary.getArtifacts(ResourceType.ASSETS),primary.getArtifacts(ResourceType.RESOURCES),primary.getRoots(ResourceType.ASSETS),primary.getRoots(ResourceType.RESOURCES),primary.isManifestExported(),rTxtOut,symbolsTxt);
}
