{
  ClassWriter cw=new ClassWriter(0);
  MethodVisitor mv;
  cw.visit(52,Opcodes.ACC_PUBLIC + Opcodes.ACC_SUPER,"sourcedebugextension/Test",null,"java/lang/Object",null);
  cw.visitSource("dispatch.clj","SMAP\ndispatch.java\nClojure\n*S Clojure\n*F\n+ 1 dispatch.clj\nclojure/pprint/dispatch.clj\n*L\n144#1,8:144\n*E");
{
    mv=cw.visitMethod(Opcodes.ACC_PUBLIC,"<init>","()V",null,null);
    mv.visitCode();
    mv.visitVarInsn(Opcodes.ALOAD,0);
    mv.visitMethodInsn(Opcodes.INVOKESPECIAL,"java/lang/Object","<init>","()V",false);
    mv.visitInsn(Opcodes.RETURN);
    mv.visitMaxs(1,1);
    mv.visitEnd();
  }
{
    mv=cw.visitMethod(Opcodes.ACC_PUBLIC + Opcodes.ACC_STATIC,"main","([Ljava/lang/String;)V",null,null);
    mv.visitCode();
    mv.visitFieldInsn(Opcodes.GETSTATIC,"java/lang/System","err","Ljava/io/PrintStream;");
    mv.visitLdcInsn("Hello");
    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,"java/io/PrintStream","println","(Ljava/lang/String;)V",false);
    mv.visitInsn(Opcodes.RETURN);
    mv.visitMaxs(2,1);
    mv.visitEnd();
  }
  cw.visitEnd();
  return cw.toByteArray();
}
