{
  SkylarkClassObject sourcesProvider=new SkylarkClassObject(ImmutableMap.<String,Object>of(TRANSITIVE_PYTHON_SRCS,SkylarkNestedSet.of(Artifact.class,transitivePythonSources),IS_USING_SHARED_LIBRARY,usesSharedLibraries()),"No such attribute '%s'");
  builder.add(InstrumentedFilesProvider.class,InstrumentedFilesCollector.collect(ruleContext,semantics.getCoverageInstrumentationSpec(),METADATA_COLLECTOR,filesToBuild)).addSkylarkTransitiveInfo(PYTHON_SKYLARK_PROVIDER_NAME,sourcesProvider).addOutputGroup(OutputGroupProvider.FILES_TO_COMPILE,transitivePythonSources).addOutputGroup(OutputGroupProvider.COMPILATION_PREREQUISITES,transitivePythonSources);
}
