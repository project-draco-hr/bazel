{
  Map<Artifact,FileValue> fileData=new HashMap<>();
  Map<Artifact,Map<TreeFileArtifact,FileArtifactValue>> directoryData=new HashMap<>();
  for (  TreeFileArtifact output : contents) {
    try {
      Map<TreeFileArtifact,FileArtifactValue> dirDatum=directoryData.get(output.getParent());
      if (dirDatum == null) {
        dirDatum=new HashMap<>();
        directoryData.put(output.getParent(),dirDatum);
      }
      FileValue fileValue=ActionMetadataHandler.fileValueFromArtifact(output,null,null);
      dirDatum.put(output,FileArtifactValue.create(output,fileValue));
      fileData.put(output,fileValue);
    }
 catch (    IOException e) {
      throw new IllegalStateException(e);
    }
  }
  Map<Artifact,TreeArtifactValue> treeArtifactData=new HashMap<>();
  for (  Map.Entry<Artifact,Map<TreeFileArtifact,FileArtifactValue>> dirDatum : directoryData.entrySet()) {
    treeArtifactData.put(dirDatum.getKey(),TreeArtifactValue.create(dirDatum.getValue()));
  }
  return new ActionExecutionValue(fileData,treeArtifactData,ImmutableMap.<Artifact,FileArtifactValue>of());
}
