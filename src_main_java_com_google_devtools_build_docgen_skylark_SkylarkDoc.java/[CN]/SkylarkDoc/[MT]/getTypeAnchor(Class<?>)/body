{
  if (type.equals(Boolean.class) || type.equals(boolean.class)) {
    return "<a class=\"anchor\" href=\"" + TOP_LEVEL_ID + ".html#bool\">bool</a>";
  }
 else   if (type.equals(String.class)) {
    return "<a class=\"anchor\" href=\"string.html\">string</a>";
  }
 else   if (Map.class.isAssignableFrom(type)) {
    return "<a class=\"anchor\" href=\"dict.html\">dict</a>";
  }
 else   if (Tuple.class.isAssignableFrom(type)) {
    return "<a class=\"anchor\" href=\"list.html\">tuple</a>";
  }
 else   if (List.class.isAssignableFrom(type) || SkylarkList.class.isAssignableFrom(type) || type == HackHackEitherList.class) {
    return "<a class=\"anchor\" href=\"list.html\">list</a>";
  }
 else   if (type.equals(Void.TYPE) || type.equals(NoneType.class)) {
    return "<a class=\"anchor\" href=\"" + TOP_LEVEL_ID + ".html#None\">None</a>";
  }
 else   if (type.isAnnotationPresent(SkylarkModule.class)) {
    String module=type.getAnnotation(SkylarkModule.class).name();
    return "<a class=\"anchor\" href=\"" + module + ".html\">"+ module+ "</a>";
  }
 else {
    return EvalUtils.getDataTypeNameFromClass(type);
  }
}
