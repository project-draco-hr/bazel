{
  String toolchainName="aarch64-linux-android-4.9";
  String targetPlatform="aarch64-linux-android";
  String gccToolchain=ndkPaths.createGccToolchainPath(toolchainName);
  String llvmTriple="aarch64-none-linux-android";
  CToolchain.Builder toolchain=CToolchain.newBuilder().setToolchainIdentifier("aarch64-linux-android-clang3.8").setTargetSystemName("aarch64-linux-android").setTargetCpu("arm64-v8a").setCompiler("clang3.8").addAllToolPath(ndkPaths.createClangToolpaths(toolchainName,targetPlatform,null)).setBuiltinSysroot(ndkPaths.createBuiltinSysroot("arm64")).addCompilerFlag("-gcc-toolchain").addCompilerFlag(gccToolchain).addCompilerFlag("-target").addCompilerFlag(llvmTriple).addCompilerFlag("-ffunction-sections").addCompilerFlag("-funwind-tables").addCompilerFlag("-fstack-protector-strong").addCompilerFlag("-fpic").addCompilerFlag("-Wno-invalid-command-line-argument").addCompilerFlag("-Wno-unused-command-line-argument").addCompilerFlag("-no-canonical-prefixes").addLinkerFlag("-gcc-toolchain").addLinkerFlag(gccToolchain).addLinkerFlag("-target").addLinkerFlag(llvmTriple).addLinkerFlag("-no-canonical-prefixes").addCompilationModeFlags(CompilationModeFlags.newBuilder().setMode(CompilationMode.OPT).addCompilerFlag("-O2").addCompilerFlag("-g").addCompilerFlag("-DNDEBUG")).addCompilationModeFlags(CompilationModeFlags.newBuilder().setMode(CompilationMode.DBG).addCompilerFlag("-O0").addCompilerFlag("-UNDEBUG"));
  ndkPaths.addToolchainIncludePaths(toolchain,toolchainName,targetPlatform,"4.9.x");
  stlImpl.addStlImpl(toolchain,"4.9");
  return toolchain;
}
