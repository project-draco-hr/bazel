{
  Location ruleLocation=EmptyLocation.INSTANCE;
  RuleClass ruleClass=packageDeserializationEnvironment.getRuleClass(rulePb,ruleLocation);
  Map<String,ParsedAttributeValue> attributeValues=new HashMap<>();
  for (  Build.Attribute attrPb : rulePb.getAttributeList()) {
    Type<?> type=ruleClass.getAttributeByName(attrPb.getName()).getType();
    attributeValues.put(attrPb.getName(),deserializeAttribute(type,attrPb));
  }
  Label ruleLabel=deserializeLabel(rulePb.getName());
  try {
    Rule rule=ruleClass.createRuleWithParsedAttributeValues(ruleLabel,context.packageBuilder,ruleLocation,attributeValues,NullEventHandler.INSTANCE,new AttributeContainerWithoutLocation(ruleClass));
    context.packageBuilder.addRule(rule);
    Preconditions.checkState(!rule.containsErrors());
  }
 catch (  NameConflictException|LabelSyntaxException e) {
    throw new PackageDeserializationException(e);
  }
}
