{
  this.outputPath=outputPath;
  this.verboseFailures=verboseFailures;
  this.showSubcommands=showSubcommands;
  this.execRoot=execRoot;
  this.reporter=reporter;
  this.eventBus=eventBus;
  this.clock=clock;
  this.options=options;
  this.inExecutionPhase=new AtomicBoolean(false);
  LinkedHashSet<ActionContext> allContexts=new LinkedHashSet<>();
  allContexts.addAll(contextImplementations);
  ImmutableMap.Builder<String,SpawnActionContext> spawnMapBuilder=ImmutableMap.builder();
  for (  Map.Entry<String,ActionContext> entry : spawnContextMap.entrySet()) {
    spawnMapBuilder.put(entry.getKey(),(SpawnActionContext)entry.getValue());
    allContexts.add(entry.getValue());
  }
  for (  ActionContext context : contextImplementations) {
    ExecutionStrategy annotation=context.getClass().getAnnotation(ExecutionStrategy.class);
    if (annotation != null) {
      contextMap.put(annotation.contextType(),context);
    }
  }
  this.spawnActionContextMap=spawnMapBuilder.build();
  for (  ActionContextProvider factory : contextProviders) {
    factory.executorCreated(allContexts);
  }
}
