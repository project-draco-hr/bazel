{
  if (objValue instanceof ClassObject) {
    Object result=null;
    try {
      result=((ClassObject)objValue).getValue(name);
    }
 catch (    IllegalArgumentException ex) {
      throw new EvalException(loc,ex);
    }
    if (result != null) {
      result=SkylarkType.convertToSkylark(result,env);
      SkylarkType.checkTypeAllowedInSkylark(result,loc);
      return result;
    }
  }
  Iterable<MethodDescriptor> methods=objValue instanceof Class<?> ? FuncallExpression.getMethods((Class<?>)objValue,name,loc) : FuncallExpression.getMethods(objValue.getClass(),name,loc);
  if (methods != null) {
    methods=Iterables.filter(methods,new Predicate<MethodDescriptor>(){
      @Override public boolean apply(      MethodDescriptor methodDescriptor){
        return methodDescriptor.getAnnotation().structField();
      }
    }
);
    if (methods.iterator().hasNext()) {
      MethodDescriptor method=Iterables.getOnlyElement(methods);
      if (method.getAnnotation().structField()) {
        return FuncallExpression.callMethod(method,name,objValue,new Object[]{},loc,env);
      }
    }
  }
  return null;
}
