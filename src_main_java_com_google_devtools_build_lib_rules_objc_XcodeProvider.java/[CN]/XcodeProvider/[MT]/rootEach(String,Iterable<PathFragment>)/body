{
  Preconditions.checkArgument(prefix.startsWith("$"),"prefix should start with a build setting variable like '$(NAME)': %s",prefix);
  Preconditions.checkArgument(!prefix.endsWith("/"),"prefix should not end with '/': %s",prefix);
  return Iterables.transform(paths,new Function<PathFragment,String>(){
    @Override public String apply(    PathFragment input){
      if (input.getSafePathString().equals(".")) {
        return prefix;
      }
 else       if (input.isAbsolute()) {
        return input.getSafePathString();
      }
 else {
        return prefix + "/" + input.getSafePathString();
      }
    }
  }
);
}
