{
  NestedSetBuilder<Artifact> importantBuilder=NestedSetBuilder.stableOrder();
  NestedSetBuilder<Artifact> allBuilder=NestedSetBuilder.stableOrder();
  OutputGroupProvider outputGroupProvider=target.getProvider(OutputGroupProvider.class);
  for (  String outputGroup : context.outputGroups()) {
    NestedSetBuilder<Artifact> results=NestedSetBuilder.stableOrder();
    if (outputGroup.equals(OutputGroupProvider.DEFAULT)) {
      FileProvider fileProvider=target.getProvider(FileProvider.class);
      if (fileProvider != null) {
        results.addTransitive(fileProvider.getFilesToBuild());
      }
    }
    if (outputGroupProvider != null) {
      results.addTransitive(outputGroupProvider.getOutputGroup(outputGroup));
    }
    if (outputGroup.startsWith(OutputGroupProvider.HIDDEN_OUTPUT_GROUP_PREFIX)) {
      allBuilder.addTransitive(results.build());
    }
 else {
      importantBuilder.addTransitive(results.build());
    }
  }
  NestedSet<Artifact> importantArtifacts=importantBuilder.build();
  allBuilder.addTransitive(importantArtifacts);
  return new ArtifactsToBuild(importantArtifacts,allBuilder.build());
}
