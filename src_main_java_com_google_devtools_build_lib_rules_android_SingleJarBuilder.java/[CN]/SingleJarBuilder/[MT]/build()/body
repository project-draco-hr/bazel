{
  ImmutableList<Artifact> inputs=inputJars.build();
  List<String> jvmArgs=ImmutableList.of("-client",SINGLEJAR_MAX_MEMORY);
  CustomCommandLine.Builder commandLine=CustomCommandLine.builder();
  checkNotNull(outputJar);
  commandLine.addExecPath("--output",outputJar);
  commandLine.add("--dont_change_compression");
  commandLine.add("--exclude_build_data");
  commandLine.addExecPaths("--sources",inputs);
  ruleContext.registerAction(new SpawnAction.Builder().addInputs(inputs).addTransitiveInputs(JavaCompilationHelper.getHostJavabaseInputs(ruleContext)).addOutput(outputJar).setResources(RESOURCE_SET).setJarExecutable(ruleContext.getHostConfiguration().getFragment(Jvm.class).getJavaExecutable(),ruleContext.getPrerequisiteArtifact("$singlejar",Mode.HOST),jvmArgs).setCommandLine(commandLine.build()).useParameterFile(ParameterFileType.SHELL_QUOTED).setProgressMessage("Building classes.jar for .aar").setMnemonic("AarClassesJar").build(ruleContext));
}
