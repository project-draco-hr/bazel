{
  final Uniquifier<T> uniquifier=env.createUniquifier();
  final int depthBound=args.size() > 1 ? args.get(1).getInteger() : Integer.MAX_VALUE;
  env.eval(args.get(0).getExpression(),new Callback<T>(){
    @Override public void process(    Iterable<T> partialResult) throws QueryException, InterruptedException {
      Iterable<T> current=partialResult;
      for (int i=0; i <= depthBound; i++) {
        List<T> next=new ArrayList<>();
        Iterable<T> currentInUniverse=Iterables.filter(current,universe);
        next.addAll(env.getReverseDeps(uniquifier.unique(currentInUniverse)));
        callback.process(currentInUniverse);
        if (next.isEmpty()) {
          break;
        }
        current=next;
      }
    }
  }
);
}
