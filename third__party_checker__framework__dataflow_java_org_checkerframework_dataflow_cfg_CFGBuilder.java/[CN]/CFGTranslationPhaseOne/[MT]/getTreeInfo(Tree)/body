{
  final TypeMirror type=InternalUtils.typeOf(tree);
  final boolean boxed=TypesUtils.isBoxedPrimitive(type);
  final TypeMirror unboxedType=boxed ? types.unboxedType(type) : type;
  final boolean bool=TypesUtils.isBooleanType(type);
  final boolean numeric=TypesUtils.isNumeric(unboxedType);
  return new TreeInfo(){
    @Override public boolean isNumeric(){
      return numeric;
    }
    @Override public boolean isBoxed(){
      return boxed;
    }
    @Override public boolean isBoolean(){
      return bool;
    }
    @Override public TypeMirror unboxedType(){
      return unboxedType;
    }
  }
;
}
