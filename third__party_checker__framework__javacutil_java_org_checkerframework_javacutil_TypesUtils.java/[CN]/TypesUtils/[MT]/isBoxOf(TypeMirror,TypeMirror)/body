{
  if (declaredType.getKind() != TypeKind.DECLARED) {
    return false;
  }
  final String qualifiedName=getQualifiedName((DeclaredType)declaredType).toString();
switch (primitiveType.getKind()) {
case BOOLEAN:
    return qualifiedName.equals("java.lang.Boolean");
case BYTE:
  return qualifiedName.equals("java.lang.Byte");
case CHAR:
return qualifiedName.equals("java.lang.Character");
case DOUBLE:
return qualifiedName.equals("java.lang.Double");
case FLOAT:
return qualifiedName.equals("java.lang.Float");
case INT:
return qualifiedName.equals("java.lang.Integer");
case LONG:
return qualifiedName.equals("java.lang.Long");
case SHORT:
return qualifiedName.equals("java.lang.Short");
default :
return false;
}
}
