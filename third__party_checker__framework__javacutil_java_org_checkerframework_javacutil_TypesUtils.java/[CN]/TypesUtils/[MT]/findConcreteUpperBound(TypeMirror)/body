{
  TypeMirror effectiveUpper=boundedType;
  outerLoop:   while (true) {
switch (effectiveUpper.getKind()) {
case WILDCARD:
      effectiveUpper=((javax.lang.model.type.WildcardType)effectiveUpper).getExtendsBound();
    if (effectiveUpper == null) {
      return null;
    }
  break;
case TYPEVAR:
effectiveUpper=((TypeVariable)effectiveUpper).getUpperBound();
break;
default :
break outerLoop;
}
}
return effectiveUpper;
}
