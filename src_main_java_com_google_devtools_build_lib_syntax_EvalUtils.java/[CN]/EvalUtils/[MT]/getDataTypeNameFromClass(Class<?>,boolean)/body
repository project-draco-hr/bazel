{
  if (c.equals(Object.class)) {
    return "unknown";
  }
 else   if (c.equals(String.class)) {
    return "string";
  }
 else   if (c.equals(Integer.class)) {
    return "int";
  }
 else   if (c.equals(Boolean.class)) {
    return "bool";
  }
 else   if (c.equals(Void.TYPE) || c.equals(Environment.NoneType.class)) {
    return "NoneType";
  }
 else   if (List.class.isAssignableFrom(c)) {
    return isTuple(c) ? "Tuple" : "List";
  }
 else   if (GlobList.class.isAssignableFrom(c)) {
    return "glob list";
  }
 else   if (Map.class.isAssignableFrom(c)) {
    return "dict";
  }
 else   if (BaseFunction.class.isAssignableFrom(c)) {
    return "function";
  }
 else   if (c.equals(FilesetEntry.class)) {
    return "FilesetEntry";
  }
 else   if (c.equals(SelectorValue.class)) {
    return "select";
  }
 else   if (NestedSet.class.isAssignableFrom(c) || SkylarkNestedSet.class.isAssignableFrom(c)) {
    return "set";
  }
 else   if (ClassObject.SkylarkClassObject.class.isAssignableFrom(c)) {
    return "struct";
  }
 else   if (SkylarkList.class.isAssignableFrom(c)) {
    return "list";
  }
 else   if (c.isAnnotationPresent(SkylarkModule.class)) {
    SkylarkModule module=c.getAnnotation(SkylarkModule.class);
    return c.getAnnotation(SkylarkModule.class).name() + ((module.namespace() && highlightNameSpaces) ? " (a language module)" : "");
  }
 else {
    if (c.getSimpleName().isEmpty()) {
      return c.getName();
    }
 else {
      return c.getSimpleName();
    }
  }
}
