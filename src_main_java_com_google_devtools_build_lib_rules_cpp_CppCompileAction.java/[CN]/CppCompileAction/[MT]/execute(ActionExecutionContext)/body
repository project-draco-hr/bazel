{
  Executor executor=actionExecutionContext.getExecutor();
  CppCompileActionContext.Reply reply;
  try {
    reply=executor.getContext(actionContext).execWithReply(this,actionExecutionContext);
  }
 catch (  ExecException e) {
    throw e.toActionExecutionException("C++ compilation of rule '" + getOwner().getLabel() + "'",executor.getVerboseFailures(),this);
  }
  ensureCoverageNotesFilesExist();
  IncludeScanningContext scanningContext=executor.getContext(IncludeScanningContext.class);
  Path execRoot=executor.getExecRoot();
  NestedSet<Artifact> discoveredInputs=discoverInputsFromDotdFiles(execRoot,scanningContext.getArtifactResolver(),reply);
  reply=null;
  boolean usesStrictHdrsChecks=context.getDeclaredIncludeDirs().isEmpty() && context.getDeclaredIncludeWarnDirs().isEmpty();
  if (shouldScanIncludes() || !usesStrictHdrsChecks) {
    updateActionInputs(discoveredInputs);
  }
  validateInclusions(discoveredInputs,actionExecutionContext.getArtifactExpander(),executor.getEventHandler());
}
