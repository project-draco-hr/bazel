{
  if (!shouldScanIncludes() || !inputsKnown()) {
    return;
  }
  IncludeProblems errors=new IncludeProblems();
  IncludeProblems warnings=new IncludeProblems();
  Set<Artifact> allowedIncludes=new HashSet<>();
  for (  Artifact input : mandatoryInputs) {
    if (input.isMiddlemanArtifact()) {
      middlemanExpander.expand(input,allowedIncludes);
    }
    allowedIncludes.add(input);
  }
  if (optionalSourceFile != null) {
    allowedIncludes.add(optionalSourceFile);
  }
  Iterable<PathFragment> ignoreDirs=getValidationIgnoredDirs();
  Set<PathFragment> declaredIncludeDirs=Sets.newHashSet(context.getDeclaredIncludeDirs());
  Set<PathFragment> warnIncludeDirs=Sets.newHashSet(context.getDeclaredIncludeWarnDirs());
  Set<Artifact> declaredIncludeSrcs=Sets.newHashSet(context.getDeclaredIncludeSrcs());
  for (  Artifact input : getInputs()) {
    if (context.getCompilationPrerequisites().contains(input) || allowedIncludes.contains(input)) {
      continue;
    }
    if (FileSystemUtils.startsWithAny(input.getExecPath(),ignoreDirs)) {
      continue;
    }
    if (!isDeclaredIn(input,declaredIncludeDirs,declaredIncludeSrcs)) {
      if (isDeclaredIn(input,warnIncludeDirs,ImmutableSet.<Artifact>of())) {
        warnings.add(input.getPath().toString());
      }
 else {
        errors.add(input.getPath().toString());
      }
    }
  }
  if (VALIDATION_DEBUG_WARN) {
synchronized (System.err) {
      if (VALIDATION_DEBUG >= 2 || errors.hasProblems() || warnings.hasProblems()) {
        if (errors.hasProblems()) {
          System.err.println("ERROR: Include(s) were not in declared srcs:");
        }
 else         if (warnings.hasProblems()) {
          System.err.println("WARN: Include(s) were not in declared srcs:");
        }
 else {
          System.err.println("INFO: Include(s) were OK for '" + getSourceFile() + "', declared srcs:");
        }
        for (        Artifact a : context.getDeclaredIncludeSrcs()) {
          System.err.println("  '" + a.toDetailString() + "'");
        }
        System.err.println(" or under declared dirs:");
        for (        PathFragment f : Sets.newTreeSet(context.getDeclaredIncludeDirs())) {
          System.err.println("  '" + f + "'");
        }
        System.err.println(" or under declared warn dirs:");
        for (        PathFragment f : Sets.newTreeSet(context.getDeclaredIncludeWarnDirs())) {
          System.err.println("  '" + f + "'");
        }
        System.err.println(" with prefixes:");
        for (        PathFragment dirpath : context.getQuoteIncludeDirs()) {
          System.err.println("  '" + dirpath + "'");
        }
      }
    }
  }
  if (warnings.hasProblems()) {
    eventHandler.handle(new Event(EventKind.WARNING,getOwner().getLocation(),warnings.getMessage(this,getSourceFile()),Label.print(getOwner().getLabel())));
  }
  errors.assertProblemFree(this,getSourceFile());
}
