{
  Root root=Root.asSourceRoot(scratch.resolve("/workspace"));
  PathFragment pathB=new PathFragment("repo/b");
  PathFragment externalPathB=Label.EXTERNAL_PACKAGE_NAME.getRelative(pathB);
  Artifact artifactB=new Artifact(pathB,root);
  Artifact artifactExternalB=new Artifact(externalPathB,root);
  Runfiles.ManifestBuilder builder=new Runfiles.ManifestBuilder(PathFragment.EMPTY_FRAGMENT,false);
  Map<PathFragment,Artifact> inputManifest=ImmutableMap.<PathFragment,Artifact>builder().put(pathB,artifactB).put(externalPathB,artifactExternalB).build();
  Runfiles.ConflictChecker checker=new Runfiles.ConflictChecker(Runfiles.ConflictPolicy.WARN,reporter,null);
  builder.addUnderWorkspace(inputManifest,checker);
  assertThat(builder.build().entrySet()).containsExactly(Maps.immutableEntry(new PathFragment("repo/b"),artifactExternalB));
  checkConflictWarning();
}
