{
  ManifestBuilder builder=new ManifestBuilder(new ConflictChecker(conflictPolicy,eventHandler,location),suffix,legacyRepositoryStructure);
  builder.putSymlinks(symlinks);
  for (  Artifact artifact : getUnconditionalArtifactsWithoutMiddlemen()) {
    builder.put(RunfilesPath.resolve(artifact.getRootRelativePath(),suffix),artifact);
  }
  for (  Runfiles.PruningManifest pruningManifest : getPruningManifests()) {
    Map<String,Artifact> allowedRunfiles=new HashMap<>();
    for (    Artifact artifact : pruningManifest.getCandidateRunfiles()) {
      allowedRunfiles.put(artifact.getRootRelativePath().getPathString(),artifact);
    }
    try (BufferedReader reader=new BufferedReader(new InputStreamReader(pruningManifest.getManifestFile().getPath().getInputStream()))){
      String line;
      while ((line=reader.readLine()) != null) {
        Artifact artifact=allowedRunfiles.get(line);
        if (artifact != null) {
          builder.put(RunfilesPath.resolve(artifact.getRootRelativePath(),suffix),artifact);
        }
      }
    }
   }
  builder.filterListForObscuringSymlinks(eventHandler,location);
  for (  PathFragment extraPath : emptyFilesSupplier.getExtraPaths(builder.getPaths())) {
    builder.put(RunfilesPath.alreadyResolved(extraPath,suffix),null);
  }
  if (conflictPolicy == ConflictPolicy.IGNORE) {
    builder.resetConflictPolicy(new ConflictChecker(ConflictPolicy.WARN,eventHandler,location));
  }
  builder.putRootSymlinks(rootSymlinks);
  return builder.build();
}
