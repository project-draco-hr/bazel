{
  Map<String,String> rootMap=new HashMap<>();
  BuildConfiguration targetConfiguration=Iterables.getOnlyElement(configurations.getTargetConfigurations());
  rootMap.put(targetConfiguration.getBinDirectory(RepositoryName.MAIN).getPath().toString(),"bin");
  rootMap.put(targetConfiguration.getGenfilesDirectory(RepositoryName.MAIN).getPath().toString(),"genfiles");
  rootMap.put(targetConfiguration.getMiddlemanDirectory(RepositoryName.MAIN).getPath().toString(),"internal");
  BuildConfiguration hostConfiguration=configurations.getHostConfiguration();
  rootMap.put(hostConfiguration.getBinDirectory(RepositoryName.MAIN).getPath().toString(),"bin(host)");
  rootMap.put(hostConfiguration.getGenfilesDirectory(RepositoryName.MAIN).getPath().toString(),"genfiles(host)");
  rootMap.put(hostConfiguration.getMiddlemanDirectory(RepositoryName.MAIN).getPath().toString(),"internal(host)");
  if (targetConfiguration.useDynamicConfigurations()) {
    Map<String,String> prunedRootMap=new HashMap<>();
    for (    Map.Entry<String,String> root : rootMap.entrySet()) {
      prunedRootMap.put(OUTPUT_PATH_CPP_PREFIX_PATTERN.matcher(root.getKey()).replaceFirst(""),root.getValue());
    }
    rootMap.putAll(prunedRootMap);
  }
  Set<String> files=new LinkedHashSet<>();
  for (  Artifact artifact : artifacts) {
    Root root=artifact.getRoot();
    if (root.isSourceRoot()) {
      files.add("src " + artifact.getRootRelativePath());
    }
 else {
      String name=rootMap.get(root.getPath().toString());
      if (name == null) {
        name="/";
      }
      files.add(name + " " + artifact.getRootRelativePath());
    }
  }
  return files;
}
