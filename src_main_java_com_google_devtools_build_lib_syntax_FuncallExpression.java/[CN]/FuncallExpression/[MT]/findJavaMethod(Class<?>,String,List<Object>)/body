{
  MethodDescriptor matchingMethod=null;
  List<MethodDescriptor> methods=getMethods(objClass,methodName,args.size(),getLocation());
  if (methods != null) {
    for (    MethodDescriptor method : methods) {
      Class<?>[] params=method.getMethod().getParameterTypes();
      int i=0;
      boolean matching=true;
      for (      Class<?> param : params) {
        if (!param.isAssignableFrom(args.get(i).getClass())) {
          matching=false;
          break;
        }
        i++;
      }
      if (matching) {
        if (matchingMethod == null) {
          matchingMethod=method;
        }
 else {
          throw new EvalException(getLocation(),String.format("Type %s has multiple matches for %s",EvalUtils.getDataTypeNameFromClass(objClass),formatMethod(args)));
        }
      }
    }
  }
  if (matchingMethod != null && !matchingMethod.getAnnotation().structField()) {
    return matchingMethod;
  }
  throw new EvalException(getLocation(),String.format("Type %s has no %s",EvalUtils.getDataTypeNameFromClass(objClass),formatMethod(args)));
}
