{
  Object funcValue=func.eval(env);
  ImmutableList.Builder<Object> posargs=new ImmutableList.Builder<>();
  Map<String,Object> kwargs=new HashMap<>();
  if ((funcValue instanceof BaseFunction)) {
    BaseFunction function=(BaseFunction)funcValue;
    evalArguments(posargs,kwargs,env,function);
    return convertFromSkylark(function.call(posargs.build(),ImmutableMap.<String,Object>copyOf(kwargs),this,env),env);
  }
 else {
    throw new EvalException(getLocation(),"'" + EvalUtils.getDataTypeName(funcValue) + "' object is not callable");
  }
}
