{
  Pair<MethodDescriptor,List<Object>> matchingMethod=null;
  List<MethodDescriptor> methods=getMethods(objClass,methodName,getLocation());
  ArgumentListConversionResult argumentListConversionResult=null;
  if (methods != null) {
    for (    MethodDescriptor method : methods) {
      if (!method.getAnnotation().structField()) {
        argumentListConversionResult=convertArgumentList(args,kwargs,method);
        if (argumentListConversionResult.getArguments() != null) {
          if (matchingMethod == null) {
            matchingMethod=new Pair<MethodDescriptor,List<Object>>(method,argumentListConversionResult.getArguments());
          }
 else {
            throw new EvalException(getLocation(),String.format("Type %s has multiple matches for %s",EvalUtils.getDataTypeNameFromClass(objClass),formatMethod(args,kwargs)));
          }
        }
      }
    }
  }
  if (matchingMethod == null) {
    String errorMessage;
    if (argumentListConversionResult == null || argumentListConversionResult.getError() == null) {
      errorMessage=String.format("Type %s has no %s",EvalUtils.getDataTypeNameFromClass(objClass),formatMethod(args,kwargs));
    }
 else {
      errorMessage=String.format("%s (in %s of %s).",argumentListConversionResult.getError(),formatMethod(args,kwargs),EvalUtils.getDataTypeNameFromClass(objClass));
    }
    throw new EvalException(getLocation(),errorMessage);
  }
  return matchingMethod;
}
