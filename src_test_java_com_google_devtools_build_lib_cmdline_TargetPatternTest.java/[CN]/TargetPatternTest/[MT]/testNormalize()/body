{
  assertEquals("empty",TargetPattern.normalize("empty"));
  assertEquals("a/b",TargetPattern.normalize("a/b"));
  assertEquals("a/b/c",TargetPattern.normalize("a/b/c"));
  assertEquals("a/b/c.d",TargetPattern.normalize("a/b/c.d"));
  assertEquals("a/b/c..",TargetPattern.normalize("a/b/c.."));
  assertEquals("a/b/c...",TargetPattern.normalize("a/b/c..."));
  assertEquals("a/b",TargetPattern.normalize("a/b/"));
  assertEquals("a/c",TargetPattern.normalize("a//c"));
  assertEquals("a/d",TargetPattern.normalize("a/./d"));
  assertEquals("a",TargetPattern.normalize("a/."));
  assertEquals("a/e",TargetPattern.normalize("a/b/../e"));
  assertEquals("a/g",TargetPattern.normalize("a/g/b/.."));
  assertEquals("a/h",TargetPattern.normalize("a/b/c/../../h"));
  assertEquals("../a",TargetPattern.normalize("../a"));
  assertEquals("../../a",TargetPattern.normalize("../../a"));
  assertEquals("../../../a",TargetPattern.normalize("../../../a"));
  assertEquals("../../b",TargetPattern.normalize("a/../../../b"));
}
