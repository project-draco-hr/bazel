{
  AspectDefinition.Builder result=new AspectDefinition.Builder(getClass().getSimpleName()).attributeAspect("deps",this).requiresConfigurationFragments(JavaConfiguration.class,ProtoConfiguration.class).requireProvider(ProtoSourcesProvider.class).add(attr(SPEED_PROTO_RUNTIME_ATTR,LABEL).legacyAllowAnyFileType().value(parseAbsoluteUnchecked(SPEED_PROTO_RUNTIME_LABEL))).add(ProtoSourceFileBlacklist.blacklistFilegroupAttribute(PROTO_SOURCE_FILE_BLACKLIST_ATTR,transformToList(protoSourceFileBlacklistLabels,PARSE_ABSOLUTE_UNCHECKED))).add(attr(":host_jdk",LABEL).cfg(HOST).value(JavaSemantics.HOST_JDK)).add(attr(":java_toolchain",LABEL).allowedRuleClasses("java_toolchain").value(JavaSemantics.JAVA_TOOLCHAIN));
  rpcSupport.mutateAspectDefinition(result,aspectParameters);
  Attribute.Builder<Label> jacocoAttr=attr("$jacoco_instrumentation",LABEL).cfg(HOST);
  if (jacocoLabel != null) {
    jacocoAttr.value(parseAbsoluteUnchecked(jacocoLabel));
  }
  return result.add(jacocoAttr).build();
}
