{
  Target prerequisiteTarget=prerequisite.getTarget();
  RuleClass ruleClass=((Rule)prerequisiteTarget).getRuleClassObject();
  Boolean allowed=null;
  if (attribute.getAllowedRuleClassesPredicate() != Predicates.<RuleClass>alwaysTrue()) {
    allowed=attribute.getAllowedRuleClassesPredicate().apply(ruleClass);
    if (allowed) {
      return;
    }
  }
  if (attribute.getAllowedRuleClassesWarningPredicate() != Predicates.<RuleClass>alwaysTrue()) {
    Predicate<RuleClass> warningPredicate=attribute.getAllowedRuleClassesWarningPredicate();
    if (warningPredicate.apply(ruleClass)) {
      reportBadPrerequisite(attribute,prerequisiteTarget.getTargetKind(),prerequisite,"expected " + warningPredicate,true);
      return;
    }
  }
  if (!attribute.getMandatoryNativeProviders().isEmpty()) {
    String missing=getMissingMandatoryNativeProviders(prerequisite,attribute);
    if (missing != null) {
      attributeError(attribute.getName(),"'" + prerequisite.getLabel() + "' does not have mandatory providers: "+ missing);
      return;
    }
  }
  if (!attribute.getMandatoryProvidersList().isEmpty()) {
    String missingMandatoryProviders=getMissingMandatoryProviders(prerequisite,attribute);
    if (missingMandatoryProviders != null) {
      attributeError(attribute.getName(),"'" + prerequisite.getLabel() + "' does not have mandatory provider "+ missingMandatoryProviders);
    }
  }
 else   if (Boolean.FALSE.equals(allowed)) {
    reportBadPrerequisite(attribute,prerequisiteTarget.getTargetKind(),prerequisite,"expected " + attribute.getAllowedRuleClassesPredicate(),false);
  }
}
