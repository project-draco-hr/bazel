{
  Target prerequisiteTarget=prerequisite.getTarget();
  RuleClass ruleClass=((Rule)prerequisiteTarget).getRuleClassObject();
  HashSet<String> unfulfilledRequirements=new HashSet<>();
  if (attribute.getAllowedRuleClassesPredicate() != Predicates.<RuleClass>alwaysTrue()) {
    if (attribute.getAllowedRuleClassesPredicate().apply(ruleClass)) {
      return;
    }
    unfulfilledRequirements.add(badPrerequisiteMessage(prerequisiteTarget.getTargetKind(),prerequisite,"expected " + attribute.getAllowedRuleClassesPredicate(),false));
  }
  if (attribute.getAllowedRuleClassesWarningPredicate() != Predicates.<RuleClass>alwaysTrue()) {
    Predicate<RuleClass> warningPredicate=attribute.getAllowedRuleClassesWarningPredicate();
    if (warningPredicate.apply(ruleClass)) {
      reportBadPrerequisite(attribute,prerequisiteTarget.getTargetKind(),prerequisite,"expected " + warningPredicate,true);
      return;
    }
  }
  if (!attribute.getMandatoryNativeProviders().isEmpty() || !attribute.getMandatoryProvidersList().isEmpty()) {
    boolean hadAllMandatoryProviders=true;
    String missingNativeProviders=getMissingMandatoryNativeProviders(prerequisite,attribute);
    if (missingNativeProviders != null) {
      unfulfilledRequirements.add("'" + prerequisite.getLabel() + "' does not have mandatory providers: "+ missingNativeProviders);
      hadAllMandatoryProviders=false;
    }
    String missingProviders=getMissingMandatoryProviders(prerequisite,attribute);
    if (missingProviders != null) {
      unfulfilledRequirements.add("'" + prerequisite.getLabel() + "' does not have mandatory provider "+ missingProviders);
      hadAllMandatoryProviders=false;
    }
    if (hadAllMandatoryProviders) {
      return;
    }
  }
  if (!unfulfilledRequirements.isEmpty()) {
    attributeError(attribute.getName(),StringUtil.joinEnglishList(unfulfilledRequirements,"and"));
  }
}
