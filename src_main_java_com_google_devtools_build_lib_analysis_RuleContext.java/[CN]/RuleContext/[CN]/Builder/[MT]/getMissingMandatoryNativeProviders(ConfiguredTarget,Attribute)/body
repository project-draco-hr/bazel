{
  List<ImmutableList<Class<? extends TransitiveInfoProvider>>> mandatoryProvidersList=attribute.getMandatoryNativeProvidersList();
  if (mandatoryProvidersList.isEmpty()) {
    return null;
  }
  List<List<String>> missingProvidersList=new ArrayList<>();
  for (  ImmutableList<Class<? extends TransitiveInfoProvider>> providers : mandatoryProvidersList) {
    List<String> missing=new ArrayList<>();
    for (    Class<? extends TransitiveInfoProvider> provider : providers) {
      if (prerequisite.getProvider(provider) == null) {
        missing.add(provider.getSimpleName());
      }
    }
    if (missing.isEmpty()) {
      return null;
    }
 else {
      missingProvidersList.add(missing);
    }
  }
  StringBuilder missingProviders=new StringBuilder();
  Joiner joinProvider=Joiner.on(", ");
  for (  List<String> providers : missingProvidersList) {
    if (missingProviders.length() > 0) {
      missingProviders.append(" or ");
    }
    missingProviders.append((providers.size() > 1) ? "[" : "");
    joinProvider.appendTo(missingProviders,providers);
    missingProviders.append((providers.size() > 1) ? "]" : "");
  }
  return missingProviders.toString();
}
