def testRoundTripExoticAsOneLine(self, message_module):
    message = message_module.TestAllTypes()
    message.repeated_int64.append((-9223372036854775808))
    message.repeated_uint64.append(18446744073709551615L)
    message.repeated_double.append(123.456)
    message.repeated_double.append(1.23e+22)
    message.repeated_double.append(1.23e-18)
    message.repeated_string.append('\x00\x01\x07\x08\x0c\n\r\t\x0b\\\'"')
    message.repeated_string.append(u'\xfc\ua71f')
    wire_text = text_format.MessageToString(message, as_one_line=True, as_utf8=False)
    parsed_message = message_module.TestAllTypes()
    r = text_format.Parse(wire_text, parsed_message)
    self.assertIs(r, parsed_message)
    self.assertEqual(message, parsed_message)
    wire_text = text_format.MessageToString(message, as_one_line=True, as_utf8=True)
    parsed_message = message_module.TestAllTypes()
    r = text_format.Parse(wire_text, parsed_message)
    self.assertIs(r, parsed_message)
    self.assertEqual(message, parsed_message, ('\n%s != %s' % (message, parsed_message)))
