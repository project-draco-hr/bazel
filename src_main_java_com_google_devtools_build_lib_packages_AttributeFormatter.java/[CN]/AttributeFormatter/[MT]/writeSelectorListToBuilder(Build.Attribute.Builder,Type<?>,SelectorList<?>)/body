{
  Build.Attribute.SelectorList.Builder selectorListBuilder=Build.Attribute.SelectorList.newBuilder();
  selectorListBuilder.setType(ProtoUtils.getDiscriminatorFromType(type));
  for (  Selector<?> selector : selectorList.getSelectors()) {
    Build.Attribute.Selector.Builder selectorBuilder=Build.Attribute.Selector.newBuilder().setNoMatchError(selector.getNoMatchError()).setHasDefaultValue(selector.hasDefault());
    for (    Entry<Label,?> entry : selector.getEntries().entrySet()) {
      Label condition=entry.getKey();
      Builder selectorEntryBuilder=SelectorEntry.newBuilder().setLabel(condition.toString()).setIsDefaultValue(!selector.isValueSet(condition));
      Object conditionValue=entry.getValue();
      if (conditionValue != null) {
        writeAttributeValueToBuilder(new SelectorEntryBuilderAdapter(selectorEntryBuilder),type,conditionValue);
      }
      selectorBuilder.addEntries(selectorEntryBuilder);
    }
    selectorListBuilder.addElements(selectorBuilder);
  }
  attrPb.setSelectorList(selectorListBuilder);
}
