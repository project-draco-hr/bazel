{
  final ObjcCommon common=common(ruleContext,ImmutableList.<SdkFramework>of(),ruleContext.attributes().get("alwayslink",Type.BOOLEAN),ImmutableList.<ObjcProvider>of());
  XcodeProvider.Builder xcodeProviderBuilder=new XcodeProvider.Builder();
  NestedSetBuilder<Artifact> filesToBuild=NestedSetBuilder.<Artifact>stableOrder().addAll(common.getCompiledArchive().asSet());
  CompilationSupport compilationSupport=new CompilationSupport(ruleContext).registerCompileAndArchiveActions(common).registerFullyLinkAction(common.getObjcProvider()).addXcodeSettings(xcodeProviderBuilder,common).validateAttributes();
  new ResourceSupport(ruleContext).validateAttributes().addXcodeSettings(xcodeProviderBuilder);
  new XcodeSupport(ruleContext).addFilesToBuild(filesToBuild).addXcodeSettings(xcodeProviderBuilder,common.getObjcProvider(),LIBRARY_STATIC).addDependencies(xcodeProviderBuilder,new Attribute("bundles",Mode.TARGET)).addDependencies(xcodeProviderBuilder,new Attribute("deps",Mode.TARGET)).addNonPropagatedDependencies(xcodeProviderBuilder,new Attribute("non_propagated_deps",Mode.TARGET)).registerActions(xcodeProviderBuilder.build());
  J2ObjcMappingFileProvider j2ObjcMappingFileProvider=J2ObjcMappingFileProvider.union(ruleContext.getPrerequisites("deps",Mode.TARGET,J2ObjcMappingFileProvider.class));
  J2ObjcEntryClassProvider j2ObjcEntryClassProvider=new J2ObjcEntryClassProvider.Builder().addTransitive(ruleContext.getPrerequisites("deps",Mode.TARGET,J2ObjcEntryClassProvider.class)).build();
  return ObjcRuleClasses.ruleConfiguredTarget(ruleContext,filesToBuild.build()).addProvider(XcodeProvider.class,xcodeProviderBuilder.build()).addProvider(ObjcProvider.class,common.getObjcProvider()).addProvider(J2ObjcEntryClassProvider.class,j2ObjcEntryClassProvider).addProvider(J2ObjcMappingFileProvider.class,j2ObjcMappingFileProvider).addProvider(InstrumentedFilesProvider.class,compilationSupport.getInstrumentedFilesProvider(common)).addProvider(CcLinkParamsProvider.class,new CcLinkParamsProvider(new ObjcLibraryCcLinkParamsStore(common))).build();
}
