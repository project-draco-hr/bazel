{
  ObjcCommon common=common(ruleContext,ImmutableList.<SdkFramework>of(),ruleContext.attributes().get("alwayslink",Type.BOOLEAN),new ExtraImportLibraries(),ImmutableList.<ObjcProvider>of());
  OptionsProvider optionsProvider=optionsProvider(ruleContext);
  XcodeProvider.Builder xcodeProviderBuilder=new XcodeProvider.Builder();
  NestedSetBuilder<Artifact> filesToBuild=NestedSetBuilder.<Artifact>stableOrder().addAll(common.getCompiledArchive().asSet());
  new CompilationSupport(ruleContext).registerCompileAndArchiveActions(common,optionsProvider).addXcodeSettings(xcodeProviderBuilder,common,optionsProvider).validateAttributes();
  new ResourceSupport(ruleContext).validateAttributes().addXcodeSettings(xcodeProviderBuilder);
  new XcodeSupport(ruleContext).addFilesToBuild(filesToBuild).addXcodeSettings(xcodeProviderBuilder,common.getObjcProvider(),LIBRARY_STATIC).addDependencies(xcodeProviderBuilder,new Attribute("bundles",Mode.TARGET)).addDependencies(xcodeProviderBuilder,new Attribute("deps",Mode.TARGET)).addNonPropagatedDependencies(xcodeProviderBuilder,new Attribute("non_propagated_deps",Mode.TARGET)).registerActions(xcodeProviderBuilder.build());
  return ObjcRuleClasses.ruleConfiguredTarget(ruleContext,filesToBuild.build()).addProvider(XcodeProvider.class,xcodeProviderBuilder.build()).addProvider(ObjcProvider.class,common.getObjcProvider()).addProvider(J2ObjcSrcsProvider.class,ObjcRuleClasses.j2ObjcSrcsProvider(ruleContext)).addProvider(J2ObjcMappingFileProvider.class,ObjcRuleClasses.j2ObjcMappingFileProvider(ruleContext)).build();
}
