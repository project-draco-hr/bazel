{
  dependencyResolver=new DependencyResolver(){
    @Override protected void invalidVisibilityReferenceHook(    TargetAndConfiguration node,    Label label){
      throw new IllegalStateException();
    }
    @Override protected void invalidPackageGroupReferenceHook(    TargetAndConfiguration node,    Label label){
      throw new IllegalStateException();
    }
    @Override protected void missingEdgeHook(    Target from,    Label to,    NoSuchThingException e){
      throw new IllegalStateException(e);
    }
    @Nullable @Override protected Target getTarget(    Target from,    Label label,    NestedSetBuilder<Label> rootCauses){
      try {
        return packageManager.getTarget(reporter,label);
      }
 catch (      NoSuchPackageException|NoSuchTargetException|InterruptedException e) {
        throw new IllegalStateException(e);
      }
    }
  }
;
}
