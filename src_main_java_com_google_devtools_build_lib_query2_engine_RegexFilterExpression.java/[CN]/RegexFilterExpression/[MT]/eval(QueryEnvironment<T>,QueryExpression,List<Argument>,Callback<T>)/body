{
  final Pattern compiledPattern;
  try {
    compiledPattern=Pattern.compile(getPattern(args));
  }
 catch (  IllegalArgumentException e) {
    throw new QueryException(expression,"illegal pattern regexp in '" + this + "': "+ e.getMessage());
  }
  final Predicate<T> matchFilter=new Predicate<T>(){
    @Override public boolean apply(    T target){
      for (      String str : getFilterStrings(env,args,target)) {
        if ((str != null) && compiledPattern.matcher(str).find()) {
          return true;
        }
      }
      return false;
    }
  }
;
  env.eval(args.get(args.size() - 1).getExpression(),QueryUtil.filteredCallback(callback,matchFilter));
}
