{
  JavaOptimizationMode optMode=getJavaOptimizationMode(ruleContext);
  if (optMode == JavaOptimizationMode.NOOP || optMode == JavaOptimizationMode.LEGACY) {
    return null;
  }
  Preconditions.checkArgument(!bootclasspath.isEmpty(),"Bootclasspath should not be empty");
  FilesToRunProvider proguard=findProguard(ruleContext);
  if (proguard == null) {
    ruleContext.ruleError("--proguard_top required for --java_optimization_mode=" + optMode);
    return null;
  }
  ImmutableList<Artifact> proguardSpecs=collectProguardSpecs(ruleContext,bootclasspath,mainClassName);
  Artifact singleJar=ruleContext.getImplicitOutputArtifact(JavaSemantics.JAVA_BINARY_MERGED_JAR);
  return createProguardAction(ruleContext,proguard,singleJar,proguardSpecs,(Artifact)null,NestedSetBuilder.<Artifact>emptySet(NAIVE_LINK_ORDER),deployJar,false);
}
