{
  for (int numRemovals=0; numRemovals <= numElements; numRemovals++) {
    Example example=new Example();
    List<SkyKey> toAdd=new ArrayList<>();
    for (int j=0; j < numElements; j++) {
      toAdd.add(new SkyKey(NODE_TYPE,j));
    }
    REVERSE_DEPS_UTIL.addReverseDeps(example,toAdd);
    assertThat(REVERSE_DEPS_UTIL.getReverseDeps(example)).hasSize(numElements);
    for (int i=0; i < numRemovals; i++) {
      REVERSE_DEPS_UTIL.removeReverseDep(example,new SkyKey(NODE_TYPE,i));
    }
    assertThat(REVERSE_DEPS_UTIL.getReverseDeps(example)).hasSize(numElements - numRemovals);
    assertThat(example.dataToConsolidate).isNull();
  }
}
