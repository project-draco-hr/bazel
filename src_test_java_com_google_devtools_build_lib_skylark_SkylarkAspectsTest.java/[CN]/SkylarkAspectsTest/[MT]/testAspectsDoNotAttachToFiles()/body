{
  FileSystemUtils.appendIsoLatin1(scratch.resolve("WORKSPACE"),"bind(name = 'yyy', actual = '//test:zzz.jar')");
  scratch.file("test/aspect.bzl","def _impl(target, ctx):","   return struct()","","MyAspect = aspect(","   implementation=_impl,","   attr_aspects=['deps'],",")");
  scratch.file("test/zzz.jar");
  scratch.file("test/BUILD","exports_files(['zzz.jar'])","java_library(","     name = 'xxx',","     srcs = ['A.java'],","     deps = ['//external:yyy'],",")");
  reporter.removeHandler(failFastHandler);
  try {
    AnalysisResult result=update(ImmutableList.of("test/aspect.bzl%MyAspect"),"//test:xxx");
    assertThat(keepGoing()).isTrue();
    assertThat(result.hasError()).isTrue();
  }
 catch (  ViewCreationFailedException expected) {
    assertThat(expected.getMessage()).contains("Analysis of aspect '/test/aspect.bzl%MyAspect of //test:xxx' failed");
  }
  assertContainsEvent("//test:aspect.bzl%MyAspect is attached to source file zzz.jar but " + "aspects must be attached to rules");
}
