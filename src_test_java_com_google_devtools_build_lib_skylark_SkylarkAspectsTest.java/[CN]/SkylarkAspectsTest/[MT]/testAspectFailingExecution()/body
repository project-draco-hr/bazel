{
  scratch.file("test/aspect.bzl","def _impl(target, ctx):","   return 1/0","","MyAspect = aspect(implementation=_impl)");
  scratch.file("test/BUILD","java_library(name = 'xxx',)");
  reporter.removeHandler(failFastHandler);
  try {
    AnalysisResult result=update(ImmutableList.of("test/aspect.bzl%MyAspect"),"//test:xxx");
    assertThat(keepGoing()).isTrue();
    assertThat(result.hasError()).isTrue();
  }
 catch (  ViewCreationFailedException e) {
  }
  assertContainsEvent("ERROR /workspace/test/BUILD:1:1: in " + "//test:aspect.bzl%MyAspect aspect on java_library rule //test:xxx: \n" + "Traceback (most recent call last):" + LINE_SEPARATOR + "\tFile \"/workspace/test/BUILD\", line 1"+ LINE_SEPARATOR+ "\t\t//test:aspect.bzl%MyAspect(...)"+ LINE_SEPARATOR+ "\tFile \"/workspace/test/aspect.bzl\", line 2, in _impl"+ LINE_SEPARATOR+ "\t\t1 / 0"+ LINE_SEPARATOR+ "integer division by zero");
}
