{
  return new String[]{"def _repro_aspect_impl(target, ctx):","    s = set([str(target.label)])","    for d in ctx.rule.attr.deps:","       if hasattr(d, 'aspect_info'):","         s = s | d.aspect_info","    return struct(aspect_info = s)","","_repro_aspect = aspect(","    _repro_aspect_impl,","    attr_aspects = [" + attrAspects + "],",")","","def repro_impl(ctx):","    s = set()","    for d in ctx.attr.deps:","       if hasattr(d, 'aspect_info'):","         s = s | d.aspect_info","    return struct(rule_info = s)","","def repro_no_aspect_impl(ctx):","    pass","","repro_no_aspect = rule(implementation = repro_no_aspect_impl,","             attrs = {","                       'deps': attr.label_list(","                             allow_files = True,","                       )","                      },",")","","repro = rule(implementation = repro_impl,","             attrs = {","                       'deps': attr.label_list(","                             allow_files = True,","                             aspects = [_repro_aspect],","                       )","                      },",")"};
}
