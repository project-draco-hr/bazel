def CheckValue(self, proposed_value):
    if (not isinstance(proposed_value, (bytes, six.text_type))):
        message = ('%.1024r has type %s, but expected one of: %s' % (proposed_value, type(proposed_value), (bytes, six.text_type)))
        raise TypeError(message)
    if isinstance(proposed_value, bytes):
        try:
            proposed_value = proposed_value.decode('utf-8')
        except UnicodeDecodeError:
            raise ValueError(("%.1024r has type bytes, but isn't valid UTF-8 encoding. Non-UTF-8 strings must be converted to unicode objects before being added." % proposed_value))
    return proposed_value
