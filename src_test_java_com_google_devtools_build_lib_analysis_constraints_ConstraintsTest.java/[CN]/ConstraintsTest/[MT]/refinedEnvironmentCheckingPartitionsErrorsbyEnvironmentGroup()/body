{
  new EnvironmentGroupMaker("buildenv/foo").setEnvironments("a","b").setDefaults().make();
  new EnvironmentGroupMaker("buildenv/bar").setEnvironments("c","d").setDefaults().make();
  scratch.file("hello/BUILD","cc_library(","    name = 'all_groups_gone',","    srcs = [],","    restricted_to = ['//buildenv/foo:b', '//buildenv/bar:d'])","cc_library(","    name = 'all_groups_there',","    srcs = [],","    restricted_to = ['//buildenv/foo:a', '//buildenv/bar:c'])","cc_library(","    name = 'lib',","    srcs = [],","    deps = select({","        '//config:a': [':all_groups_gone'],","        '//config:b': [':all_groups_there'],","    }),","    compatible_with = ['//buildenv/foo:a', '//buildenv/bar:c'])");
  useConfiguration("--define","mode=a");
  reporter.removeHandler(failFastHandler);
  assertNull(getConfiguredTarget("//hello:lib"));
  assertContainsEvent("//hello:lib: the current command-line flags disqualify all supported " + "environments because of incompatible select() paths:\n" + "\nenvironment group: //buildenv/foo:foo:\n"+ " environment: //buildenv/foo:a removed by: //hello:lib (/workspace/hello/BUILD:9:1)\n"+ "\nenvironment group: //buildenv/bar:bar:\n"+ " environment: //buildenv/bar:c removed by: //hello:lib (/workspace/hello/BUILD:9:1)");
}
