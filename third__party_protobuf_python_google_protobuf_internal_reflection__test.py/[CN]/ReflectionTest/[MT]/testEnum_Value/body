def testEnum_Value(self):
    self.assertEqual(unittest_pb2.FOREIGN_FOO, unittest_pb2.ForeignEnum.Value('FOREIGN_FOO'))
    self.assertEqual(unittest_pb2.FOREIGN_BAR, unittest_pb2.ForeignEnum.Value('FOREIGN_BAR'))
    self.assertEqual(unittest_pb2.FOREIGN_BAZ, unittest_pb2.ForeignEnum.Value('FOREIGN_BAZ'))
    self.assertRaises(ValueError, unittest_pb2.ForeignEnum.Value, 'FO')
    proto = unittest_pb2.TestAllTypes()
    self.assertEqual(proto.FOO, proto.NestedEnum.Value('FOO'))
    self.assertEqual(proto.FOO, unittest_pb2.TestAllTypes.NestedEnum.Value('FOO'))
    self.assertEqual(proto.BAR, proto.NestedEnum.Value('BAR'))
    self.assertEqual(proto.BAR, unittest_pb2.TestAllTypes.NestedEnum.Value('BAR'))
    self.assertEqual(proto.BAZ, proto.NestedEnum.Value('BAZ'))
    self.assertEqual(proto.BAZ, unittest_pb2.TestAllTypes.NestedEnum.Value('BAZ'))
    self.assertRaises(ValueError, proto.NestedEnum.Value, 'Foo')
    self.assertRaises(ValueError, unittest_pb2.TestAllTypes.NestedEnum.Value, 'Foo')
