def testEmptyNestedMessage(self):
    proto = unittest_pb2.TestAllTypes()
    proto.optional_nested_message.MergeFrom(unittest_pb2.TestAllTypes.NestedMessage())
    self.assertTrue(proto.HasField('optional_nested_message'))
    proto = unittest_pb2.TestAllTypes()
    proto.optional_nested_message.CopyFrom(unittest_pb2.TestAllTypes.NestedMessage())
    self.assertTrue(proto.HasField('optional_nested_message'))
    proto = unittest_pb2.TestAllTypes()
    bytes_read = proto.optional_nested_message.MergeFromString('')
    self.assertEqual(0, bytes_read)
    self.assertTrue(proto.HasField('optional_nested_message'))
    proto = unittest_pb2.TestAllTypes()
    proto.optional_nested_message.ParseFromString('')
    self.assertTrue(proto.HasField('optional_nested_message'))
    serialized = proto.SerializeToString()
    proto2 = unittest_pb2.TestAllTypes()
    self.assertEqual(len(serialized), proto2.MergeFromString(serialized))
    self.assertTrue(proto2.HasField('optional_nested_message'))
