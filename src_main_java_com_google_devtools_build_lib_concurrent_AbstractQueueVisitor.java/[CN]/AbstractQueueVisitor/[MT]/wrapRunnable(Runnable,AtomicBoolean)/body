{
  return new Runnable(){
    @Override public void run(){
      Thread thread=null;
      boolean addedJob=false;
      try {
        ranTask.set(true);
        thread=Thread.currentThread();
        addJob(thread);
        addedJob=true;
        if (blockNewActions()) {
          return;
        }
        runnable.run();
      }
 catch (      Throwable e) {
synchronized (AbstractQueueVisitor.this) {
          if (unhandled == null) {
            unhandled=e;
            exceptionLatch.countDown();
          }
          markToStopAllJobsIfNeeded(e);
        }
      }
 finally {
        try {
          if (thread != null && addedJob) {
            removeJob(thread);
          }
        }
  finally {
          decrementRemainingTasks();
        }
      }
    }
  }
;
}
