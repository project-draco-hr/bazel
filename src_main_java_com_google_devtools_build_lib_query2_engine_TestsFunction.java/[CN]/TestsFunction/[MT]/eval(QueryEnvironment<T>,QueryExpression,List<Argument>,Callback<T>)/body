{
  final Closure<T> closure=new Closure<>(expression,env);
  env.eval(args.get(0).getExpression(),new Callback<T>(){
    @Override public void process(    Iterable<T> partialResult) throws QueryException, InterruptedException {
      for (      T target : partialResult) {
        if (env.getAccessor().isTestRule(target)) {
          callback.process(ImmutableList.of(target));
        }
 else         if (env.getAccessor().isTestSuite(target)) {
          for (          T test : closure.getTestsInSuite(target)) {
            callback.process(ImmutableList.of(env.getOrCreate(test)));
          }
        }
      }
    }
  }
);
}
