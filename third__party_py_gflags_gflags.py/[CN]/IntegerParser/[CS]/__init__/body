def __init__(self, lower_bound=None, upper_bound=None):
    super(IntegerParser, self).__init__()
    self.lower_bound = lower_bound
    self.upper_bound = upper_bound
    sh = self.syntactic_help
    if ((lower_bound is not None) and (upper_bound is not None)):
        sh = ('%s in the range [%s, %s]' % (sh, lower_bound, upper_bound))
    elif (lower_bound == 1):
        sh = ('a positive %s' % self.number_name)
    elif (upper_bound == (-1)):
        sh = ('a negative %s' % self.number_name)
    elif (lower_bound == 0):
        sh = ('a non-negative %s' % self.number_name)
    elif (upper_bound == 0):
        sh = ('a non-positive %s' % self.number_name)
    elif (upper_bound is not None):
        sh = ('%s <= %s' % (self.number_name, upper_bound))
    elif (lower_bound is not None):
        sh = ('%s >= %s' % (self.number_name, lower_bound))
    self.syntactic_help = sh
