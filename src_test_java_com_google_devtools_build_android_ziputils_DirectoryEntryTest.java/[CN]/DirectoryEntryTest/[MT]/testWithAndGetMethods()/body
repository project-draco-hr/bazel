{
  int crc=0x12345678;
  int compressed=0x357f1d5;
  int uncompressed=0x74813159;
  short flags=0x7a61;
  short method=0x3b29;
  int time=0x12312345;
  short version=0x1234;
  short versionMadeBy=0x27a1;
  short disk=0x5a78;
  int extAttr=0x73b27a15;
  short intAttr=0x37cc;
  int offset=0x74c93ac1;
  DirectoryEntry view=DirectoryEntry.allocate("pkg/foo.class",null,"").set(CENCRC,crc).set(CENSIZ,compressed).set(CENLEN,uncompressed).set(CENFLG,flags).set(CENHOW,method).set(CENTIM,time).set(CENVER,version).set(CENVEM,versionMadeBy).set(CENDSK,disk).set(CENATX,extAttr).set(CENATT,intAttr).set(CENOFF,offset);
  assertEquals("CRC",crc,view.get(CENCRC));
  assertEquals("Compressed size",compressed,view.get(CENSIZ));
  assertEquals("Uncompressed size",uncompressed,view.get(CENLEN));
  assertEquals("Flags",flags,view.get(CENFLG));
  assertEquals("Method",method,view.get(CENHOW));
  assertEquals("Modified time",time,view.get(CENTIM));
  assertEquals("Version needed",version,view.get(CENVER));
  assertEquals("Version made by",versionMadeBy,view.get(CENVEM));
  assertEquals("Disk",disk,view.get(CENDSK));
  assertEquals("External attributes",extAttr,view.get(CENATX));
  assertEquals("Internal attributes",intAttr,view.get(CENATT));
  assertEquals("Offset",offset,view.get(CENOFF));
}
