{
  PathFragment.checkAllPathsAreUnder(excludedSubdirectories,directory.getRelativePath());
  FilteringPolicy filteringPolicy=null;
  for (  TargetPatternKey patternKey : universeTargetPatternKeys) {
    TargetPattern pattern=patternKey.getParsedPattern();
    boolean isTBD=pattern.getType().equals(Type.TARGETS_BELOW_DIRECTORY);
    PackageIdentifier packageIdentifier=PackageIdentifier.create(repository,directory.getRelativePath());
    if (isTBD && pattern.containsBelowDirectory(packageIdentifier)) {
      filteringPolicy=pattern.getRulesOnly() ? FilteringPolicies.RULES_ONLY : FilteringPolicies.NO_FILTER;
      break;
    }
  }
  ImmutableList.Builder<PathFragment> builder=ImmutableList.builder();
  if (filteringPolicy != null) {
    collectPackagesUnder(repository,directory,excludedSubdirectories,builder,filteringPolicy);
  }
  return builder.build();
}
