{
  AggregatingAttributeMapper mapper=AggregatingAttributeMapper.of(rule);
  boolean hasRepository=mapper.has("repository",Type.STRING) && !mapper.get("repository",Type.STRING).isEmpty();
  boolean hasServer=mapper.has("server",Type.STRING) && !mapper.get("server",Type.STRING).isEmpty();
  if (hasRepository && hasServer) {
    throw new RepositoryFunctionException(new EvalException(rule.getLocation(),rule + " specifies both " + "'repository' and 'server', which are mutually exclusive options"),Transience.PERSISTENT);
  }
 else   if (hasRepository) {
    return MavenServerValue.createFromUrl(mapper.get("repository",Type.STRING));
  }
 else {
    String serverName=DEFAULT_SERVER;
    if (hasServer) {
      serverName=mapper.get("server",Type.STRING);
    }
    return (MavenServerValue)env.getValue(MavenServerValue.key(serverName));
  }
}
