{
  Path outputDirectory=downloader.getOutputDirectory();
  createDirectory(outputDirectory);
  Path repositoryJar;
  try {
    repositoryJar=downloader.download();
  }
 catch (  IOException e) {
    throw new RepositoryFunctionException(e,Transience.TRANSIENT);
  }
  DecompressorValue value;
  try {
    value=(DecompressorValue)env.getValueOrThrow(DecompressorValue.key(JarFunction.NAME,DecompressorDescriptor.builder().setTargetKind(MavenJarRule.NAME).setTargetName(downloader.getName()).setArchivePath(repositoryJar).setRepositoryPath(outputDirectory).build()),IOException.class);
    if (value == null) {
      return null;
    }
  }
 catch (  IOException e) {
    throw new RepositoryFunctionException(e,Transience.TRANSIENT);
  }
  return RepositoryValue.create(value.getDirectory());
}
