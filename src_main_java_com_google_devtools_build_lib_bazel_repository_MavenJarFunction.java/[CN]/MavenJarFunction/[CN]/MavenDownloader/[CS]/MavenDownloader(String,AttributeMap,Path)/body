{
  this.name=name;
  this.groupId=mapper.get("group_id",Type.STRING);
  this.artifactId=mapper.get("artifact_id",Type.STRING);
  this.version=mapper.get("version",Type.STRING);
  this.outputDirectory=outputDirectory;
  if (mapper.has("sha1",Type.STRING)) {
    this.sha1=mapper.get("sha1",Type.STRING);
  }
 else {
    this.sha1=null;
  }
  if (mapper.has("repository",Type.STRING) && !mapper.get("repository",Type.STRING).isEmpty()) {
    this.repositories=ImmutableList.of(new RemoteRepository.Builder("user-defined repository","default",mapper.get("repository",Type.STRING)).build());
  }
 else   if (mapper.has("repositories",Type.STRING_LIST) && !mapper.get("repositories",Type.STRING_LIST).isEmpty()) {
    this.repositories=Lists.newArrayList();
    for (    String repositoryUrl : mapper.get("repositories",Type.STRING_LIST)) {
      this.repositories.add(new RemoteRepository.Builder("user-defined repository " + repositories.size(),"default",repositoryUrl).build());
    }
  }
 else {
    this.repositories=Lists.newArrayList();
    this.repositories.add(new RemoteRepository.Builder("central","default",MAVEN_CENTRAL_URL).build());
  }
}
