{
  if (!env.mutability().isMutable()) {
    throw new EvalException(getLocation(),"Trying to call in frozen environment");
  }
  if (env.getStackTrace().contains(this)) {
    throw new EvalException(getLocation(),String.format("Recursion was detected when calling '%s' from '%s'",getName(),Iterables.getLast(env.getStackTrace()).getName()));
  }
  if (enableCompiler && method.isPresent()) {
    Object returnValue=callCompiledFunction(arguments,ast,env);
    if (returnValue != null) {
      return returnValue;
    }
  }
  Profiler.instance().startTask(ProfilerTask.SKYLARK_USER_FN,getLocationPathAndLine() + "#" + getName());
  try {
    env.enterScope(this,ast,definitionGlobals);
    ImmutableList<String> names=signature.getSignature().getNames();
    int i=0;
    for (    String name : names) {
      env.update(name,arguments[i++]);
    }
    try {
      for (      Statement stmt : statements) {
        if (stmt instanceof ReturnStatement) {
          return ((ReturnStatement)stmt).getReturnExpression().eval(env);
        }
 else {
          stmt.exec(env);
        }
      }
    }
 catch (    ReturnStatement.ReturnException e) {
      return e.getValue();
    }
    return Runtime.NONE;
  }
  finally {
    Profiler.instance().completeTask(ProfilerTask.SKYLARK_USER_FN);
    env.exitScope();
  }
}
