{
  NodeEntry entry=new NodeEntry();
  entry.addReverseDepAndCheckIfDone(null);
  SkyKey dep=key("dep");
  addTemporaryDirectDep(entry,dep);
  entry.signalDep();
  ReifiedSkyFunctionException exception=new ReifiedSkyFunctionException(new GenericFunctionException(new SomeErrorException("oops"),Transience.PERSISTENT),key("cause"));
  ErrorInfo errorInfo=new ErrorInfo(exception);
  setValue(entry,null,errorInfo,0L);
  entry.markDirty(false);
  entry.addReverseDepAndCheckIfDone(null);
  assertEquals(BuildingState.DirtyState.CHECK_DEPENDENCIES,entry.getDirtyState());
  assertThat(entry.getNextDirtyDirectDeps()).containsExactly(dep).inOrder();
  addTemporaryDirectDep(entry,dep);
  entry.signalDep(new IntVersion(1L));
  assertEquals(BuildingState.DirtyState.REBUILDING,entry.getDirtyState());
  assertThat(entry.getTemporaryDirectDeps()).containsExactly(dep);
  setValue(entry,null,errorInfo,1L);
  assertTrue(entry.isDone());
  assertEquals(new IntVersion(0L),entry.getVersion());
}
