{
  NodeEntry entry=new NodeEntry();
  entry.addReverseDepAndCheckIfDone(null);
  List<SkyKey> deps=new ArrayList<>();
  for (int ii=0; ii < 10; ii++) {
    SkyKey dep=key(Integer.toString(ii));
    deps.add(dep);
    addTemporaryDirectDep(entry,dep);
    entry.signalDep();
  }
  setValue(entry,new IntegerValue(5),null,0L);
  entry.markDirty(false);
  entry.addReverseDepAndCheckIfDone(null);
  assertEquals(BuildingState.DirtyState.CHECK_DEPENDENCIES,entry.getDirtyState());
  for (int ii=0; ii < 10; ii++) {
    assertThat(entry.getNextDirtyDirectDeps()).containsExactly(deps.get(ii)).inOrder();
    addTemporaryDirectDep(entry,deps.get(ii));
    assertTrue(entry.signalDep(new IntVersion(0L)));
    if (ii < 9) {
      assertEquals(BuildingState.DirtyState.CHECK_DEPENDENCIES,entry.getDirtyState());
    }
 else {
      assertEquals(BuildingState.DirtyState.VERIFIED_CLEAN,entry.getDirtyState());
    }
  }
}
