def testEnum_Name(self):
    self.assertEqual('FOREIGN_FOO', unittest_pb2.ForeignEnum.Name(unittest_pb2.FOREIGN_FOO))
    self.assertEqual('FOREIGN_BAR', unittest_pb2.ForeignEnum.Name(unittest_pb2.FOREIGN_BAR))
    self.assertEqual('FOREIGN_BAZ', unittest_pb2.ForeignEnum.Name(unittest_pb2.FOREIGN_BAZ))
    self.assertRaises(ValueError, unittest_pb2.ForeignEnum.Name, 11312)
    proto = unittest_pb2.TestAllTypes()
    self.assertEqual('FOO', proto.NestedEnum.Name(proto.FOO))
    self.assertEqual('FOO', unittest_pb2.TestAllTypes.NestedEnum.Name(proto.FOO))
    self.assertEqual('BAR', proto.NestedEnum.Name(proto.BAR))
    self.assertEqual('BAR', unittest_pb2.TestAllTypes.NestedEnum.Name(proto.BAR))
    self.assertEqual('BAZ', proto.NestedEnum.Name(proto.BAZ))
    self.assertEqual('BAZ', unittest_pb2.TestAllTypes.NestedEnum.Name(proto.BAZ))
    self.assertRaises(ValueError, proto.NestedEnum.Name, 11312)
    self.assertRaises(ValueError, unittest_pb2.TestAllTypes.NestedEnum.Name, 11312)
