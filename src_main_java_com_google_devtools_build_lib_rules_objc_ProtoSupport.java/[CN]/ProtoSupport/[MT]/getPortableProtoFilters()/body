{
  NestedSetBuilder<Artifact> portableProtoFilters=NestedSetBuilder.stableOrder();
  if (experimentalAutoUnion() && targetType == TargetType.LINKING_TARGET) {
    Iterable<ObjcProtoProvider> objcProtoProviders=ruleContext.getPrerequisites("deps",Mode.TARGET,ObjcProtoProvider.class);
    for (    ObjcProtoProvider objcProtoProvider : objcProtoProviders) {
      portableProtoFilters.addTransitive(objcProtoProvider.getPortableProtoFilters());
    }
  }
  portableProtoFilters.addAll(attributes.getPortableProtoFilters());
  return portableProtoFilters.build();
}
