{
  ImmutableList.Builder<Artifact> builder=new ImmutableList.Builder<>();
  for (  Artifact protoFile : getProtoSources()) {
    String protoFileName=FileSystemUtils.removeExtension(protoFile.getFilename());
    String generatedOutputName;
    if (attributes.outputsCpp()) {
      generatedOutputName=protoFileName;
    }
 else     if (usesProtobufLibrary()) {
      generatedOutputName=generateProtobufFilename(protoFileName);
    }
 else {
      String lowerUnderscoreBaseName=protoFileName.replace('-','_').toLowerCase();
      generatedOutputName=LOWER_UNDERSCORE.to(UPPER_CAMEL,lowerUnderscoreBaseName);
    }
    PathFragment generatedFilePath=new PathFragment(protoFile.getRootRelativePath().getParentDirectory(),new PathFragment(generatedOutputName));
    PathFragment outputFile=FileSystemUtils.appendExtension(generatedFilePath,newFileType.getExtensions().get(0));
    if (outputFile != null) {
      builder.add(ruleContext.getUniqueDirectoryArtifact(UNIQUE_DIRECTORY_NAME,outputFile,ruleContext.getBinOrGenfilesDirectory()));
    }
  }
  return builder.build();
}
