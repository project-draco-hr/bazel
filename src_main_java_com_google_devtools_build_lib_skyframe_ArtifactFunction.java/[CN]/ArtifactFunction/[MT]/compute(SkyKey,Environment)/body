{
  OwnedArtifact ownedArtifact=(OwnedArtifact)skyKey.argument();
  Artifact artifact=ownedArtifact.getArtifact();
  if (artifact.isSourceArtifact()) {
    try {
      return createSourceValue(artifact,ownedArtifact.isMandatory(),env);
    }
 catch (    MissingInputFileException e) {
      throw new ArtifactFunctionException(e,Transience.TRANSIENT);
    }
  }
  ActionAnalysisMetadata actionMetadata=extractActionFromArtifact(artifact,env);
  if (actionMetadata == null) {
    return null;
  }
  Preconditions.checkState(actionMetadata instanceof Action,"%s is not a proper Action object and therefore cannot be executed",actionMetadata);
  Action action=(Action)actionMetadata;
  ActionExecutionValue actionValue=(ActionExecutionValue)env.getValue(ActionExecutionValue.key(action));
  if (actionValue == null) {
    return null;
  }
  if (artifact.isTreeArtifact()) {
    return actionValue.getTreeArtifactValue(artifact);
  }
 else   if (!isAggregatingValue(action)) {
    try {
      return createSimpleValue(artifact,actionValue);
    }
 catch (    IOException e) {
      ActionExecutionException ex=new ActionExecutionException(e,action,false);
      env.getListener().handle(Event.error(ex.getLocation(),ex.getMessage()));
      throw new ArtifactFunctionException(ex,Transience.TRANSIENT);
    }
  }
 else {
    return createAggregatingValue(artifact,action,actionValue.getArtifactValue(artifact),env);
  }
}
