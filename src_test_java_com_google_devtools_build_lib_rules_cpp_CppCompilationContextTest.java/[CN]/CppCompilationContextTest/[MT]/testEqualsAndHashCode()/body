{
  MiddlemanFactory middlemanFactory=getTestAnalysisEnvironment().getMiddlemanFactory();
  ConfiguredTarget fooBin=getConfiguredTarget("//foo:foo");
  CppCompilationContext fooContextA1=new CppCompilationContext.Builder(getRuleContext(fooBin)).build(NULL_ACTION_OWNER,middlemanFactory);
  CppCompilationContext fooContextA2=new CppCompilationContext.Builder(getRuleContext(fooBin)).build(NULL_ACTION_OWNER,middlemanFactory);
  CppCompilationContext fooContextB=new CppCompilationContext.Builder(getRuleContext(fooBin)).addDefine("a=b").build(NULL_ACTION_OWNER,middlemanFactory);
  ConfiguredTarget barBin=getConfiguredTarget("//foo:bar");
  CppCompilationContext barContext=new CppCompilationContext.Builder(getRuleContext(barBin)).build(NULL_ACTION_OWNER,middlemanFactory);
  CppCompilationContext fooContextWithModuleMap=new CppCompilationContext.Builder(getRuleContext(fooBin)).setCppModuleMap(new CppModuleMap(getBinArtifact("foo/something.xyz",fooBin),"name")).build(NULL_ACTION_OWNER,middlemanFactory);
  CppCompilationContext fooContextWithCompilationPrerequisites=new CppCompilationContext.Builder(getRuleContext(fooBin)).addCompilationPrerequisites(ImmutableList.of(getBinArtifact("foo/something.xyz",fooBin))).build(NULL_ACTION_OWNER,middlemanFactory);
  CppCompilationContext fooContextWithModuleMapAndCompilationPrerequisites=new CppCompilationContext.Builder(getRuleContext(fooBin)).addCompilationPrerequisites(ImmutableList.of(getBinArtifact("foo/something.xyz",fooBin))).setCppModuleMap(new CppModuleMap(getBinArtifact("foo/something.xyz",fooBin),"name")).build(NULL_ACTION_OWNER,middlemanFactory);
  CppCompilationContext fooContextWithInheritedModuleMapSameAsModuleMap=new CppCompilationContext.Builder(getRuleContext(fooBin)).mergeDependentContext(fooContextWithModuleMap).setCppModuleMap(new CppModuleMap(getBinArtifact("foo/something.xyz",fooBin),"name")).build(NULL_ACTION_OWNER,middlemanFactory);
  CppCompilationContext fooContextWithHeaderModuleSrcs=new CppCompilationContext.Builder(getRuleContext(fooBin)).addDeclaredIncludeSrc(getSourceArtifact("foo/foo.h")).build(NULL_ACTION_OWNER,middlemanFactory);
  CppCompilationContext fooContextWithInheritedHeaderModuleSrcs=new CppCompilationContext.Builder(getRuleContext(fooBin)).mergeDependentContext(fooContextWithHeaderModuleSrcs).build(NULL_ACTION_OWNER,middlemanFactory);
  CppCompilationContext fooContextWithHeaderModule=new CppCompilationContext.Builder(getRuleContext(fooBin)).setHeaderModule(getGenfilesArtifact("foo/something.pcm",fooBin)).addDeclaredIncludeSrc(getSourceArtifact("foo/bar.h")).build(NULL_ACTION_OWNER,middlemanFactory);
  CppCompilationContext fooContextWithPicHeaderModule=new CppCompilationContext.Builder(getRuleContext(fooBin)).setPicHeaderModule(getGenfilesArtifact("foo/something.pcm",fooBin)).build(NULL_ACTION_OWNER,middlemanFactory);
  CppCompilationContext fooContextWithInheritedHeaderModule=new CppCompilationContext.Builder(getRuleContext(fooBin)).mergeDependentContext(fooContextWithHeaderModule).setHeaderModule(getGenfilesArtifact("foo/something.pcm",fooBin)).addDeclaredIncludeSrc(getSourceArtifact("foo/bar.h")).build(NULL_ACTION_OWNER,middlemanFactory);
  CppCompilationContext fooContextWithTransitivelyInheritedHeaderModule=new CppCompilationContext.Builder(getRuleContext(fooBin)).mergeDependentContext(fooContextWithInheritedHeaderModule).setHeaderModule(getGenfilesArtifact("foo/something.pcm",fooBin)).build(NULL_ACTION_OWNER,middlemanFactory);
  CppCompilationContext fooContextUsingHeaderModules=new CppCompilationContext.Builder(getRuleContext(fooBin)).setProvideTransitiveModuleMaps(true).build(NULL_ACTION_OWNER,middlemanFactory);
  new EqualsTester().addEqualityGroup(fooContextA1,fooContextA2,barContext).addEqualityGroup(fooContextB).addEqualityGroup(fooContextWithModuleMap).addEqualityGroup(fooContextWithCompilationPrerequisites).addEqualityGroup(fooContextWithModuleMapAndCompilationPrerequisites).addEqualityGroup(fooContextWithInheritedModuleMapSameAsModuleMap).addEqualityGroup(fooContextWithHeaderModuleSrcs).addEqualityGroup(fooContextWithInheritedHeaderModuleSrcs).addEqualityGroup(fooContextWithHeaderModule).addEqualityGroup(fooContextWithPicHeaderModule).addEqualityGroup(fooContextWithInheritedHeaderModule).addEqualityGroup(fooContextWithTransitivelyInheritedHeaderModule).addEqualityGroup(fooContextUsingHeaderModules).testEquals();
}
