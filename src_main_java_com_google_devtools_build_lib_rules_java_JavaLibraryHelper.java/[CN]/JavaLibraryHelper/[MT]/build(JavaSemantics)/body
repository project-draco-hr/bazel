{
  Preconditions.checkState(output != null,"must have an output file; use setOutput()");
  JavaTargetAttributes.Builder attributes=new JavaTargetAttributes.Builder(semantics);
  attributes.addSourceJars(sourceJars);
  addDepsToAttributes(attributes);
  attributes.setStrictJavaDeps(strictDepsMode);
  attributes.setRuleKind(ruleContext.getRule().getRuleClass());
  attributes.setTargetLabel(ruleContext.getLabel());
  if (isStrict() && classpathMode != JavaClasspathMode.OFF) {
    JavaCompilationHelper.addDependencyArtifactsToAttributes(attributes,deps);
  }
  JavaCompilationArtifacts.Builder artifactsBuilder=new JavaCompilationArtifacts.Builder();
  JavaCompilationHelper helper=new JavaCompilationHelper(ruleContext,semantics,javacOpts,attributes,implicitAttributesSuffix);
  Artifact outputDepsProto=helper.createOutputDepsProtoArtifact(output,artifactsBuilder);
  helper.createCompileAction(output,null,null,outputDepsProto,null);
  helper.createCompileTimeJarAction(output,artifactsBuilder);
  artifactsBuilder.addRuntimeJar(output);
  return artifactsBuilder.build();
}
