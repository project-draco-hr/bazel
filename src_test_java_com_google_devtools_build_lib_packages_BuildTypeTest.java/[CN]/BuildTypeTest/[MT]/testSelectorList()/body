{
  Object selector1=new SelectorValue(ImmutableMap.of("//conditions:a",ImmutableList.of("//a:a"),"//conditions:b",ImmutableList.of("//b:b")));
  Object selector2=new SelectorValue(ImmutableMap.of("//conditions:c",ImmutableList.of("//c:c"),"//conditions:d",ImmutableList.of("//d:d")));
  BuildType.SelectorList<List<Label>> selectorList=new BuildType.SelectorList<>(ImmutableList.of(selector1,selector2),null,currentRule,BuildType.LABEL_LIST);
  assertEquals(BuildType.LABEL_LIST,selectorList.getOriginalType());
  assertThat(selectorList.getKeyLabels()).containsExactlyElementsIn(ImmutableSet.of(Label.parseAbsolute("//conditions:a"),Label.parseAbsolute("//conditions:b"),Label.parseAbsolute("//conditions:c"),Label.parseAbsolute("//conditions:d")));
  List<Selector<List<Label>>> selectors=selectorList.getSelectors();
  assertThat(selectors.get(0).getEntries().entrySet()).containsExactlyElementsIn(ImmutableMap.of(Label.parseAbsolute("//conditions:a"),ImmutableList.of(Label.create("a","a")),Label.parseAbsolute("//conditions:b"),ImmutableList.of(Label.create("b","b"))).entrySet());
  assertThat(selectors.get(1).getEntries().entrySet()).containsExactlyElementsIn(ImmutableMap.of(Label.parseAbsolute("//conditions:c"),ImmutableList.of(Label.create("c","c")),Label.parseAbsolute("//conditions:d"),ImmutableList.of(Label.create("d","d"))).entrySet());
}
