{
  ImmutableList.Builder<CrosstoolSelectable> selectablesBuilder=ImmutableList.builder();
  HashMap<String,CrosstoolSelectable> selectablesByName=new HashMap<>();
  ImmutableMap.Builder<String,ActionConfig> actionConfigsByActionName=ImmutableMap.builder();
  for (  CToolchain.Feature toolchainFeature : toolchain.getFeatureList()) {
    Feature feature=new Feature(toolchainFeature);
    selectablesBuilder.add(feature);
    selectablesByName.put(feature.getName(),feature);
  }
  for (  CToolchain.ActionConfig toolchainActionConfig : toolchain.getActionConfigList()) {
    ActionConfig actionConfig=new ActionConfig(toolchainActionConfig);
    selectablesBuilder.add(actionConfig);
    selectablesByName.put(actionConfig.getName(),actionConfig);
    actionConfigsByActionName.put(actionConfig.getActionName(),actionConfig);
  }
  this.selectables=selectablesBuilder.build();
  this.selectablesByName=ImmutableMap.copyOf(selectablesByName);
  checkForActionNameDups(toolchain.getActionConfigList());
  checkForActivatableDups(this.selectables);
  this.actionConfigsByActionName=actionConfigsByActionName.build();
  ImmutableMultimap.Builder<CrosstoolSelectable,CrosstoolSelectable> implies=ImmutableMultimap.builder();
  ImmutableMultimap.Builder<CrosstoolSelectable,ImmutableSet<CrosstoolSelectable>> requires=ImmutableMultimap.builder();
  ImmutableMultimap.Builder<CrosstoolSelectable,CrosstoolSelectable> impliedBy=ImmutableMultimap.builder();
  ImmutableMultimap.Builder<CrosstoolSelectable,CrosstoolSelectable> requiredBy=ImmutableMultimap.builder();
  for (  CToolchain.Feature toolchainFeature : toolchain.getFeatureList()) {
    String name=toolchainFeature.getName();
    CrosstoolSelectable selectable=selectablesByName.get(name);
    for (    CToolchain.FeatureSet requiredFeatures : toolchainFeature.getRequiresList()) {
      ImmutableSet.Builder<CrosstoolSelectable> allOf=ImmutableSet.builder();
      for (      String requiredName : requiredFeatures.getFeatureList()) {
        CrosstoolSelectable required=getActivatableOrFail(requiredName,name);
        allOf.add(required);
        requiredBy.put(required,selectable);
      }
      requires.put(selectable,allOf.build());
    }
    for (    String impliedName : toolchainFeature.getImpliesList()) {
      CrosstoolSelectable implied=getActivatableOrFail(impliedName,name);
      impliedBy.put(implied,selectable);
      implies.put(selectable,implied);
    }
  }
  this.implies=implies.build();
  this.requires=requires.build();
  this.impliedBy=impliedBy.build();
  this.requiredBy=requiredBy.build();
}
