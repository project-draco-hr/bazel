{
  Optional<Tool> tool=Iterables.tryFind(tools,new Predicate<CToolchain.Tool>(){
    @Override public boolean apply(    CToolchain.Tool input){
      Collection<String> featureNamesForTool=input.getWithFeature().getFeatureList();
      return enabledFeatureNames.containsAll(featureNamesForTool);
    }
  }
);
  if (tool.isPresent()) {
    return crosstoolTopPathFragment.getRelative(tool.get().getToolPath());
  }
 else {
    throw new IllegalArgumentException("Matching tool for action " + getActionName() + " not "+ "found for given feature configuration");
  }
}
