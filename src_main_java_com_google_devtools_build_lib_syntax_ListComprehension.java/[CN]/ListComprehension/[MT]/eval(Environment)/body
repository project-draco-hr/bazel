{
  if (lists.size() == 0) {
    return convert(new ArrayList<>(),env);
  }
  List<Map.Entry<Ident,Iterable<?>>> listValues=Lists.newArrayListWithCapacity(lists.size());
  int size=1;
  for (  Map.Entry<Ident,Expression> list : lists) {
    Object listValueObject=list.getValue().eval(env);
    final Iterable<?> listValue=EvalUtils.toIterable(listValueObject,getLocation());
    int listSize=EvalUtils.size(listValue);
    if (listSize == 0) {
      return convert(new ArrayList<>(),env);
    }
    size*=listSize;
    listValues.add(Maps.<Ident,Iterable<?>>immutableEntry(list.getKey(),listValue));
  }
  List<Object> resultList=Lists.newArrayListWithCapacity(size);
  evalLists(env,listValues,resultList);
  return convert(resultList,env);
}
