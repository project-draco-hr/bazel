{
  Class<?> emptyTupleClass=Tuple.EMPTY.getClass();
  Class<?> tupleClass=Tuple.of(1,"a","b").getClass();
  Class<?> mutableListClass=new MutableList(Tuple.of(1,2,3),env).getClass();
  assertThat(SkylarkType.of(mutableListClass)).isEqualTo(SkylarkType.LIST);
  assertThat(SkylarkType.of(emptyTupleClass)).isEqualTo(SkylarkType.TUPLE);
  assertThat(SkylarkType.of(tupleClass)).isEqualTo(SkylarkType.TUPLE);
  assertThat(SkylarkType.TUPLE).isNotEqualTo(SkylarkType.LIST);
  assertThat(SkylarkType.of(ClassObject.SkylarkClassObject.class)).isEqualTo(SkylarkType.STRUCT);
  assertThat(SkylarkType.of(ClassObject.class)).isNotEqualTo(SkylarkType.STRUCT);
  assertThat(SkylarkType.of(Artifact.SpecialArtifact.class)).isEqualTo(SkylarkType.of(Artifact.class));
  assertThat(SkylarkType.of(RuleConfiguredTarget.class)).isNotEqualTo(SkylarkType.STRUCT);
}
