{
  Class<?> emptyListClass=SkylarkList.EMPTY_LIST.getClass();
  Class<?> simpleListClass=SkylarkList.list(Arrays.<Integer>asList(1,2,3),SkylarkType.INT).getClass();
  Class<?> tupleClass=SkylarkList.tuple(Arrays.<Object>asList(1,"a","b")).getClass();
  assertThat(SkylarkList.class.isAnnotationPresent(SkylarkModule.class)).isTrue();
  assertThat(EvalUtils.getParentWithSkylarkModule(SkylarkList.class)).isEqualTo(SkylarkList.class);
  assertThat(EvalUtils.getParentWithSkylarkModule(emptyListClass)).isEqualTo(SkylarkList.class);
  assertThat(EvalUtils.getParentWithSkylarkModule(simpleListClass)).isEqualTo(SkylarkList.class);
  assertThat(EvalUtils.getParentWithSkylarkModule(tupleClass)).isEqualTo(SkylarkList.class);
  assertThat(ClassObject.class.isAnnotationPresent(SkylarkModule.class)).isFalse();
  assertThat(ClassObject.SkylarkClassObject.class.isAnnotationPresent(SkylarkModule.class)).isTrue();
  assertThat(EvalUtils.getParentWithSkylarkModule(ClassObject.SkylarkClassObject.class) == ClassObject.SkylarkClassObject.class).isTrue();
  assertThat(EvalUtils.getParentWithSkylarkModule(ClassObject.class)).isNull();
}
