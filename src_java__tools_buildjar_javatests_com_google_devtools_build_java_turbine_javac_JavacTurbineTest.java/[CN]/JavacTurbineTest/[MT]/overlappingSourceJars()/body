{
  Path sourceJar1=temp.newFile("srcs1.jar").toPath();
  try (OutputStream os=Files.newOutputStream(sourceJar1);JarOutputStream jos=new JarOutputStream(os)){
    jos.putNextEntry(new JarEntry("Hello.java"));
    jos.write("public class Hello {}".getBytes(UTF_8));
  }
   Path sourceJar2=temp.newFile("srcs2.jar").toPath();
  try (OutputStream os=Files.newOutputStream(sourceJar2);JarOutputStream jos=new JarOutputStream(os)){
    jos.putNextEntry(new JarEntry("Hello.java"));
    jos.write("public class Hello {}".getBytes(UTF_8));
  }
   optionsBuilder.setSourceJars(ImmutableList.of(sourceJar2.toString(),sourceJar1.toString()));
  compile();
  Map<String,byte[]> outputs=collectOutputs();
  assertThat(outputs.keySet()).containsExactly("Hello.class");
}
