{
  OptionsProvider options=parseOptions(modules,args);
  BlazeServerStartupOptions startupOptions=options.getOptions(BlazeServerStartupOptions.class);
  final BlazeRuntime runtime=newRuntime(modules,options);
  final BlazeCommandDispatcher dispatcher=new BlazeCommandDispatcher(runtime);
  CommandExecutor commandExecutor=new CommandExecutor(runtime,dispatcher);
  RPCServer afUnixServer=RPCServer.newServerWith(runtime.getClock(),commandExecutor,runtime.getServerDirectory(),runtime.workspace.getWorkspace(),startupOptions.maxIdleSeconds);
  GrpcServer grpcServer=null;
  if (startupOptions.grpcPort != -1) {
    try {
      Class<?> factoryClass=Class.forName("com.google.devtools.build.lib.server.GrpcServerImpl$Factory");
      GrpcServer.Factory factory=(GrpcServer.Factory)factoryClass.newInstance();
      grpcServer=factory.create(commandExecutor,runtime.getClock(),startupOptions.grpcPort,startupOptions.outputBase.getPathString());
    }
 catch (    ClassNotFoundException|InstantiationException|IllegalAccessException e) {
      throw new AbruptExitException("gRPC server not compiled in",ExitCode.BLAZE_INTERNAL_ERROR);
    }
  }
  return new BlazeServer(afUnixServer,grpcServer);
}
