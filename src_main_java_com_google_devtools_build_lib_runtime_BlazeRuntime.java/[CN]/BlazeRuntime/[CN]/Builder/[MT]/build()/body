{
  Preconditions.checkNotNull(productName);
  Preconditions.checkNotNull(serverDirectories);
  Preconditions.checkNotNull(startupOptionsProvider);
  Clock clock=(this.clock == null) ? BlazeClock.instance() : this.clock;
  UUID instanceId=(this.instanceId == null) ? UUID.randomUUID() : this.instanceId;
  Preconditions.checkNotNull(clock);
  for (  BlazeModule module : blazeModules) {
    module.blazeStartup(startupOptionsProvider,BlazeVersionInfo.instance(),instanceId,serverDirectories,clock);
  }
  ServerBuilder serverBuilder=new ServerBuilder();
  serverBuilder.addQueryOutputFormatters(OutputFormatter.getDefaultFormatters());
  for (  BlazeModule module : blazeModules) {
    module.serverInit(startupOptionsProvider,serverBuilder);
  }
  ConfiguredRuleClassProvider.Builder ruleClassBuilder=new ConfiguredRuleClassProvider.Builder();
  for (  BlazeModule module : blazeModules) {
    module.initializeRuleClasses(ruleClassBuilder);
  }
  ConfiguredRuleClassProvider ruleClassProvider=ruleClassBuilder.build();
  List<PackageFactory.EnvironmentExtension> extensions=new ArrayList<>();
  for (  BlazeModule module : blazeModules) {
    extensions.add(module.getPackageEnvironmentExtension());
  }
  Package.Builder.Helper packageBuilderHelper=null;
  for (  BlazeModule module : blazeModules) {
    Package.Builder.Helper candidateHelper=module.getPackageBuilderHelper(ruleClassProvider,serverDirectories.getFileSystem());
    if (candidateHelper != null) {
      Preconditions.checkState(packageBuilderHelper == null,"more than one module defines a package builder helper");
      packageBuilderHelper=candidateHelper;
    }
  }
  if (packageBuilderHelper == null) {
    packageBuilderHelper=Package.Builder.DefaultHelper.INSTANCE;
  }
  PackageFactory packageFactory=new PackageFactory(ruleClassProvider,ruleClassBuilder.getPlatformRegexps(),serverBuilder.getAttributeContainerFactory(),extensions,BlazeVersionInfo.instance().getVersion(),packageBuilderHelper);
  ConfigurationFactory configurationFactory=new ConfigurationFactory(ruleClassProvider.getConfigurationCollectionFactory(),ruleClassProvider.getConfigurationFragments());
  ProjectFile.Provider projectFileProvider=null;
  for (  BlazeModule module : blazeModules) {
    ProjectFile.Provider candidate=module.createProjectFileProvider();
    if (candidate != null) {
      Preconditions.checkState(projectFileProvider == null,"more than one module defines a project file provider");
      projectFileProvider=candidate;
    }
  }
  return new BlazeRuntime(serverBuilder.getQueryEnvironmentFactory(),serverBuilder.getQueryFunctions(),serverBuilder.getQueryOutputFormatters(),packageFactory,ruleClassProvider,configurationFactory,serverBuilder.getInfoItems(),clock,startupOptionsProvider,ImmutableList.copyOf(blazeModules),eventBusExceptionHandler,projectFileProvider,serverBuilder.getInvocationPolicy(),serverBuilder.getCommands(),productName);
}
