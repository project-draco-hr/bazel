{
  ObjcCommon.Builder builder=new ObjcCommon.Builder(ruleContext);
  IntermediateArtifacts intermediateArtifacts=ObjcRuleClasses.j2objcIntermediateArtifacts(ruleContext);
  if (!Iterables.isEmpty(transpiledSources) || !Iterables.isEmpty(transpiledHeaders)) {
    CompilationArtifacts compilationArtifacts=new CompilationArtifacts.Builder().addNonArcSrcs(transpiledSources).setIntermediateArtifacts(intermediateArtifacts).setPchFile(Optional.<Artifact>absent()).addAdditionalHdrs(transpiledHeaders).build();
    builder.setCompilationArtifacts(compilationArtifacts);
  }
  for (  Attribute dependentAttribute : dependentAttributes) {
    if (ruleContext.getAttribute(dependentAttribute.getName()) != null) {
      builder.addDepObjcProviders(ruleContext.getPrerequisites(dependentAttribute.getName(),dependentAttribute.getAccessMode(),ObjcProvider.class));
    }
  }
  return builder.addUserHeaderSearchPaths(headerSearchPaths).setIntermediateArtifacts(intermediateArtifacts).setHasModuleMap().build();
}
