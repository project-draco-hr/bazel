{
  Artifact input=getSourceArtifact("input");
  Artifact output=getBinArtifactWithNoOwner("output");
  Action[] actions=builder().addInput(input).addOutput(output).setExecutable(scratch.file("/bin/xxx").asFragment()).setProgressMessage("Test").build(ActionsTestUtil.NULL_ACTION_OWNER,collectingAnalysisEnvironment,targetConfig);
  collectingAnalysisEnvironment.registerAction(actions);
  SpawnAction action=(SpawnAction)actions[0];
  assertEquals(ActionsTestUtil.NULL_ACTION_OWNER.getLabel(),action.getOwner().getLabel());
  assertThat(action.getInputs()).containsExactlyElementsIn(asList(input));
  assertThat(action.getOutputs()).containsExactlyElementsIn(asList(output));
  assertEquals(AbstractAction.DEFAULT_RESOURCE_SET,action.getSpawn().getLocalResources());
  assertThat(action.getArguments()).containsExactlyElementsIn(asList("/bin/xxx"));
  assertEquals("Test",action.getProgressMessage());
}
