{
  Set<SkyKey> fragmentKeys=new LinkedHashSet<>();
  for (  Class<? extends BuildConfiguration.Fragment> fragmentClass : key.getFragments()) {
    BuildOptions optionsUsedByFragment=key.getBuildOptions().trim(BuildConfiguration.getOptionsClasses(ImmutableList.<Class<? extends BuildConfiguration.Fragment>>of(fragmentClass),ruleClassProvider));
    fragmentKeys.add(ConfigurationFragmentValue.key(optionsUsedByFragment,fragmentClass));
  }
  Map<SkyKey,ValueOrException<InvalidConfigurationException>> fragmentDeps=env.getValuesOrThrow(fragmentKeys,InvalidConfigurationException.class);
  if (env.valuesMissing()) {
    return null;
  }
  ImmutableSet.Builder<Fragment> fragments=ImmutableSet.builder();
  for (  ValueOrException<InvalidConfigurationException> value : fragmentDeps.values()) {
    BuildConfiguration.Fragment fragment=((ConfigurationFragmentValue)value.get()).getFragment();
    if (fragment != null) {
      fragments.add(fragment);
    }
  }
  return fragments.build();
}
