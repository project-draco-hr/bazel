{
  Artifact artifact=artifactRule.getArtifact();
  RepositorySystem system=connector.newRepositorySystem();
  RepositorySystemSession session=connector.newRepositorySystemSession(system);
  ArtifactDescriptorRequest descriptorRequest=new ArtifactDescriptorRequest();
  descriptorRequest.setArtifact(artifact);
  descriptorRequest.addRepository(MavenConnector.getMavenCentral());
  ArtifactDescriptorResult descriptorResult;
  try {
    descriptorResult=system.readArtifactDescriptor(session,descriptorRequest);
    if (descriptorResult == null) {
      return;
    }
  }
 catch (  ArtifactDescriptorException e) {
    handler.handle(Event.error(location,e.getMessage()));
    return;
  }
  for (  Dependency dependency : descriptorResult.getDependencies()) {
    Artifact depArtifact=dependency.getArtifact();
    try {
      Rule rule=new Rule(depArtifact.getArtifactId(),depArtifact.getGroupId(),depArtifact.getVersion());
      if (addArtifact(rule,artifactRule.toMavenArtifactString(),location)) {
        getArtifactDependencies(rule,location);
      }
    }
 catch (    Rule.InvalidRuleException e) {
      handler.handle(Event.error(location,e.getMessage()));
    }
  }
}
