{
  Stopwatch timer=Stopwatch.createStarted();
  if (!request.getBuildOptions().performAnalysisPhase) {
    getReporter().handle(Event.progress("Loading complete."));
    LOG.info("No analysis requested, so finished");
    return AnalysisResult.EMPTY;
  }
  getReporter().handle(Event.progress("Loading complete.  Analyzing..."));
  Profiler.instance().markPhase(ProfilePhase.ANALYZE);
  BuildView view=new BuildView(runtime.getDirectories(),runtime.getRuleClassProvider(),runtime.getSkyframeExecutor(),runtime.getCoverageReportActionFactory());
  AnalysisResult analysisResult=view.update(loadingResult,configurations,request.getAspects(),request.getViewOptions(),request.getTopLevelArtifactContext(),env.getReporter(),env.getEventBus());
  env.getEventBus().post(new AnalysisPhaseCompleteEvent(analysisResult.getTargetsToBuild(),view.getTargetsVisited(),timer.stop().elapsed(TimeUnit.MILLISECONDS)));
  env.getEventBus().post(new TestFilteringCompleteEvent(analysisResult.getTargetsToBuild(),analysisResult.getTargetsToTest()));
  boolean checkLicenses=configurations.getTargetConfigurations().get(0).checkLicenses();
  if (checkLicenses) {
    Profiler.instance().markPhase(ProfilePhase.LICENSE);
    validateLicensingForTargets(analysisResult.getTargetsToBuild(),request.getViewOptions().keepGoing);
  }
  return analysisResult;
}
