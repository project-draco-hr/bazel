{
  Profiler.instance().markPhase(ProfilePhase.LOAD);
  env.throwPendingException();
  initializeOutputFilter(request);
  final boolean keepGoing=request.getViewOptions().keepGoing;
  Callback callback=new Callback(){
    @Override public void notifyTargets(    Collection<Target> targets) throws LoadingFailedException {
      if (validator != null) {
        validator.validateTargets(targets,keepGoing);
      }
    }
    @Override public void notifyVisitedPackages(    Set<PackageIdentifier> visitedPackages){
      runtime.getSkyframeExecutor().updateLoadedPackageSet(visitedPackages);
    }
  }
;
  LoadingResult result=runtime.getLoadingPhaseRunner().execute(getReporter(),env.getEventBus(),request.getTargets(),request.getLoadingOptions(),runtime.createBuildOptions(request).getAllLabels(),keepGoing,isLoadingEnabled(request),request.shouldRunTests(),callback);
  env.throwPendingException();
  return result;
}
