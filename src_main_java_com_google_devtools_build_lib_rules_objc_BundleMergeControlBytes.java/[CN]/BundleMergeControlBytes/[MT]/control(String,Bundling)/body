{
  ObjcProvider objcProvider=bundling.getObjcProvider();
  mergeZipPrefix+=bundling.getBundleDir() + "/";
  BundleMergeProtos.Control.Builder control=BundleMergeProtos.Control.newBuilder().addAllBundleFile(BundleableFile.toBundleFiles(bundling.getExtraBundleFiles())).addAllBundleFile(BundleableFile.toBundleFiles(objcProvider.get(BUNDLE_FILE))).addAllSourcePlistFile(Artifact.toExecPaths(bundling.getInfoplistMerging().getPlistWithEverything().asSet())).setMinimumOsVersion(objcConfiguration.getMinimumOs()).setSdkVersion(objcConfiguration.getIosSdkVersion()).setPlatform(objcConfiguration.getBundlingPlatform().name()).setBundleRoot(bundling.getBundleDir());
  for (  Artifact mergeZip : bundling.getMergeZips()) {
    control.addMergeZip(MergeZip.newBuilder().setEntryNamePrefix(mergeZipPrefix).setSourcePath(mergeZip.getExecPathString()).build());
  }
  for (  TargetDeviceFamily targetDeviceFamily : families) {
    control.addTargetDeviceFamily(targetDeviceFamily.name());
  }
  Map<String,String> variableSubstitutions=bundling.variableSubstitutions();
  for (  String variable : variableSubstitutions.keySet()) {
    control.addVariableSubstitution(VariableSubstitution.newBuilder().setName(variable).setValue(variableSubstitutions.get(variable)).build());
  }
  control.setOutFile(mergedIpa.getExecPathString());
  for (  Artifact linkedBinary : bundling.getCombinedArchitectureBinary().asSet()) {
    control.addBundleFile(BundleMergeProtos.BundleFile.newBuilder().setSourceFile(linkedBinary.getExecPathString()).setBundlePath(bundling.getName()).setExternalFileAttribute(BundleableFile.EXECUTABLE_EXTERNAL_FILE_ATTRIBUTE).build()).setExecutableName(bundling.getName());
  }
  for (  Bundling nestedBundling : bundling.getObjcProvider().get(NESTED_BUNDLE)) {
    if (nestedBundling.getArchitecture().equals(bundling.getArchitecture())) {
      control.addNestedBundle(control(mergeZipPrefix,nestedBundling));
    }
  }
  if (bundling.getPrimaryBundleId() != null) {
    control.setPrimaryBundleIdentifier(bundling.getPrimaryBundleId());
  }
  if (bundling.getFallbackBundleId() != null) {
    control.setFallbackBundleIdentifier(bundling.getFallbackBundleId());
  }
  return control.build();
}
