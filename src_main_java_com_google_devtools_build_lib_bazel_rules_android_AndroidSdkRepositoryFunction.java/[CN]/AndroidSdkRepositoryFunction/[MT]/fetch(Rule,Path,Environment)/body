{
  prepareLocalRepositorySymlinkTree(rule,outputDirectory);
  PathFragment pathFragment=getTargetPath(rule,getWorkspace());
  if (!symlinkLocalRepositoryContents(outputDirectory,getOutputBase().getFileSystem().getPath(pathFragment))) {
    return null;
  }
  AttributeMap attributes=NonconfigurableAttributeMapper.of(rule);
  String buildToolsVersion=attributes.get("build_tools_version",Type.STRING);
  Integer apiLevel=attributes.get("api_level",Type.INTEGER);
  String template;
  try {
    template=ResourceFileLoader.loadResource(AndroidSdkRepositoryFunction.class,"android_sdk_repository_template.txt");
  }
 catch (  IOException e) {
    throw new IllegalStateException(e);
  }
  String buildFile=template.replaceAll("%repository_name%",rule.getName()).replaceAll("%build_tools_version%",buildToolsVersion).replaceAll("%api_level%",apiLevel.toString());
  return writeBuildFile(outputDirectory,buildFile);
}
