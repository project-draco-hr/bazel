def _must_skip(spec, entry, is_type):
    if (not isinstance(spec, ClassTypes)):
        if (entry in getattr(spec, '__dict__', {})):
            return False
        spec = spec.__class__
    if (not hasattr(spec, '__mro__')):
        return is_type
    for klass in spec.__mro__:
        result = klass.__dict__.get(entry, DEFAULT)
        if (result is DEFAULT):
            continue
        if isinstance(result, (staticmethod, classmethod)):
            return False
        return is_type
    return is_type
