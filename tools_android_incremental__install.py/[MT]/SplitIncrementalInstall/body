def SplitIncrementalInstall(adb, app_package, execroot, split_main_apk, split_apks):
    'Does incremental installation using split packages.'
    app_dir = os.path.join(DEVICE_DIRECTORY, app_package)
    device_manifest_path = ('%s/split_manifest' % app_dir)
    device_manifest = adb.Pull(device_manifest_path)
    expected_timestamp = adb.Pull(('%s/install_timestamp' % app_dir))
    actual_timestamp = adb.GetInstallTime(app_package)
    device_checksums = {}
    if (device_manifest is not None):
        for manifest_line in device_manifest.split('\n'):
            if manifest_line:
                (name, checksum) = manifest_line.split(' ')
                device_checksums[name] = checksum
    install_checksums = {}
    install_checksums['__MAIN__'] = Checksum(os.path.join(execroot, split_main_apk))
    for apk in split_apks:
        install_checksums[apk] = Checksum(os.path.join(execroot, apk))
    reinstall_main = False
    if ((device_manifest is None) or (actual_timestamp is None) or (actual_timestamp != expected_timestamp) or (install_checksums['__MAIN__'] != device_checksums['__MAIN__']) or (set(device_checksums.keys()) != set(install_checksums.keys()))):
        reinstall_main = True
        device_checksums = {}
    apks_to_update = [apk for apk in split_apks if ((apk not in device_checksums) or (device_checksums[apk] != install_checksums[apk]))]
    if ((not apks_to_update) and (not reinstall_main)):
        return
    adb.Delete(device_manifest_path)
    if reinstall_main:
        logging.info('Installing main APK...')
        adb.Uninstall(app_package)
        adb.InstallMultiple(os.path.join(execroot, split_main_apk))
        adb.PushString(adb.GetInstallTime(app_package), ('%s/install_timestamp' % app_dir)).result()
    logging.info('Reinstalling %s APKs...', len(apks_to_update))
    for apk in apks_to_update:
        adb.InstallMultiple(os.path.join(execroot, apk), app_package)
    install_manifest = [((name + ' ') + checksum) for (name, checksum) in install_checksums.iteritems()]
    adb.PushString('\n'.join(install_manifest), ('%s/split_manifest' % app_dir)).result()
