{
  scratch.file("test/skylark/extension.bzl","def custom_rule_impl(ctx):","  ctx.file_action(output = ctx.outputs.executable, content = 'echo hello')","  rf = ctx.runfiles(ctx.files.data)","  return struct(runfiles = rf)","","custom_rule = rule(implementation = custom_rule_impl, executable = True,","  attrs = {'data': attr.label_list(cfg=DATA_CFG, allow_files=True)})");
  scratch.file("test/skylark/BUILD","load('/test/skylark/extension', 'custom_rule')","","custom_rule(name = 'cr', data = [':a.txt'])");
  ConfiguredTarget target=getConfiguredTarget("//test/skylark:cr");
  assertEquals("//test/skylark:cr",target.getLabel().toString());
  assertThat(ActionsTestUtil.baseArtifactNames(target.getProvider(RunfilesProvider.class).getDefaultRunfiles().getAllArtifacts())).containsExactly("a.txt","cr").inOrder();
  assertThat(ActionsTestUtil.baseArtifactNames(target.getProvider(FileProvider.class).getFilesToBuild())).containsExactly("cr");
}
