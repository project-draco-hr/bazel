{
  scratch.file("test/library.bzl","l = [1, 2]","def _impl(ctx): l.append(3) ; return struct()","foo = rule(implementation=_impl)");
  scratch.file("test/BUILD","load('library', 'foo')","foo(name='foo')");
  try {
    getConfiguredTarget("//test:foo");
    fail("An Exception was expected, but nothing was thrown.");
  }
 catch (  AssertionFailedError ex) {
    assertThat(ex).hasMessage(LINE_JOINER.join("ERROR /workspace/test/BUILD:2:1: in foo rule //test:foo: ","Traceback (most recent call last):","\tFile \"/workspace/test/BUILD\", line 2","\t\tfoo(name = 'foo')","\tFile \"/workspace/test/library.bzl\", line 2, in _impl","\t\tl.append(3)","trying to mutate a frozen object"));
  }
}
