{
  scratch.file("test/skylark/extension.bzl","def custom_rule_impl(ctx):","  files = [ctx.outputs.lbl, ctx.outputs.list, ctx.outputs.str]","  print('==!=!=!=')","  print(files)","  ctx.action(","    outputs = files,","    command = 'echo')","  return struct(files = set(files))","","custom_rule = rule(implementation = custom_rule_impl,","  attrs = {","    'attr1': attr.label(allow_files=True),","    'attr2': attr.label_list(allow_files=True),","    'attr3': attr.string(),","  },","  outputs = {","    'lbl': '%{attr1}.a',","    'list': '%{attr2}.b',","    'str': '%{attr3}.c',","})");
  scratch.file("test/skylark/BUILD","load('/test/skylark/extension', 'custom_rule')","","custom_rule(","  name='cr',","  attr1='f1.txt',","  attr2=['f2.txt'],","  attr3='f3.txt',",")");
  scratch.file("test/skylark/f1.txt");
  scratch.file("test/skylark/f2.txt");
  scratch.file("test/skylark/f3.txt");
  ConfiguredTarget target=getConfiguredTarget("//test/skylark:cr");
  assertThat(ActionsTestUtil.baseArtifactNames(target.getProvider(FileProvider.class).getFilesToBuild())).containsExactly("f1.a","f2.b","f3.txt.c");
}
