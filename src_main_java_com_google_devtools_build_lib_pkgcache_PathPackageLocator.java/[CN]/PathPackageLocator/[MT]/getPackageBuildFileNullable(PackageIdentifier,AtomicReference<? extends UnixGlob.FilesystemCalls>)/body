{
  Preconditions.checkArgument(!packageIdentifier.getRepository().isDefault());
  if (packageIdentifier.getRepository().isMain()) {
    return getFilePath(packageIdentifier.getPackageFragment().getRelative("BUILD"),cache);
  }
 else {
    Verify.verify(outputBase != null,String.format("External package '%s' needs to be loaded but this PathPackageLocator instance does not " + "support external packages",packageIdentifier));
    Path buildFile=outputBase.getRelative(Label.EXTERNAL_PACKAGE_NAME).getRelative(packageIdentifier.getRepository().strippedName()).getRelative(packageIdentifier.getPackageFragment()).getRelative("BUILD");
    FileStatus stat=cache.get().statNullable(buildFile,Symlinks.FOLLOW);
    if (stat != null && stat.isFile()) {
      return buildFile;
    }
 else {
      return null;
    }
  }
}
