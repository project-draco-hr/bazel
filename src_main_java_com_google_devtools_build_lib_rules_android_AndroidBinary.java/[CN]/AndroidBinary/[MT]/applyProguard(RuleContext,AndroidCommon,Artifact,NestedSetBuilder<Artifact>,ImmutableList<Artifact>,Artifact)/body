{
  Artifact proguardOutputJar=ruleContext.getImplicitOutputArtifact(AndroidRuleClasses.ANDROID_BINARY_PROGUARD_JAR);
  if (proguardSpecs.isEmpty()) {
    return createEmptyProguardAction(ruleContext,proguardOutputJar,deployJarArtifact);
  }
  AndroidSdkProvider sdk=AndroidSdkProvider.fromRuleContext(ruleContext);
  NestedSet<Artifact> libraryJars=NestedSetBuilder.<Artifact>naiveLinkOrder().add(sdk.getAndroidJar()).addTransitive(common.getTransitiveNeverLinkLibraries()).build();
  ProguardOutput result=ProguardHelper.createProguardAction(ruleContext,sdk.getProguard(),deployJarArtifact,proguardSpecs,proguardMapping,libraryJars,proguardOutputJar,ruleContext.attributes().get("proguard_generate_mapping",Type.BOOLEAN),getProguardOptimizationPasses(ruleContext));
  result.addAllToSet(filesBuilder);
  return result;
}
