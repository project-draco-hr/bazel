{
  JavaSemantics javaSemantics=createJavaSemantics();
  AndroidSemantics androidSemantics=createAndroidSemantics();
  NestedSetBuilder<Artifact> filesBuilder=NestedSetBuilder.stableOrder();
  ImmutableList<TransitiveInfoCollection> deps=ImmutableList.<TransitiveInfoCollection>copyOf(ruleContext.getPrerequisites("deps",Mode.TARGET));
  JavaCommon javaCommon=new JavaCommon(ruleContext,javaSemantics,deps,deps,deps);
  AndroidCommon androidCommon=new AndroidCommon(ruleContext,javaCommon,true,true);
  try {
    RuleConfiguredTargetBuilder builder=init(ruleContext,filesBuilder,getTransitiveResourceContainers(ruleContext,ImmutableList.of("resources","deps")),javaCommon,androidCommon,javaSemantics,androidSemantics,ImmutableList.<String>of("deps"));
    return builder.build();
  }
 catch (  RuleConfigurationException e) {
    Preconditions.checkArgument(ruleContext.hasErrors(),"Exception caught but no errors reported:\n %s",Joiner.on("\n").join(e.getStackTrace()));
    return null;
  }
}
