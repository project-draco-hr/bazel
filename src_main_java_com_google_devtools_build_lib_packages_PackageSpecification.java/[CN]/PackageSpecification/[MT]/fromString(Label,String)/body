{
  String result=spec;
  boolean allBeneath=false;
  if (result.endsWith(ALL_BENEATH_SUFFIX)) {
    allBeneath=true;
    result=result.substring(0,result.length() - ALL_BENEATH_SUFFIX.length());
    if (result.equals("/")) {
      return EVERYTHING;
    }
  }
  if (!spec.startsWith("//")) {
    throw new InvalidPackageSpecificationException("invalid package name '" + spec + "': must start with '//'");
  }
  PackageIdentifier packageId;
  try {
    packageId=PackageIdentifier.parse(result);
  }
 catch (  LabelSyntaxException e) {
    throw new InvalidPackageSpecificationException("invalid package name '" + spec + "': "+ e.getMessage());
  }
  Verify.verify(packageId.getRepository().isDefault());
  packageId=PackageIdentifier.create(context.getPackageIdentifier().getRepository(),packageId.getPackageFragment());
  return allBeneath ? new AllPackagesBeneath(packageId) : new SinglePackage(packageId);
}
