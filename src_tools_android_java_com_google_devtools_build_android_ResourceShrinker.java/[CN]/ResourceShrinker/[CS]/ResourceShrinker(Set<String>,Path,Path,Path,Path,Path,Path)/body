{
  this.resourcePackages=resourcePackages;
  this.rTxt=rTxt;
  this.proguardMapping=mapping;
  this.classesJar=classesJar;
  this.mergedManifest=manifest;
  this.mergedResourceDir=resources;
  this.logger=Logger.getLogger(getClass().getName());
  logger.setLevel(Level.FINE);
  if (logFile != null) {
    try {
      FileHandler fileHandler=new FileHandler(logFile.toString());
      fileHandler.setLevel(Level.FINE);
      fileHandler.setFormatter(new Formatter(){
        @Override public String format(        LogRecord record){
          return record.getMessage() + "\n";
        }
      }
);
      logger.addHandler(fileHandler);
    }
 catch (    SecurityException|IOException e) {
      logger.warning(String.format("Unable to open '%s' to write log.",logFile));
    }
  }
}
