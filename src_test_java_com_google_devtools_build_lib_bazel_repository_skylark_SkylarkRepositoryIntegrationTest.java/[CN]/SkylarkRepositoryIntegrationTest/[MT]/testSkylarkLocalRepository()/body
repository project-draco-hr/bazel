{
  scratch.file("/repo2/WORKSPACE");
  scratch.file("/repo2/bar.txt");
  scratch.file("/repo2/BUILD","filegroup(name='bar', srcs=['bar.txt'], path='foo')");
  scratch.file("def.bzl","def _impl(repository_ctx):","  repository_ctx.symlink(repository_ctx.attr.path, '')","","repo = repository_rule(","    implementation=_impl,","    local=True,","    attrs={'path': attr.string(mandatory=True)})");
  scratch.file(rootDirectory.getRelative("BUILD").getPathString());
  scratch.overwriteFile(rootDirectory.getRelative("WORKSPACE").getPathString(),"load('//:def.bzl', 'repo')","repo(name='foo', path='/repo2')");
  invalidatePackages();
  ConfiguredTarget target=getConfiguredTarget("@foo//:bar");
  Object path=target.getTarget().getAssociatedRule().getAttributeContainer().getAttr("path");
  assertThat(path).isEqualTo("foo");
}
