{
  if (!(target instanceof Rule)) {
    return ImmutableSet.of();
  }
  Rule rule=(Rule)target;
  Multimap<Attribute,Label> attibuteMap=LinkedHashMultimap.create();
  for (  Attribute attribute : rule.getTransitions(Rule.NO_NODEP_ATTRIBUTES).keys()) {
    for (    Class<? extends AspectFactory<?,?,?>> aspectFactory : attribute.getAspects()) {
      AspectDefinition.addAllAttributesOfAspect(rule,attibuteMap,AspectFactory.Util.create(aspectFactory).getDefinition(),Rule.ALL_DEPS);
    }
  }
  ImmutableSet.Builder<SkyKey> depKeys=new ImmutableSet.Builder<>();
  for (  Label label : attibuteMap.values()) {
    depKeys.add(getKey(label));
  }
  return depKeys.build();
}
