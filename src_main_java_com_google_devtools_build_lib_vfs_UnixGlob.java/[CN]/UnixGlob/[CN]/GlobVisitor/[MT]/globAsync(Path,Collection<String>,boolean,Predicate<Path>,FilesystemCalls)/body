{
  FileStatus baseStat=syscalls.statNullable(base,Symlinks.FOLLOW);
  if (baseStat == null || patterns.isEmpty()) {
    return Futures.immediateFuture(Collections.<Path>emptyList());
  }
  List<String[]> splitPatterns=checkAndSplitPatterns(patterns);
  pendingOps.incrementAndGet();
  try {
    for (    String[] splitPattern : splitPatterns) {
      boolean containsRecursivePattern=false;
      for (      String pattern : splitPattern) {
        if (isRecursivePattern(pattern)) {
          containsRecursivePattern=true;
          break;
        }
      }
      GlobTaskContext context=containsRecursivePattern ? new RecursiveGlobTaskContext(splitPattern,excludeDirectories,dirPred,syscalls) : new GlobTaskContext(splitPattern,excludeDirectories,dirPred,syscalls);
      context.queueGlob(base,baseStat.isDirectory(),0);
    }
  }
  finally {
    decrementAndCheckDone();
  }
  return result;
}
