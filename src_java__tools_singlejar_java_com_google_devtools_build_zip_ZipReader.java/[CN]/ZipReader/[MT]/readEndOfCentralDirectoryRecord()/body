{
  byte[] signature=ZipUtil.intToLittleEndian(EndOfCentralDirectoryRecord.SIGNATURE);
  byte[] buffer=new byte[(int)Math.min(64,in.length())];
  int bytesRead=0;
  while (true) {
    in.seek(in.length() - buffer.length);
    in.readFully(buffer,0,buffer.length - bytesRead);
    int signatureLocation=scanBackwards(signature,buffer,buffer.length - bytesRead - 1);
    while (signatureLocation != -1) {
      int eocdSize=buffer.length - signatureLocation;
      if (eocdSize >= EndOfCentralDirectoryRecord.FIXED_DATA_SIZE) {
        int commentLength=ZipUtil.getUnsignedShort(buffer,signatureLocation + EndOfCentralDirectoryRecord.COMMENT_LENGTH_OFFSET);
        int readCommentLength=buffer.length - signatureLocation - EndOfCentralDirectoryRecord.FIXED_DATA_SIZE;
        if (commentLength == readCommentLength) {
          byte[] eocdRecord=new byte[eocdSize];
          System.arraycopy(buffer,signatureLocation,eocdRecord,0,eocdSize);
          return eocdRecord;
        }
      }
      signatureLocation=scanBackwards(signature,buffer,signatureLocation - 1);
    }
    bytesRead=buffer.length;
    int newLength=(int)Math.min(buffer.length * 2,in.length());
    if (newLength == buffer.length) {
      break;
    }
    byte[] newBuf=new byte[newLength];
    System.arraycopy(buffer,0,newBuf,newBuf.length - buffer.length,buffer.length);
    buffer=newBuf;
  }
  throw new ZipException(String.format("Zip file '%s' is malformed. It does not contain an end" + " of central directory record.",file.getName()));
}
