{
  Matcher matcher=DocgenConsts.BLAZE_RULE_LINK.matcher(htmlDoc);
  StringBuffer sb=new StringBuffer(htmlDoc.length());
  while (matcher.find()) {
    String ref=matcher.group(1);
    String name=matcher.group(2);
    if (ruleIndex.containsKey(name)) {
      appendRuleLink(matcher,sb,name,ref);
      continue;
    }
    if (name.endsWith(EXAMPLES_SUFFIX) || name.endsWith(ARGS_SUFFIX)) {
      String ruleName=name.substring(0,name.indexOf(name.endsWith(EXAMPLES_SUFFIX) ? EXAMPLES_SUFFIX : ARGS_SUFFIX));
      if (ruleIndex.containsKey(ruleName)) {
        appendRuleLink(matcher,sb,ruleName,ref);
        continue;
      }
    }
    if (STATIC_PAGES.contains(name)) {
      String link=name + ".html";
      String pageHeading=matcher.group(4);
      if (pageHeading != null) {
        link=link + "#" + pageHeading;
      }
      matcher.appendReplacement(sb,Matcher.quoteReplacement(link));
      continue;
    }
    throw new IllegalArgumentException("link tag does not match any rule or BE page: " + matcher.group());
  }
  matcher.appendTail(sb);
  return sb.toString();
}
