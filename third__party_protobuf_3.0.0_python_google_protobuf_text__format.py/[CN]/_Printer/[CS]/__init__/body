def __init__(self, out, indent=0, as_utf8=False, as_one_line=False, pointy_brackets=False, use_index_order=False, float_format=None, use_field_number=False, descriptor_pool=None):
    'Initialize the Printer.\n\n    Floating point values can be formatted compactly with 15 digits of\n    precision (which is the most that IEEE 754 "double" can guarantee)\n    using float_format=\'.15g\'. To ensure that converting to text and back to a\n    proto will result in an identical value, float_format=\'.17g\' should be used.\n\n    Args:\n      out: To record the text format result.\n      indent: The indent level for pretty print.\n      as_utf8: Produce text output in UTF8 format.\n      as_one_line: Don\'t introduce newlines between fields.\n      pointy_brackets: If True, use angle brackets instead of curly braces for\n        nesting.\n      use_index_order: If True, print fields of a proto message using the order\n        defined in source code instead of the field number. By default, use the\n        field number order.\n      float_format: If set, use this to specify floating point number formatting\n        (per the "Format Specification Mini-Language"); otherwise, str() is\n        used.\n      use_field_number: If True, print field numbers instead of names.\n      descriptor_pool: A DescriptorPool used to resolve Any types.\n    '
    self.out = out
    self.indent = indent
    self.as_utf8 = as_utf8
    self.as_one_line = as_one_line
    self.pointy_brackets = pointy_brackets
    self.use_index_order = use_index_order
    self.float_format = float_format
    self.use_field_number = use_field_number
    self.descriptor_pool = descriptor_pool
