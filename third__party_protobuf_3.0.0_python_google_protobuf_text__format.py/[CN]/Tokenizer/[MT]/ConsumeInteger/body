def ConsumeInteger(self, is_long=False):
    "Consumes an integer number.\n\n    Args:\n      is_long: True if the value should be returned as a long integer.\n    Returns:\n      The integer parsed.\n\n    Raises:\n      ParseError: If an integer couldn't be consumed.\n    "
    try:
        result = _ParseAbstractInteger(self.token, is_long=is_long)
    except ValueError as e:
        raise self.ParseError(str(e))
    self.NextToken()
    return result
