def _ConsumeSingleByteString(self):
    'Consume one token of a string literal.\n\n    String literals (whether bytes or text) can come in multiple adjacent\n    tokens which are automatically concatenated, like in C or Python.  This\n    method only consumes one token.\n\n    Returns:\n      The token parsed.\n    Raises:\n      ParseError: When the wrong format data is found.\n    '
    text = self.token
    if ((len(text) < 1) or (text[0] not in _QUOTES)):
        raise self.ParseError(('Expected string but found: %r' % (text,)))
    if ((len(text) < 2) or (text[(-1)] != text[0])):
        raise self.ParseError(('String missing ending quote: %r' % (text,)))
    try:
        result = text_encoding.CUnescape(text[1:(-1)])
    except ValueError as e:
        raise self.ParseError(str(e))
    self.NextToken()
    return result
