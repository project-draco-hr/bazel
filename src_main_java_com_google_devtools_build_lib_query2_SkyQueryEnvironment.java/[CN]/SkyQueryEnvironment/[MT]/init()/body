{
  long startTime=Profiler.nanoTimeMaybe();
  EvaluationResult<SkyValue> result=graphFactory.prepareAndGet(universeScope,loadingPhaseThreads,eventHandler);
  graph=result.getWalkableGraph();
  Collection<SkyValue> values=result.values();
  long duration=Profiler.nanoTimeMaybe() - startTime;
  if (duration > 0) {
    LOG.info("Spent " + (duration / 1000 / 1000) + " ms on evaluation and walkable graph");
  }
  boolean singleValueEvaluated=values.size() == 1;
  boolean foundError=!result.errorMap().isEmpty();
  boolean evaluationFoundCycle=foundError && !Iterables.isEmpty(result.getError().getCycleInfo());
  Preconditions.checkState(singleValueEvaluated || evaluationFoundCycle,"Universe query \"%s\" unexpectedly did not result in a single value as expected (%s" + " values in result) and it did not fail because of a cycle.%s",universeScope,values.size(),foundError ? " Error: " + result.getError().toString() : "");
  if (singleValueEvaluated) {
    PrepareDepsOfPatternsValue prepareDepsOfPatternsValue=(PrepareDepsOfPatternsValue)Iterables.getOnlyElement(values);
    universeTargetPatternKeys=prepareDepsOfPatternsValue.getTargetPatternKeys();
  }
 else {
    universeTargetPatternKeys=ImmutableList.of();
  }
}
