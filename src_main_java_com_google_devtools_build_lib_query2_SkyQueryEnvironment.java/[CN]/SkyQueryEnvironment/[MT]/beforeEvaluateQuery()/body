{
  EvaluationResult<SkyValue> result;
  try (AutoProfiler p=AutoProfiler.logged("evaluation and walkable graph",LOG)){
    result=graphFactory.prepareAndGet(universeScope,parserPrefix,loadingPhaseThreads,eventHandler);
  }
   SkyKey universeKey=graphFactory.getUniverseKey(universeScope,parserPrefix);
  checkEvaluationResult(result,universeKey);
  graph=result.getWalkableGraph();
  blacklistPatternsSupplier=InterruptibleSupplier.Memoize.of(new BlacklistSupplier(graph));
  ImmutableList<TargetPatternKey> universeTargetPatternKeys=PrepareDepsOfPatternsFunction.getTargetPatternKeys(PrepareDepsOfPatternsFunction.getSkyKeys(universeKey,eventHandler));
  GraphBackedRecursivePackageProvider graphBackedRecursivePackageProvider=new GraphBackedRecursivePackageProvider(graph,universeTargetPatternKeys,pkgPath);
  resolver=new RecursivePackageProviderBackedTargetPatternResolver(graphBackedRecursivePackageProvider,eventHandler,TargetPatternEvaluator.DEFAULT_FILTERING_POLICY,forkJoinPool);
}
