{
  ImmutableSet<PathFragment> allUnderA=toPathsSet("a/b","a/c","a/d");
  assertThat(PathFragment.filterPathsStartingWith(allUnderA,new PathFragment("a"))).containsExactlyElementsIn(allUnderA);
  ImmutableSet<PathFragment> mixed=toPathsSet("a/b","a/c","b/c");
  assertThat(PathFragment.filterPathsStartingWith(mixed,new PathFragment("a"))).containsExactlyElementsIn(toPathsSet("a/b","a/c"));
  assertThat(PathFragment.filterPathsStartingWith(allUnderA,new PathFragment("b"))).isEmpty();
  assertThat(PathFragment.filterPathsStartingWith(toPathsSet("a"),new PathFragment("a"))).containsExactlyElementsIn(toPathsSet("a"));
  assertThat(PathFragment.filterPathsStartingWith(mixed,PathFragment.EMPTY_FRAGMENT)).containsExactlyElementsIn(mixed);
  assertThat(PathFragment.filterPathsStartingWith(toPathsSet("a/b/c","a/b/d","a/c/d"),new PathFragment("a/b"))).containsExactlyElementsIn(toPathsSet("a/b/c","a/b/d"));
}
