{
  Set<SkyKey> unfinishedDeps=new HashSet<>();
  Iterables.addAll(unfinishedDeps,Iterables.filter(env.newlyRequestedDeps,Predicates.not(nodeEntryIsDone)));
  env.newlyRequestedDeps.remove(unfinishedDeps);
  entry.addTemporaryDirectDeps(env.newlyRequestedDeps);
  Map<SkyKey,NodeEntry> batch=graph.getBatch(env.newlyRequestedDeps);
  for (  SkyKey newDep : env.newlyRequestedDeps) {
    NodeEntry depEntry=Preconditions.checkNotNull(batch.get(newDep),newDep);
    DependencyState triState=depEntry.addReverseDepAndCheckIfDone(skyKey);
    Preconditions.checkState(DependencyState.DONE == triState,"new dep %s was not already done for %s. ValueEntry: %s. DepValueEntry: %s",newDep,skyKey,entry,depEntry);
    entry.signalDep();
  }
  Preconditions.checkState(entry.isReady(),"%s %s %s",skyKey,entry,env.newlyRequestedDeps);
}
