{
  CompilationArtifacts compilationArtifacts=CompilationSupport.compilationArtifacts(ruleContext,intermediateArtifacts);
  ProtoSupport protoSupport=new ProtoSupport(ruleContext,TargetType.LINKING_TARGET,buildConfiguration);
  Optional<Artifact> protoLib=Optional.absent();
  if (protoSupport.hasProtos()) {
    protoLib=protoSupport.getCommon().getCompiledArchive();
  }
  return new ObjcCommon.Builder(ruleContext,buildConfiguration).setCompilationAttributes(CompilationAttributes.Builder.fromRuleContext(ruleContext).build()).setCompilationArtifacts(compilationArtifacts).setResourceAttributes(new ResourceAttributes(ruleContext)).addDefines(ruleContext.getTokenizedStringListAttr("defines")).addDeps(propagatedDeps).addDepObjcProviders(ruleContext.getPrerequisites("bundles",Mode.TARGET,ObjcProvider.class)).addNonPropagatedDepObjcProviders(nonPropagatedObjcDeps).setIntermediateArtifacts(intermediateArtifacts).setAlwayslink(false).setLinkedBinary(intermediateArtifacts.strippedSingleArchitectureBinary()).addExtraImportLibraries(protoLib.asSet()).build();
}
