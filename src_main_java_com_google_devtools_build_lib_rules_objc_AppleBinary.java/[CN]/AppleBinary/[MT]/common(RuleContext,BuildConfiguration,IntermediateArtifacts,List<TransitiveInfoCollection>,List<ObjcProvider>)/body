{
  CompilationArtifacts compilationArtifacts=CompilationSupport.compilationArtifacts(ruleContext,intermediateArtifacts);
  Optional<Artifact> protoLib;
  ObjcConfiguration objcConfiguration=buildConfiguration.getFragment(ObjcConfiguration.class);
  if (objcConfiguration.experimentalAutoTopLevelUnionObjCProtos()) {
    ProtoSupport protoSupport=new ProtoSupport(ruleContext,TargetType.LINKING_TARGET);
    protoLib=protoSupport.getCommon().getCompiledArchive();
  }
 else {
    protoLib=Optional.absent();
  }
  return new ObjcCommon.Builder(ruleContext,buildConfiguration).setCompilationAttributes(CompilationAttributes.Builder.fromRuleContext(ruleContext).build()).setCompilationArtifacts(compilationArtifacts).setResourceAttributes(new ResourceAttributes(ruleContext)).addDefines(ruleContext.getTokenizedStringListAttr("defines")).addDeps(propagatedDeps).addDepObjcProviders(ruleContext.getPrerequisites("bundles",Mode.TARGET,ObjcProvider.class)).addNonPropagatedDepObjcProviders(nonPropagatedObjcDeps).setIntermediateArtifacts(intermediateArtifacts).setAlwayslink(false).setLinkedBinary(intermediateArtifacts.strippedSingleArchitectureBinary()).addExtraImportLibraries(protoLib.asSet()).build();
}
