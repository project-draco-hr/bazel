{
  String baseName=archivePath.getBaseName();
  if (targetKind.startsWith(HttpJarRule.NAME + " ")) {
    if (baseName.endsWith(".jar")) {
      return new JarDecompressor(targetKind,targetName,archivePath,repositoryPath);
    }
 else {
      throw new DecompressorException(String.format("Expected %s %s to create file with a .jar suffix (got %s)",HttpJarRule.NAME,targetName,archivePath));
    }
  }
  if (targetKind.startsWith(HttpArchiveRule.NAME + " ") || targetKind.startsWith(NewHttpArchiveRule.NAME + " ")) {
    if (baseName.endsWith(".zip") || baseName.endsWith(".jar")) {
      return new ZipDecompressor(archivePath);
    }
 else {
      throw new DecompressorException(String.format("Expected %s %s to create file with a .zip or .jar suffix (got %s)",HttpArchiveRule.NAME,targetName,archivePath));
    }
  }
  throw new DecompressorException(String.format("No decompressor found for %s rule %s (got %s)",targetKind,targetName,archivePath));
}
