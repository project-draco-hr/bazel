{
  PathFragment ccRelativeName=semantics.getEffectiveSourcePath(sourceArtifact);
  if (cppConfiguration.isLipoOptimization()) {
    LipoContextProvider lipoProvider=Preconditions.checkNotNull(CppHelper.getLipoContextProvider(ruleContext),outputName);
    builder.setContext(CppCompilationContext.mergeForLipo(lipoProvider.getLipoContext(),context));
  }
  boolean generatePicAction=getGeneratePicActions();
  boolean generateNoPicAction=getGenerateNoPicActions();
  Preconditions.checkState(generatePicAction || generateNoPicAction);
  if (fake) {
    boolean usePic=!generateNoPicAction;
    createFakeSourceAction(outputName,result,env,builder,outputExtension,dependencyFileExtension,addObject,ccRelativeName,usePic);
  }
 else {
    if (generatePicAction) {
      CppCompileActionBuilder picBuilder=copyAsPicBuilder(builder,outputName,outputExtension,dependencyFileExtension);
      Artifact gcnoFile=isCodeCoverageEnabled() ? ruleContext.getRelatedArtifact(outputName,".pic.gcno") : null;
      if (gcnoFile != null) {
        picBuilder.setGcnoFile(gcnoFile);
      }
      setupBuildVariables(picBuilder,true,ccRelativeName,gcnoFile);
      if (maySaveTemps) {
        result.addTemps(createTempsActions(sourceArtifact,outputName,picBuilder,true,ccRelativeName));
      }
      semantics.finalizeCompileActionBuilder(ruleContext,picBuilder);
      CppCompileAction picAction=picBuilder.build();
      env.registerAction(picAction);
      if (addObject) {
        result.addPicObjectFile(picAction.getOutputFile());
      }
      if (picAction.getDwoFile() != null) {
        result.addPicDwoFile(picAction.getDwoFile());
      }
      if (cppConfiguration.isLipoContextCollector() && !generateNoPicAction) {
        result.addLipoScannable(picAction);
      }
    }
    if (generateNoPicAction) {
      builder.setOutputFile(ruleContext.getRelatedArtifact(outputName,outputExtension)).setDotdFile(outputName,dependencyFileExtension);
      Artifact gcnoFile=!cppConfiguration.isLipoOptimization() && isCodeCoverageEnabled() ? ruleContext.getRelatedArtifact(outputName,".gcno") : null;
      if (gcnoFile != null) {
        builder.setGcnoFile(gcnoFile);
      }
      setupBuildVariables(builder,false,ccRelativeName,gcnoFile);
      if (maySaveTemps) {
        result.addTemps(createTempsActions(sourceArtifact,outputName,builder,false,ccRelativeName));
      }
      semantics.finalizeCompileActionBuilder(ruleContext,builder);
      CppCompileAction compileAction=builder.build();
      env.registerAction(compileAction);
      Artifact objectFile=compileAction.getOutputFile();
      if (addObject) {
        result.addObjectFile(objectFile);
      }
      if (compileAction.getDwoFile() != null) {
        result.addDwoFile(compileAction.getDwoFile());
      }
      if (cppConfiguration.isLipoContextCollector()) {
        result.addLipoScannable(compileAction);
      }
    }
  }
}
