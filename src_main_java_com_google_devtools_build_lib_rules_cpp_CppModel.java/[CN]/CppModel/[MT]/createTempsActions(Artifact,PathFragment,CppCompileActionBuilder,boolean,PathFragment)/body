{
  if (!cppConfiguration.getSaveTemps()) {
    return ImmutableList.of();
  }
  String path=source.getFilename();
  boolean isCFile=CppFileTypes.C_SOURCE.matches(path);
  boolean isCppFile=CppFileTypes.CPP_SOURCE.matches(path);
  if (!isCFile && !isCppFile) {
    return ImmutableList.of();
  }
  String iExt=isCFile ? ".i" : ".ii";
  String picExt=usePic ? ".pic" : "";
  CppCompileActionBuilder dBuilder=new CppCompileActionBuilder(builder);
  dBuilder.setOutputFile(ruleContext.getRelatedArtifact(outputName,picExt + iExt)).setDotdFile(outputName,picExt + iExt + ".d");
  setupBuildVariables(dBuilder,usePic,ccRelativeName,source.getExecPath(),null,null);
  semantics.finalizeCompileActionBuilder(ruleContext,dBuilder);
  CppCompileAction dAction=dBuilder.build();
  ruleContext.registerAction(dAction);
  CppCompileActionBuilder sdBuilder=new CppCompileActionBuilder(builder);
  sdBuilder.setOutputFile(ruleContext.getRelatedArtifact(outputName,picExt + ".s")).setDotdFile(outputName,picExt + ".s.d");
  setupBuildVariables(sdBuilder,usePic,ccRelativeName,source.getExecPath(),null,null);
  semantics.finalizeCompileActionBuilder(ruleContext,sdBuilder);
  CppCompileAction sdAction=sdBuilder.build();
  ruleContext.registerAction(sdAction);
  return ImmutableList.of(dAction.getOutputFile(),sdAction.getOutputFile());
}
