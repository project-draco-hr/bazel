{
  if (this == o) {
    return this;
  }
  if (this == UNKNOWN || this.equals(SkylarkType.NONE)) {
    return o;
  }
  if (o == UNKNOWN || o.equals(SkylarkType.NONE)) {
    return this;
  }
  if (!type.equals(o.type)) {
    throw new EvalException(thisLoc,String.format("bad %s: %s is incompatible with %s at %s",name,EvalUtils.getDataTypeNameFromClass(o.getType()),EvalUtils.getDataTypeNameFromClass(this.getType()),originalLoc));
  }
  if (generic1.equals(Object.class)) {
    return o;
  }
  if (o.generic1.equals(Object.class)) {
    return this;
  }
  if (!generic1.equals(o.generic1)) {
    throw new EvalException(thisLoc,String.format("bad %s: incompatible generic variable types " + "%s with %s",name,EvalUtils.getDataTypeNameFromClass(o.generic1),EvalUtils.getDataTypeNameFromClass(this.generic1)));
  }
  return this;
}
