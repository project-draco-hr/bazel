'Unit tests for the XML-format help generated by the gflags.py module.'
__author__ = 'salcianu@google.com (Alex Salcianu)'
import string
import StringIO
import sys
import xml.dom.minidom
import xml.sax.saxutils
import gflags_googletest as googletest
import gflags
from flags_modules_for_testing import module_bar
EXPECTED_HELP_XML_START = '<?xml version="1.0"?>\n<AllFlags>\n  <program>gflags_helpxml_test.py</program>\n  <usage>%(usage_doc)s</usage>\n'
EXPECTED_HELP_XML_FOR_FLAGS_FROM_MAIN_MODULE = "  <flag>\n    <key>yes</key>\n    <file>%(main_module_name)s</file>\n    <name>allow_users</name>\n    <meaning>Users with access.</meaning>\n    <default>alice,bob</default>\n    <current>['alice', 'bob']</current>\n    <type>comma separated list of strings</type>\n    <list_separator>','</list_separator>\n  </flag>\n  <flag>\n    <key>yes</key>\n    <file>%(main_module_name)s</file>\n    <name>cc_version</name>\n    <meaning>&lt;stable|experimental&gt;: Compiler version to use.</meaning>\n    <default>stable</default>\n    <current>stable</current>\n    <type>string enum</type>\n    <enum_value>stable</enum_value>\n    <enum_value>experimental</enum_value>\n  </flag>\n  <flag>\n    <key>yes</key>\n    <file>%(main_module_name)s</file>\n    <name>cols</name>\n    <meaning>Columns to select;\n    repeat this option to specify a list of values</meaning>\n    <default>[5, 7, 23]</default>\n    <current>[5, 7, 23]</current>\n    <type>multi int</type>\n  </flag>\n  <flag>\n    <key>yes</key>\n    <file>%(main_module_name)s</file>\n    <name>dirs</name>\n    <meaning>Directories to create.</meaning>\n    <default>src libs bins</default>\n    <current>['src', 'libs', 'bins']</current>\n    <type>whitespace separated list of strings</type>\n%(whitespace_separators)s  </flag>\n  <flag>\n    <key>yes</key>\n    <file>%(main_module_name)s</file>\n    <name>file_path</name>\n    <meaning>A test string flag.</meaning>\n    <default>/path/to/my/dir</default>\n    <current>/path/to/my/dir</current>\n    <type>string</type>\n  </flag>\n  <flag>\n    <key>yes</key>\n    <file>%(main_module_name)s</file>\n    <name>files</name>\n    <meaning>Files to process.</meaning>\n    <default>a.cc,a.h,archive/old.zip</default>\n    <current>['a.cc', 'a.h', 'archive/old.zip']</current>\n    <type>comma separated list of strings</type>\n    <list_separator>','</list_separator>\n  </flag>\n  <flag>\n    <key>yes</key>\n    <file>%(main_module_name)s</file>\n    <name>index</name>\n    <meaning>An integer flag</meaning>\n    <default>17</default>\n    <current>17</current>\n    <type>int</type>\n  </flag>\n  <flag>\n    <key>yes</key>\n    <file>%(main_module_name)s</file>\n    <name>nb_iters</name>\n    <meaning>An integer flag</meaning>\n    <default>17</default>\n    <current>17</current>\n    <type>int</type>\n    <lower_bound>5</lower_bound>\n    <upper_bound>27</upper_bound>\n  </flag>\n  <flag>\n    <key>yes</key>\n    <file>%(main_module_name)s</file>\n    <name>to_delete</name>\n    <meaning>Files to delete;\n    repeat this option to specify a list of values</meaning>\n    <default>['a.cc', 'b.h']</default>\n    <current>['a.cc', 'b.h']</current>\n    <type>multi string</type>\n  </flag>\n  <flag>\n    <key>yes</key>\n    <file>%(main_module_name)s</file>\n    <name>use_hack</name>\n    <meaning>Use performance hack</meaning>\n    <default>false</default>\n    <current>false</current>\n    <type>bool</type>\n  </flag>\n"
EXPECTED_HELP_XML_FOR_FLAGS_FROM_MODULE_BAR = '  <flag>\n    <file>%(module_bar_name)s</file>\n    <name>tmod_bar_t</name>\n    <meaning>Sample int flag.</meaning>\n    <default>4</default>\n    <current>4</current>\n    <type>int</type>\n  </flag>\n  <flag>\n    <key>yes</key>\n    <file>%(module_bar_name)s</file>\n    <name>tmod_bar_u</name>\n    <meaning>Sample int flag.</meaning>\n    <default>5</default>\n    <current>5</current>\n    <type>int</type>\n  </flag>\n  <flag>\n    <file>%(module_bar_name)s</file>\n    <name>tmod_bar_v</name>\n    <meaning>Sample int flag.</meaning>\n    <default>6</default>\n    <current>6</current>\n    <type>int</type>\n  </flag>\n  <flag>\n    <file>%(module_bar_name)s</file>\n    <name>tmod_bar_x</name>\n    <meaning>Boolean flag.</meaning>\n    <default>true</default>\n    <current>true</current>\n    <type>bool</type>\n  </flag>\n  <flag>\n    <file>%(module_bar_name)s</file>\n    <name>tmod_bar_y</name>\n    <meaning>String flag.</meaning>\n    <default>default</default>\n    <current>default</current>\n    <type>string</type>\n  </flag>\n  <flag>\n    <key>yes</key>\n    <file>%(module_bar_name)s</file>\n    <name>tmod_bar_z</name>\n    <meaning>Another boolean flag from module bar.</meaning>\n    <default>false</default>\n    <current>false</current>\n    <type>bool</type>\n  </flag>\n'
EXPECTED_HELP_XML_END = '</AllFlags>\n'
if (__name__ == '__main__'):
    googletest.main()
