'Can be used to point environment variable to hermetic Go toolset.\n\nUsage (on linux and mac):\n$ eval `./env.py`\n$ go version\n\nOr it can be used to wrap a command:\n\n$ ./env.py go version\n'
assert (__name__ == '__main__')
import imp
import os
import subprocess
import sys
bootstrap = imp.load_source('bootstrap', os.path.join(os.path.dirname(__file__), 'bootstrap.py'))
old = os.environ.copy()
new = bootstrap.prepare_go_environ()
if (len(sys.argv) == 1):
    for (key, value) in sorted(new.iteritems()):
        if (old.get(key) != value):
            print ('export %s="%s"' % (key, value))
else:
    exe = sys.argv[1]
    if (exe == 'python'):
        exe = sys.executable
    elif (os.sep not in exe):
        exe = bootstrap.find_executable(exe, [bootstrap.WORKSPACE])
    sys.exit(subprocess.call(([exe] + sys.argv[2:]), env=new))
