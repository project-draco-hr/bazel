{
  reporter.removeHandler(failFastHandler);
  scratch.file("pkg/BUILD","sh_library(name = 'x', deps = ['//pkg2:q/sub'])");
  scratch.file("pkg2/BUILD","sh_library(name = 'q/sub')");
  assertLabelsVisited(ImmutableSet.of("//pkg:x","//pkg2:q/sub"),ImmutableSet.of("//pkg:x"),!EXPECT_ERROR,!KEEP_GOING);
  scratch.file("pkg2/q/BUILD");
  syncPackages();
  EventCollector warningCollector=new EventCollector(EventKind.WARNING);
  reporter.addHandler(warningCollector);
  assertLabelsVisitedWithErrors(ImmutableSet.of("//pkg:x"),ImmutableSet.of("//pkg:x"));
  assertContainsEvent("Label '//pkg2:q/sub' crosses boundary of subpackage 'pkg2/q'");
  assertContainsEvent("no such target '//pkg2:q/sub'");
  Collection<Event> warnings=Lists.newArrayList(warningCollector);
  assertLabelsVisitedWithErrors(ImmutableSet.of("//pkg:x"),ImmutableSet.of("//pkg:x"));
  assertContainsEvent("Label '//pkg2:q/sub' crosses boundary of subpackage 'pkg2/q'");
  return warnings;
}
