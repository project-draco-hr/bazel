{
  String ruleClassName=ast.getFunction().getName();
  try {
    if (ruleClassName.startsWith("_")) {
      throw new EvalException(ast.getLocation(),"Invalid rule class name '" + ruleClassName + "', cannot be private");
    }
    RuleClass ruleClass=builder.build(ruleClassName);
    PackageContext context=PackageFactory.getContext(env,ast);
    @SuppressWarnings("unchecked") Map<String,Object> attributeValues=(Map<String,Object>)args[0];
    return context.getBuilder().externalPackageData().createAndAddRepositoryRule(context.getBuilder(),ruleClass,null,attributeValues,ast);
  }
 catch (  InvalidRuleException|NameConflictException|LabelSyntaxException e) {
    throw new EvalException(ast.getLocation(),e.getMessage());
  }
}
