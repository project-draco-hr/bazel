{
  InMemoryNodeEntry entry=new InMemoryNodeEntry();
  ImmutableList<ImmutableSet<SkyKey>> groupedDirectDeps=ImmutableList.of(ImmutableSet.of(key("1A")),ImmutableSet.of(key("2A"),key("2B")),ImmutableSet.of(key("3A"),key("3B"),key("3C")),ImmutableSet.of(key("4A"),key("4B"),key("4C"),key("4D")));
  for (  Set<SkyKey> depGroup : groupedDirectDeps) {
    entry.addTemporaryDirectDeps(GroupedListHelper.create(depGroup));
    for (int i=0; i < depGroup.size(); i++) {
      entry.signalDep();
    }
  }
  entry.setValue(new IntegerValue(42),new IntVersion(42L));
  int i=0;
  assertThat(Iterables.size(entry.getGroupedDirectDeps())).isEqualTo(groupedDirectDeps.size());
  for (  Iterable<SkyKey> depGroup : entry.getGroupedDirectDeps()) {
    assertThat(depGroup).containsExactlyElementsIn(groupedDirectDeps.get(i++));
  }
}
