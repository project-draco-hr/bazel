{
  NodeEntry entry=new InMemoryNodeEntry();
  entry.addReverseDepAndCheckIfDone(null);
  SkyKey dep=key("dep");
  addTemporaryDirectDep(entry,dep);
  entry.signalDep();
  setValue(entry,new IntegerValue(5),null,0L);
  entry.markDirty(false);
  entry.addReverseDepAndCheckIfDone(null);
  assertEquals(NodeEntry.DirtyState.CHECK_DEPENDENCIES,entry.getDirtyState());
  entry.addReverseDepAndCheckIfDone(null);
  assertThat(entry.getNextDirtyDirectDeps()).containsExactly(dep);
  addTemporaryDirectDep(entry,dep);
  entry.signalDep(IntVersion.of(1L));
  assertEquals(NodeEntry.DirtyState.NEEDS_REBUILDING,entry.getDirtyState());
  assertThat(entry.getTemporaryDirectDeps()).containsExactly(dep);
  assertThat(entry.markRebuildingAndGetAllRemainingDirtyDirectDeps()).isEmpty();
  setValue(entry,new IntegerValue(5),null,1L);
  assertTrue(entry.isDone());
  assertEquals(IntVersion.of(0L),entry.getVersion());
}
