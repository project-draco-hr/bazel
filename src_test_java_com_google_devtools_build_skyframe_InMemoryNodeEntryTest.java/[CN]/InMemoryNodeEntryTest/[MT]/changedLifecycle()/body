{
  NodeEntry entry=new InMemoryNodeEntry();
  entry.addReverseDepAndCheckIfDone(null);
  SkyKey dep=key("dep");
  addTemporaryDirectDep(entry,dep);
  entry.signalDep();
  setValue(entry,new SkyValue(){
  }
,null,0L);
  assertFalse(entry.isDirty());
  assertTrue(entry.isDone());
  entry.markDirty(true);
  assertTrue(entry.isDirty());
  assertTrue(entry.isChanged());
  assertFalse(entry.isDone());
  assertTrue(entry.isReady());
  SkyKey parent=key("parent");
  entry.addReverseDepAndCheckIfDone(parent);
  assertEquals(NodeEntry.DirtyState.NEEDS_REBUILDING,entry.getDirtyState());
  assertTrue(entry.isReady());
  assertThat(entry.getTemporaryDirectDeps()).isEmpty();
  assertThat(entry.markRebuildingAndGetAllRemainingDirtyDirectDeps()).containsExactly(dep);
  assertThat(setValue(entry,new SkyValue(){
  }
,null,1L)).containsExactly(parent);
  assertEquals(IntVersion.of(1L),entry.getVersion());
}
