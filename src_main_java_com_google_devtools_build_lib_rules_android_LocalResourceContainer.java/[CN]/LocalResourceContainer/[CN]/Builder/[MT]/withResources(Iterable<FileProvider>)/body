{
  PathFragment lastResourceDir=null;
  Artifact lastFile=null;
  for (  FileProvider target : targets) {
    for (    Artifact file : target.getFilesToBuild()) {
      PathFragment packageFragment=file.getArtifactOwner().getLabel().getPackageIdentifier().getPathFragment();
      PathFragment packageRelativePath=file.getRootRelativePath().relativeTo(packageFragment);
      PathFragment resourceDir=findResourceDir(file);
      if (lastResourceDir == null || resourceDir.equals(lastResourceDir)) {
        resourceRoots.add(trimTail(file.getExecPath(),makeRelativeTo(resourceDir,packageRelativePath)));
      }
 else {
        throw new InvalidResourcePath(String.format("'%s' (generated by '%s') is not in the same directory '%s' (derived from %s)." + " All resources must share a common directory.",file.getRootRelativePath(),file.getArtifactOwner().getLabel(),lastResourceDir,lastFile.getRootRelativePath()));
      }
      resources.add(file);
      lastFile=file;
      lastResourceDir=resourceDir;
    }
  }
  return this;
}
