def _ConvertAnyMessage(value, message):
    'Convert a JSON representation into Any message.'
    if (isinstance(value, dict) and (not value)):
        return
    try:
        type_url = value['@type']
    except KeyError:
        raise ParseError('@type is missing when parsing any message.')
    sub_message = _CreateMessageFromTypeUrl(type_url)
    message_descriptor = sub_message.DESCRIPTOR
    full_name = message_descriptor.full_name
    if _IsWrapperMessage(message_descriptor):
        _ConvertWrapperMessage(value['value'], sub_message)
    elif (full_name in _WKTJSONMETHODS):
        _WKTJSONMETHODS[full_name][1](value['value'], sub_message)
    else:
        del value['@type']
        _ConvertFieldValuePair(value, sub_message)
    message.value = sub_message.SerializeToString()
    message.type_url = type_url
