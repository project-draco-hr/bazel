{
  Label label=ruleContext.getLabel();
  EnvironmentGroup group;
  try {
    group=ConstraintSemantics.getEnvironmentGroup(ruleContext.getRule());
  }
 catch (  ConstraintSemantics.EnvironmentLookupException e) {
    ruleContext.ruleError(e.getMessage());
    return null;
  }
  EnvironmentCollection env=new EnvironmentCollection.Builder().put(group,label).build();
  return new RuleConfiguredTargetBuilder(ruleContext).addProvider(SupportedEnvironmentsProvider.class,new SupportedEnvironments(env,env)).addProvider(RunfilesProvider.class,RunfilesProvider.EMPTY).add(FileProvider.class,new FileProvider(ruleContext.getLabel(),NestedSetBuilder.<Artifact>emptySet(Order.STABLE_ORDER))).add(FilesToRunProvider.class,FilesToRunProvider.EMPTY).build();
}
