{
  if (usingClass.equals(definitionClass)) {
    return 0;
  }
  Map<Class<? extends RuleDefinition>,Integer> visited=new HashMap<>();
  LinkedList<Class<? extends RuleDefinition>> toVisit=new LinkedList<>();
  visited.put(usingClass,0);
  toVisit.add(usingClass);
  do {
    Class<? extends RuleDefinition> ancestor=toVisit.removeFirst();
    visitAncestor(ancestor,visited,toVisit,ruleClassProvider);
    if (ancestor.equals(definitionClass)) {
      return visited.get(ancestor);
    }
  }
 while (!toVisit.isEmpty());
  return -1;
}
