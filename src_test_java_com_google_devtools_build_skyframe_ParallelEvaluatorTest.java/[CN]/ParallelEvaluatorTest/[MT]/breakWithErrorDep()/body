{
  graph=new InMemoryGraph();
  SkyKey errorKey=GraphTester.toSkyKey("my_error_value");
  tester.getOrCreate(errorKey).setHasError(true);
  tester.set("after",new StringValue("after"));
  SkyKey parentKey=GraphTester.toSkyKey("parent");
  tester.getOrCreate(parentKey).addErrorDependency(errorKey,new StringValue("recovered")).setComputedValue(CONCATENATE).addDependency("after");
  EvaluationResult<StringValue> result=eval(false,ImmutableList.of(parentKey));
  assertThat(result.keyNames()).isEmpty();
  Map.Entry<SkyKey,ErrorInfo> error=Iterables.getOnlyElement(result.errorMap().entrySet());
  assertEquals(parentKey,error.getKey());
  assertThat(error.getValue().getRootCauses()).containsExactly(errorKey);
  result=eval(true,ImmutableList.of(parentKey));
  assertThat(result.errorMap()).isEmpty();
  assertEquals("recoveredafter",result.get(parentKey).getValue());
}
