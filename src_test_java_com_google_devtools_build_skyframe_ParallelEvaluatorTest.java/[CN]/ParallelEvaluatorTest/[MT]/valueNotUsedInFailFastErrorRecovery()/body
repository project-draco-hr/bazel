{
  graph=new InMemoryGraph();
  SkyKey topKey=GraphTester.toSkyKey("top");
  SkyKey recoveryKey=GraphTester.toSkyKey("midRecovery");
  SkyKey badKey=GraphTester.toSkyKey("bad");
  tester.getOrCreate(topKey).addDependency(recoveryKey).setComputedValue(CONCATENATE);
  tester.getOrCreate(recoveryKey).addErrorDependency(badKey,new StringValue("i recovered")).setComputedValue(CONCATENATE);
  tester.getOrCreate(badKey).setHasError(true);
  EvaluationResult<SkyValue> result=eval(true,ImmutableList.of(recoveryKey));
  assertThat(result.errorMap()).isEmpty();
  assertThatEvaluationResult(result).hasNoError();
  assertEquals(new StringValue("i recovered"),result.get(recoveryKey));
  result=eval(false,ImmutableList.of(topKey));
  assertThatEvaluationResult(result).hasError();
  assertThat(result.keyNames()).isEmpty();
  assertEquals(1,result.errorMap().size());
  assertNotNull(result.getError(topKey).getException());
}
