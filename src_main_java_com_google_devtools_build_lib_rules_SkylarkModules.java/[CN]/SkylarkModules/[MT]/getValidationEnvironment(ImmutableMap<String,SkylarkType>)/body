{
  Map<SkylarkType,Map<String,SkylarkType>> builtIn=new HashMap<>();
  Map<String,SkylarkType> global=new HashMap<>();
  builtIn.put(SkylarkType.GLOBAL,global);
  collectSkylarkTypesFromFields(Environment.class,builtIn);
  for (  Class<?> moduleClass : MODULES) {
    if (moduleClass.isAnnotationPresent(SkylarkModule.class)) {
      global.put(moduleClass.getAnnotation(SkylarkModule.class).name(),SkylarkType.of(moduleClass));
    }
  }
  global.put("native",SkylarkType.UNKNOWN);
  MethodLibrary.setupValidationEnvironment(builtIn);
  for (  Class<?> module : MODULES) {
    collectSkylarkTypesFromFields(module,builtIn);
  }
  global.putAll(extraObjects);
  return new ValidationEnvironment(CollectionUtils.toImmutable(builtIn));
}
