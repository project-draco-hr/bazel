def testPositiveInfinity(self, message_module):
    if (message_module is unittest_pb2):
        golden_data = ']\x00\x00\x80\x7fa\x00\x00\x00\x00\x00\x00\xf0\x7f\xcd\x02\x00\x00\x80\x7f\xd1\x02\x00\x00\x00\x00\x00\x00\xf0\x7f'
    else:
        golden_data = ']\x00\x00\x80\x7fa\x00\x00\x00\x00\x00\x00\xf0\x7f\xca\x02\x04\x00\x00\x80\x7f\xd2\x02\x08\x00\x00\x00\x00\x00\x00\xf0\x7f'
    golden_message = message_module.TestAllTypes()
    golden_message.ParseFromString(golden_data)
    self.assertTrue(IsPosInf(golden_message.optional_float))
    self.assertTrue(IsPosInf(golden_message.optional_double))
    self.assertTrue(IsPosInf(golden_message.repeated_float[0]))
    self.assertTrue(IsPosInf(golden_message.repeated_double[0]))
    self.assertEqual(golden_data, golden_message.SerializeToString())
