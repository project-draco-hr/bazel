def testRepeatedCompositeFieldSortArguments(self, message_module):
    'Check sorting a repeated composite field using list.sort() arguments.'
    message = message_module.TestAllTypes()
    get_bb = operator.attrgetter('bb')
    cmp_bb = (lambda a, b: cmp(a.bb, b.bb))
    message.repeated_nested_message.add().bb = 1
    message.repeated_nested_message.add().bb = 3
    message.repeated_nested_message.add().bb = 2
    message.repeated_nested_message.add().bb = 6
    message.repeated_nested_message.add().bb = 5
    message.repeated_nested_message.add().bb = 4
    message.repeated_nested_message.sort(key=get_bb)
    self.assertEqual([k.bb for k in message.repeated_nested_message], [1, 2, 3, 4, 5, 6])
    message.repeated_nested_message.sort(key=get_bb, reverse=True)
    self.assertEqual([k.bb for k in message.repeated_nested_message], [6, 5, 4, 3, 2, 1])
    if (sys.version_info >= (3,)):
        return
    message.repeated_nested_message.sort(sort_function=cmp_bb)
    self.assertEqual([k.bb for k in message.repeated_nested_message], [1, 2, 3, 4, 5, 6])
    message.repeated_nested_message.sort(cmp=cmp_bb, reverse=True)
    self.assertEqual([k.bb for k in message.repeated_nested_message], [6, 5, 4, 3, 2, 1])
