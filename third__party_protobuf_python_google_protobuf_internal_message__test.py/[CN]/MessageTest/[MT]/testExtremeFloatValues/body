def testExtremeFloatValues(self, message_module):
    message = message_module.TestAllTypes()
    kMostPosExponentNoSigBits = math.pow(2, 127)
    message.optional_float = kMostPosExponentNoSigBits
    message.ParseFromString(message.SerializeToString())
    self.assertTrue((message.optional_float == kMostPosExponentNoSigBits))
    kMostPosExponentOneSigBit = (1.5 * math.pow(2, 127))
    message.optional_float = kMostPosExponentOneSigBit
    message.ParseFromString(message.SerializeToString())
    self.assertTrue((message.optional_float == kMostPosExponentOneSigBit))
    message.optional_float = (- kMostPosExponentNoSigBits)
    message.ParseFromString(message.SerializeToString())
    self.assertTrue((message.optional_float == (- kMostPosExponentNoSigBits)))
    message.optional_float = (- kMostPosExponentOneSigBit)
    message.ParseFromString(message.SerializeToString())
    self.assertTrue((message.optional_float == (- kMostPosExponentOneSigBit)))
    kMostNegExponentNoSigBits = math.pow(2, (-127))
    message.optional_float = kMostNegExponentNoSigBits
    message.ParseFromString(message.SerializeToString())
    self.assertTrue((message.optional_float == kMostNegExponentNoSigBits))
    kMostNegExponentOneSigBit = (1.5 * math.pow(2, (-127)))
    message.optional_float = kMostNegExponentOneSigBit
    message.ParseFromString(message.SerializeToString())
    self.assertTrue((message.optional_float == kMostNegExponentOneSigBit))
    message.optional_float = (- kMostNegExponentNoSigBits)
    message.ParseFromString(message.SerializeToString())
    self.assertTrue((message.optional_float == (- kMostNegExponentNoSigBits)))
    message.optional_float = (- kMostNegExponentOneSigBit)
    message.ParseFromString(message.SerializeToString())
    self.assertTrue((message.optional_float == (- kMostNegExponentOneSigBit)))
