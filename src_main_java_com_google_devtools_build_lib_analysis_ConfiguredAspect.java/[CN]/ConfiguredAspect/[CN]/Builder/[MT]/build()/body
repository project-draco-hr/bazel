{
  if (!outputGroupBuilders.isEmpty()) {
    ImmutableMap.Builder<String,NestedSet<Artifact>> outputGroups=ImmutableMap.builder();
    for (    Map.Entry<String,NestedSetBuilder<Artifact>> entry : outputGroupBuilders.entrySet()) {
      outputGroups.put(entry.getKey(),entry.getValue().build());
    }
    if (providers.contains(OutputGroupProvider.class)) {
      throw new IllegalStateException("OutputGroupProvider was provided explicitly; do not use addOutputGroup");
    }
    addProvider(new OutputGroupProvider(outputGroups.build()));
  }
  ImmutableMap<String,Object> skylarkProvidersMap=skylarkProviderBuilder.build();
  if (!skylarkProvidersMap.isEmpty()) {
    providers.add(new SkylarkProviders(skylarkProvidersMap,ImmutableMap.<Key,SkylarkClassObject>of()));
  }
  addProvider(createExtraActionProvider(ImmutableSet.<ActionAnalysisMetadata>of(),ruleContext));
  return new ConfiguredAspect(name,providers.build());
}
