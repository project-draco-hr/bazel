{
  return new Callback<T>(){
    @Override public void process(    Iterable<T> partialResult) throws QueryException, InterruptedException {
      Iterable<T> filter=Iterables.filter(partialResult,retainIfTrue);
      if (!Iterables.isEmpty(filter)) {
        parentCallback.process(filter);
      }
    }
    @Override public String toString(){
      return "filtered parentCallback of : " + retainIfTrue;
    }
  }
;
}
