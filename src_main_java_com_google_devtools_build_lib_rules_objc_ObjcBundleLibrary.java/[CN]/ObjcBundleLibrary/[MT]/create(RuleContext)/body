{
  ObjcCommon common=common(ruleContext);
  OptionsProvider optionsProvider=optionsProvider(ruleContext);
  Bundling bundling=bundling(ruleContext,common,optionsProvider);
  XcodeProvider.Builder xcodeProviderBuilder=new XcodeProvider.Builder();
  NestedSetBuilder<Artifact> filesToBuild=NestedSetBuilder.stableOrder();
  new BundleSupport(ruleContext,bundling).registerActions(common.getObjcProvider()).validateResources(common.getObjcProvider()).addXcodeSettings(xcodeProviderBuilder);
  new ResourceSupport(ruleContext).validateAttributes().addXcodeSettings(xcodeProviderBuilder);
  new XcodeSupport(ruleContext).addFilesToBuild(filesToBuild).addXcodeSettings(xcodeProviderBuilder,common.getObjcProvider(),BUNDLE).addDependencies(xcodeProviderBuilder,new Attribute("bundles",Mode.TARGET)).registerActions(xcodeProviderBuilder.build());
  ObjcProvider nestedBundleProvider=new ObjcProvider.Builder().add(NESTED_BUNDLE,bundling).build();
  return ObjcRuleClasses.ruleConfiguredTarget(ruleContext,filesToBuild.build()).addProvider(XcodeProvider.class,xcodeProviderBuilder.build()).addProvider(ObjcProvider.class,nestedBundleProvider).build();
}
