{
  NewRepositoryBuildFileHandler buildFileHandler=new NewRepositoryBuildFileHandler(getWorkspace());
  if (!buildFileHandler.prepareBuildFile(rule,env)) {
    return null;
  }
  try {
    FileSystemUtils.createDirectoryAndParents(outputDirectory);
  }
 catch (  IOException e) {
    throw new RepositoryFunctionException(new IOException("Could not create directory for " + rule.getName() + ": "+ e.getMessage()),Transience.TRANSIENT);
  }
  Path downloadedPath=HttpDownloader.download(rule,outputDirectory,env.getListener());
  Path decompressed;
  AggregatingAttributeMapper mapper=AggregatingAttributeMapper.of(rule);
  String prefix=null;
  if (mapper.has("strip_prefix",Type.STRING) && !mapper.get("strip_prefix",Type.STRING).isEmpty()) {
    prefix=mapper.get("strip_prefix",Type.STRING);
  }
  decompressed=DecompressorValue.decompress(DecompressorDescriptor.builder().setTargetKind(rule.getTargetKind()).setTargetName(rule.getName()).setArchivePath(downloadedPath).setRepositoryPath(outputDirectory).setPrefix(prefix).build());
  createWorkspaceFile(decompressed,rule);
  buildFileHandler.finishBuildFile(outputDirectory);
  return RepositoryDirectoryValue.create(outputDirectory);
}
