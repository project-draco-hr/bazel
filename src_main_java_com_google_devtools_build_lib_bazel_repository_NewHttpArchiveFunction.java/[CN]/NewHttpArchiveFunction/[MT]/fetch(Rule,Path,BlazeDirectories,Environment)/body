{
  NewRepositoryBuildFileHandler buildFileHandler=new NewRepositoryBuildFileHandler(directories.getWorkspace());
  if (!buildFileHandler.prepareBuildFile(rule,env)) {
    return null;
  }
  try {
    FileSystemUtils.createDirectoryAndParents(outputDirectory);
  }
 catch (  IOException e) {
    throw new RepositoryFunctionException(new IOException("Could not create directory for " + rule.getName() + ": "+ e.getMessage()),Transience.TRANSIENT);
  }
  Path downloadedPath=HttpDownloader.download(rule,outputDirectory,env.getListener(),clientEnvironment);
  Path decompressed;
  WorkspaceAttributeMapper mapper=WorkspaceAttributeMapper.of(rule);
  String prefix=null;
  if (mapper.isAttributeValueExplicitlySpecified("strip_prefix")) {
    try {
      prefix=mapper.get("strip_prefix",Type.STRING);
    }
 catch (    EvalException e) {
      throw new RepositoryFunctionException(e,Transience.PERSISTENT);
    }
  }
  decompressed=DecompressorValue.decompress(DecompressorDescriptor.builder().setTargetKind(rule.getTargetKind()).setTargetName(rule.getName()).setArchivePath(downloadedPath).setRepositoryPath(outputDirectory).setPrefix(prefix).build());
  createWorkspaceFile(decompressed,rule.getTargetKind(),rule.getName());
  buildFileHandler.finishBuildFile(outputDirectory);
  return RepositoryDirectoryValue.create(outputDirectory);
}
