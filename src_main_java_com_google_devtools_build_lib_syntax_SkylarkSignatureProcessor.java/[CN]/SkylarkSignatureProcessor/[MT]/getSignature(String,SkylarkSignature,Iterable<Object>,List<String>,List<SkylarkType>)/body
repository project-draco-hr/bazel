{
  Preconditions.checkArgument(name.equals(annotation.name()),"%s != %s",name,annotation.name());
  ArrayList<Parameter<Object,SkylarkType>> paramList=new ArrayList<>();
  HashMap<String,SkylarkType> enforcedTypes=enforcedTypesList == null ? null : new HashMap<String,SkylarkType>();
  HashMap<String,String> doc=new HashMap<>();
  boolean documented=annotation.documented();
  if (annotation.doc().isEmpty() && documented) {
    throw new RuntimeException(String.format("function %s is undocumented",name));
  }
  Iterator<Object> defaultValuesIterator=defaultValues == null ? null : defaultValues.iterator();
  try {
    boolean named=false;
    for (    Param param : annotation.parameters()) {
      boolean mandatory=param.defaultValue() != null && param.defaultValue().isEmpty();
      Object defaultValue=mandatory ? null : getDefaultValue(param,defaultValuesIterator);
      if (param.named() && !param.positional() && !named) {
        named=true;
        @Nullable Param starParam=null;
        if (!annotation.extraPositionals().name().isEmpty()) {
          starParam=annotation.extraPositionals();
        }
        paramList.add(getParameter(name,starParam,enforcedTypes,doc,documented,false,true,false,null));
      }
      paramList.add(getParameter(name,param,enforcedTypes,doc,documented,mandatory,false,false,defaultValue));
    }
    if (!annotation.extraPositionals().name().isEmpty() && !named) {
      paramList.add(getParameter(name,annotation.extraPositionals(),enforcedTypes,doc,documented,false,true,false,null));
    }
    if (!annotation.extraKeywords().name().isEmpty()) {
      paramList.add(getParameter(name,annotation.extraKeywords(),enforcedTypes,doc,documented,false,false,true,null));
    }
    FunctionSignature.WithValues<Object,SkylarkType> signature=FunctionSignature.WithValues.<Object,SkylarkType>of(paramList);
    for (    String paramName : signature.getSignature().getNames()) {
      if (enforcedTypesList != null) {
        enforcedTypesList.add(enforcedTypes.get(paramName));
      }
      if (paramDoc != null) {
        paramDoc.add(doc.get(paramName));
      }
    }
    return signature;
  }
 catch (  FunctionSignature.SignatureException e) {
    throw new RuntimeException(String.format("Invalid signature while configuring BuiltinFunction %s",name),e);
  }
}
