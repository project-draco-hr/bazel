{
  Preconditions.checkArgument(name.equals(annotation.name()),"%s != %s",name,annotation.name());
  ArrayList<Parameter<Object,SkylarkType>> paramList=new ArrayList<>();
  HashMap<String,SkylarkType> enforcedTypes=enforcedTypesList == null ? null : new HashMap<String,SkylarkType>();
  HashMap<String,String> doc=new HashMap<>();
  boolean documented=annotation.documented();
  if (annotation.doc().isEmpty() && documented) {
    throw new RuntimeException(String.format("function %s is undocumented",name));
  }
  Iterator<Object> defaultValuesIterator=defaultValues == null ? null : defaultValues.iterator();
  try {
    for (    Param param : annotation.mandatoryPositionals()) {
      paramList.add(getParameter(name,param,enforcedTypes,doc,documented,true,false,false,null));
    }
    for (    Param param : annotation.optionalPositionals()) {
      paramList.add(getParameter(name,param,enforcedTypes,doc,documented,false,false,false,getDefaultValue(param,defaultValuesIterator)));
    }
    if (annotation.extraPositionals().length > 0 || annotation.optionalNamedOnly().length > 0 || annotation.mandatoryNamedOnly().length > 0) {
      @Nullable Param starParam=null;
      if (annotation.extraPositionals().length > 0) {
        Preconditions.checkArgument(annotation.extraPositionals().length == 1);
        starParam=annotation.extraPositionals()[0];
      }
      paramList.add(getParameter(name,starParam,enforcedTypes,doc,documented,false,true,false,null));
    }
    for (    Param param : annotation.mandatoryNamedOnly()) {
      paramList.add(getParameter(name,param,enforcedTypes,doc,documented,true,false,false,null));
    }
    for (    Param param : annotation.optionalNamedOnly()) {
      paramList.add(getParameter(name,param,enforcedTypes,doc,documented,false,false,false,getDefaultValue(param,defaultValuesIterator)));
    }
    if (annotation.extraKeywords().length > 0) {
      Preconditions.checkArgument(annotation.extraKeywords().length == 1);
      paramList.add(getParameter(name,annotation.extraKeywords()[0],enforcedTypes,doc,documented,false,false,true,null));
    }
    FunctionSignature.WithValues<Object,SkylarkType> signature=FunctionSignature.WithValues.<Object,SkylarkType>of(paramList);
    for (    String paramName : signature.getSignature().getNames()) {
      if (enforcedTypesList != null) {
        enforcedTypesList.add(enforcedTypes.get(paramName));
      }
      if (paramDoc != null) {
        paramDoc.add(doc.get(paramName));
      }
    }
    return signature;
  }
 catch (  FunctionSignature.SignatureException e) {
    throw new RuntimeException(String.format("Invalid signature while configuring BuiltinFunction %s",name),e);
  }
}
