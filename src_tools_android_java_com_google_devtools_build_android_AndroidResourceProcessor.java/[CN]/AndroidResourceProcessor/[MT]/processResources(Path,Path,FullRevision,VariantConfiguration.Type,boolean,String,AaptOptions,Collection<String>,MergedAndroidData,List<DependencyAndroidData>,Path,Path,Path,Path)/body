{
  List<SymbolFileProvider> libraries=new ArrayList<>();
  List<String> packages=new ArrayList<>();
  for (  DependencyAndroidData dataDep : dependencyData) {
    SymbolFileProvider library=dataDep.asSymbolFileProvider();
    libraries.add(library);
    packages.add(VariantConfiguration.getManifestPackage(library.getManifest()));
  }
  Path androidManifest=primaryData.getManifest();
  Path resourceDir=primaryData.getResourceDir();
  Path assetsDir=primaryData.getAssetDir();
  AaptCommandBuilder commandBuilder=new AaptCommandBuilder(aapt,buildToolsVersion,variantType,"package").maybeAdd("-v",stdLogger.getLevel() == StdLogger.Level.VERBOSE).add("-f").add("--no-crunch").maybeAdd("--no-version-vectors",new FullRevision(23)).add("-I",androidJar).add("-M",androidManifest.toAbsolutePath()).maybeAdd("-S",resourceDir,Files.isDirectory(resourceDir)).maybeAdd("-A",assetsDir,Files.isDirectory(assetsDir)).maybeAdd("-m",sourceOut != null).maybeAdd("-J",prepareOutputPath(sourceOut),sourceOut != null).maybeAdd("--output-text-symbols",prepareOutputPath(sourceOut),sourceOut != null).add("-F",packageOut).add("-G",proguardOut).add("-P",publicResourcesOut).maybeAdd("--debug-mode",debug).add("--custom-package",customPackageForR).maybeAdd("--non-constant-id",VariantConfiguration.Type.LIBRARY).maybeAdd("--extra-packages",Joiner.on(":").join(packages),VariantConfiguration.Type.DEFAULT).add("--ignore-assets",aaptOptions.getIgnoreAssets()).maybeAdd("--error-on-missing-config-entry",aaptOptions.getFailOnMissingConfigEntry()).add("-0","apk").addRepeated("-0",aaptOptions.getNoCompress()).add("-c",Joiner.on(',').join(resourceConfigs));
  new CommandLineRunner(stdLogger).runCmdLine(commandBuilder.build(),null);
  writeDependencyPackageRs(variantType,customPackageForR,libraries,androidManifest.toFile(),sourceOut);
  if (proguardOut != null) {
    Files.setLastModifiedTime(proguardOut,FileTime.fromMillis(0L));
  }
  if (packageOut != null) {
    Files.setLastModifiedTime(packageOut,FileTime.fromMillis(0L));
  }
  if (publicResourcesOut != null) {
    Files.setLastModifiedTime(publicResourcesOut,FileTime.fromMillis(0L));
  }
}
