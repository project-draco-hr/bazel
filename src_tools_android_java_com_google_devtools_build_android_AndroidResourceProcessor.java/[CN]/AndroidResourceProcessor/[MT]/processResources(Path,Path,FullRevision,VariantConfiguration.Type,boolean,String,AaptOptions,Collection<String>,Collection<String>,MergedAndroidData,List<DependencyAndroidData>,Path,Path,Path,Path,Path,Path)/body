{
  Path androidManifest=primaryData.getManifest();
  final Path resourceDir=processDataBindings(primaryData.getResourceDir(),dataBindingInfoOut,variantType,customPackageForR,androidManifest);
  final Path assetsDir=primaryData.getAssetDir();
  if (publicResourcesOut != null) {
    prepareOutputPath(publicResourcesOut.getParent());
  }
  runAapt(aapt,androidJar,buildToolsVersion,variantType,debug,customPackageForR,aaptOptions,resourceConfigs,splits,androidManifest,resourceDir,assetsDir,sourceOut,packageOut,proguardOut,mainDexProguardOut,publicResourcesOut);
  if (sourceOut != null && variantType != VariantConfiguration.Type.LIBRARY) {
    writeDependencyPackageRJavaFiles(dependencyData,customPackageForR,androidManifest,sourceOut);
  }
  if (proguardOut != null) {
    Files.setLastModifiedTime(proguardOut,FileTime.fromMillis(0L));
  }
  if (mainDexProguardOut != null) {
    Files.setLastModifiedTime(mainDexProguardOut,FileTime.fromMillis(0L));
  }
  if (packageOut != null) {
    Files.setLastModifiedTime(packageOut,FileTime.fromMillis(0L));
    if (!splits.isEmpty()) {
      Iterable<Path> splitFilenames=findAndRenameSplitPackages(packageOut,splits);
      for (      Path splitFilename : splitFilenames) {
        Files.setLastModifiedTime(splitFilename,FileTime.fromMillis(0L));
      }
    }
  }
  if (publicResourcesOut != null && Files.exists(publicResourcesOut)) {
    Files.setLastModifiedTime(publicResourcesOut,FileTime.fromMillis(0L));
  }
}
