{
  Matcher packageMatcher=PACKAGE_PATTERN.matcher(contents);
  if (!packageMatcher.find()) {
    return contents;
  }
  String pkg=packageMatcher.group(1);
  StringBuffer out=new StringBuffer();
  Matcher innerClassMatcher=INNER_CLASS.matcher(contents);
  while (innerClassMatcher.find()) {
    String resourceType=innerClassMatcher.group(1);
    Matcher idMatcher=ID_PATTERN.matcher(innerClassMatcher.group(2));
    StringBuffer resourceIds=new StringBuffer();
    while (idMatcher.find()) {
      String javaId=idMatcher.group(1);
      idMatcher.appendReplacement(resourceIds,String.format("public static int %s=0x%08X;",javaId,Objects.hash(pkg,resourceType,javaId)));
    }
    idMatcher.appendTail(resourceIds);
    innerClassMatcher.appendReplacement(out,String.format("public static class %s {%s}",resourceType,resourceIds.toString()));
  }
  innerClassMatcher.appendTail(out);
  return out.toString();
}
