{
  logCommand();
  final Subprocess process=startProcess();
  outErrConsumers.logConsumptionStrategy();
  outErrConsumers.registerInputs(process.getInputStream(),process.getErrorStream(),closeOutputStreams);
  processInput(stdinInput,process);
  final Killable processKillable=observeProcess(process,observer);
  return new FutureCommandResult(){
    @Override public CommandResult get() throws AbnormalTerminationException {
      return waitForProcessToComplete(process,observer,processKillable,outErrConsumers,killSubprocessOnInterrupt);
    }
    @Override public boolean isDone(){
      return process.finished();
    }
  }
;
}
