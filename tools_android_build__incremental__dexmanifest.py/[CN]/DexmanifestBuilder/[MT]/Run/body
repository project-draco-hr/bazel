def Run(self, argv):
    'Creates a dex manifest.'
    if (len(argv) < 1):
        raise Exception('At least one argument expected')
    if (argv[0][0] == '@'):
        if (len(argv) != 1):
            raise IOError('A parameter file should be the only argument')
        with file(argv[0][1:]) as param_file:
            argv = [a.strip() for a in param_file.readlines()]
    for input_filename in argv[1:]:
        input_filename = input_filename.strip()
        if input_filename.endswith('.zip'):
            with zipfile.ZipFile(input_filename, 'r') as input_dex_zip:
                input_dex_dir = os.path.join(self.tmpdir, str(self.dir_counter))
                os.makedirs(input_dex_dir)
                self.dir_counter += 1
                for input_dex_dex in input_dex_zip.namelist():
                    if (not input_dex_dex.endswith('.dex')):
                        continue
                    input_dex_zip.extract(input_dex_dex, input_dex_dir)
                    fs_dex = ((input_dex_dir + '/') + input_dex_dex)
                    self.AddDex(input_filename, input_dex_dex, fs_dex)
        elif input_filename.endswith('.dex'):
            self.AddDex(input_filename, None, input_filename)
    with file(argv[0], 'w') as manifest:
        manifest.write('\n'.join(self.manifest_lines))
