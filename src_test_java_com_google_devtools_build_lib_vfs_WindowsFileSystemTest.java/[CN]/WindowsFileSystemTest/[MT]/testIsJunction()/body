{
  final Map<String,String> junctions=new HashMap<>();
  junctions.put("shrtpath/a","shrttrgt");
  junctions.put("shrtpath/b","longtargetpath");
  junctions.put("shrtpath/c","longta~1");
  junctions.put("longlinkpath/a","shrttrgt");
  junctions.put("longlinkpath/b","longtargetpath");
  junctions.put("longlinkpath/c","longta~1");
  junctions.put("abbrev~1/a","shrttrgt");
  junctions.put("abbrev~1/b","longtargetpath");
  junctions.put("abbrev~1/c","longta~1");
  String root=testUtil.scratchDir("shrtpath").getParent().toAbsolutePath().toString();
  testUtil.scratchDir("longlinkpath");
  testUtil.scratchDir("abbreviated");
  testUtil.scratchDir("control/a");
  testUtil.scratchDir("control/b");
  testUtil.scratchDir("control/c");
  testUtil.scratchFile("shrttrgt/file1.txt","hello");
  testUtil.scratchFile("longtargetpath/file2.txt","hello");
  testUtil.createJunctions(junctions);
  assertThat(WindowsFileSystem.isJunction(new File(root,"shrtpath/a").toPath())).isTrue();
  assertThat(WindowsFileSystem.isJunction(new File(root,"shrtpath/b").toPath())).isTrue();
  assertThat(WindowsFileSystem.isJunction(new File(root,"shrtpath/c").toPath())).isTrue();
  assertThat(WindowsFileSystem.isJunction(new File(root,"longlinkpath/a").toPath())).isTrue();
  assertThat(WindowsFileSystem.isJunction(new File(root,"longlinkpath/b").toPath())).isTrue();
  assertThat(WindowsFileSystem.isJunction(new File(root,"longlinkpath/c").toPath())).isTrue();
  assertThat(WindowsFileSystem.isJunction(new File(root,"longli~1/a").toPath())).isTrue();
  assertThat(WindowsFileSystem.isJunction(new File(root,"longli~1/b").toPath())).isTrue();
  assertThat(WindowsFileSystem.isJunction(new File(root,"longli~1/c").toPath())).isTrue();
  assertThat(WindowsFileSystem.isJunction(new File(root,"abbreviated/a").toPath())).isTrue();
  assertThat(WindowsFileSystem.isJunction(new File(root,"abbreviated/b").toPath())).isTrue();
  assertThat(WindowsFileSystem.isJunction(new File(root,"abbreviated/c").toPath())).isTrue();
  assertThat(WindowsFileSystem.isJunction(new File(root,"abbrev~1/a").toPath())).isTrue();
  assertThat(WindowsFileSystem.isJunction(new File(root,"abbrev~1/b").toPath())).isTrue();
  assertThat(WindowsFileSystem.isJunction(new File(root,"abbrev~1/c").toPath())).isTrue();
  assertThat(WindowsFileSystem.isJunction(new File(root,"control/a").toPath())).isFalse();
  assertThat(WindowsFileSystem.isJunction(new File(root,"control/b").toPath())).isFalse();
  assertThat(WindowsFileSystem.isJunction(new File(root,"control/c").toPath())).isFalse();
  assertThat(WindowsFileSystem.isJunction(new File(root,"shrttrgt/file1.txt").toPath())).isFalse();
  assertThat(WindowsFileSystem.isJunction(new File(root,"longtargetpath/file2.txt").toPath())).isFalse();
  assertThat(WindowsFileSystem.isJunction(new File(root,"longta~1/file2.txt").toPath())).isFalse();
  assertThat(WindowsFileSystem.isJunction(new File(root,"non-existent").toPath())).isFalse();
  assertThat(Arrays.asList(new File(root + "/shrtpath/a").list())).containsExactly("file1.txt");
  assertThat(Arrays.asList(new File(root + "/shrtpath/b").list())).containsExactly("file2.txt");
  assertThat(Arrays.asList(new File(root + "/shrtpath/c").list())).containsExactly("file2.txt");
  assertThat(Arrays.asList(new File(root + "/longlinkpath/a").list())).containsExactly("file1.txt");
  assertThat(Arrays.asList(new File(root + "/longlinkpath/b").list())).containsExactly("file2.txt");
  assertThat(Arrays.asList(new File(root + "/longlinkpath/c").list())).containsExactly("file2.txt");
  assertThat(Arrays.asList(new File(root + "/abbreviated/a").list())).containsExactly("file1.txt");
  assertThat(Arrays.asList(new File(root + "/abbreviated/b").list())).containsExactly("file2.txt");
  assertThat(Arrays.asList(new File(root + "/abbreviated/c").list())).containsExactly("file2.txt");
}
