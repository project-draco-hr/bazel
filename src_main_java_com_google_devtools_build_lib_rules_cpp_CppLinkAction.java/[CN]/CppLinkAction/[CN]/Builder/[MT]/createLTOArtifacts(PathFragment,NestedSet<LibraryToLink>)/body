{
  NestedSetBuilder<Artifact> bitcodeBuilder=NestedSetBuilder.stableOrder();
  for (  LibraryToLink lib : uniqueLibraries) {
    bitcodeBuilder.addAll(lib.getObjectFiles());
  }
  for (  LinkerInput input : nonLibraries) {
    if (CppFileTypes.OBJECT_FILE.matches(input.getArtifact().getExecPath()) || CppFileTypes.PIC_OBJECT_FILE.matches(input.getArtifact().getExecPath())) {
      bitcodeBuilder.add(input.getArtifact());
    }
  }
  NestedSet<Artifact> allBitcode=bitcodeBuilder.build();
  ImmutableList.Builder<LTOBackendArtifacts> ltoOutputs=ImmutableList.builder();
  for (  Artifact a : allBitcode) {
    LTOBackendArtifacts ltoArtifacts=new LTOBackendArtifacts(ltoOutputRootPrefix,a,allBitcode,analysisEnvironment,configuration);
    ltoOutputs.add(ltoArtifacts);
  }
  return ltoOutputs.build();
}
