def test_constructor(self):
    mock = Mock()
    self.assertFalse(mock.called, 'called not initialised correctly')
    self.assertEqual(mock.call_count, 0, 'call_count not initialised correctly')
    self.assertTrue(is_instance(mock.return_value, Mock), 'return_value not initialised correctly')
    self.assertEqual(mock.call_args, None, 'call_args not initialised correctly')
    self.assertEqual(mock.call_args_list, [], 'call_args_list not initialised correctly')
    self.assertEqual(mock.method_calls, [], 'method_calls not initialised correctly')
    self.assertFalse(('_items' in mock.__dict__), "default mock should not have '_items' attribute")
    self.assertIsNone(mock._mock_parent, 'parent not initialised correctly')
    self.assertIsNone(mock._mock_methods, 'methods not initialised correctly')
    self.assertEqual(mock._mock_children, {}, 'children not initialised incorrectly')
