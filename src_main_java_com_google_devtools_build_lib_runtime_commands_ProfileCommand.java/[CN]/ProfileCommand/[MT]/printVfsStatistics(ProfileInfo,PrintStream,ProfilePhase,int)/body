{
  ProfileInfo.Task phaseTask=info.getPhaseTask(phase);
  if (phaseTask == null) {
    return;
  }
  if (limit == 0) {
    return;
  }
  List<ProfileInfo.Task> taskList=info.getTasksForPhase(phaseTask);
  EnumMap<ProfilerTask,Map<String,Stat>> stats=Maps.newEnumMap(ProfilerTask.class);
  collectVfsEntries(stats,taskList);
  if (!stats.isEmpty()) {
    out.printf("\nVFS path statistics:\n");
    out.printf("%15s %10s %10s %s\n","Type","Frequency","Duration","Path");
  }
  for (  ProfilerTask type : stats.keySet()) {
    Map<String,Stat> statsForType=stats.get(type);
    TreeMultimap<Stat,String> sortedStats=TreeMultimap.create(Ordering.natural().reverse(),Ordering.natural());
    Multimaps.invertFrom(Multimaps.forMap(statsForType),sortedStats);
    int numPrinted=0;
    for (    Map.Entry<Stat,String> stat : sortedStats.entries()) {
      if (limit != -1 && numPrinted++ == limit) {
        out.printf("... %d more ...\n",sortedStats.size() - limit);
        break;
      }
      out.printf("%15s %10d %10s %s\n",type.name(),stat.getKey().frequency,TimeUtilities.prettyTime(stat.getKey().duration),stat.getValue());
    }
  }
}
