{
  TargetPatternValue.TargetPatternKey patternKey=((TargetPatternValue.TargetPatternKey)key.argument());
  Preconditions.checkState(patternKey.getPolicy().equals(FilteringPolicies.NO_FILTER),patternKey.getPolicy());
  try {
    TargetPattern parsedPattern=patternKey.getParsedPattern();
    DepsOfPatternPreparer preparer=new DepsOfPatternPreparer(env,pkgPath.get());
    ImmutableSet<String> excludedSubdirectories=patternKey.getExcludedSubdirectories();
    parsedPattern.eval(preparer,excludedSubdirectories);
  }
 catch (  TargetParsingException e) {
    throw new PrepareDepsOfPatternFunctionException(e);
  }
catch (  MissingDepException e) {
    return null;
  }
  return PrepareDepsOfPatternValue.INSTANCE;
}
