{
  Map<String,String> assignments=Maps.newLinkedHashMapWithExpectedSize(typeToId.size());
  for (  Entry<ResourceType,Optional<Integer>> entry : typeToId.entrySet()) {
    Optional<Integer> value=entry.getValue();
    String stringValue=value.isPresent() ? value.get().toString() : MISSING_ID_VALUE;
    assignments.put(entry.getKey().toString(),stringValue);
  }
  SerializeFormat.DataValue.Builder builder=XmlResourceValues.newSerializableDataValueBuilder(source);
  builder.setXmlValue(builder.getXmlValueBuilder().setType(SerializeFormat.DataValueXml.XmlType.PUBLIC).putAllNamespace(namespaces.asMap()).putAllMappedStringValue(assignments));
  return XmlResourceValues.serializeProtoDataValue(output,builder);
}
