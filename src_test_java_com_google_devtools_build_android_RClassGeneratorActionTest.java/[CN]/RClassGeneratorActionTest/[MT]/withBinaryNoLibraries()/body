{
  Path binaryManifest=ManifestBuilder.of(tempDir.resolve("binary")).createManifest("AndroidManifest.xml","com.google.app","<application android:name=\"com.google.app\">","<activity android:name=\"com.google.bar.activityFoo\" />","</application>");
  Path binarySymbols=createFile("R.txt","int attr agility 0x7f010000","int attr dexterity 0x7f010001","int drawable heart 0x7f020000","int id someTextView 0x7f080000","int integer maxNotifications 0x7f090000","int string alphabet 0x7f100000","int string ok 0x7f100001");
  Path jarPath=tempDir.resolve("app_resources.jar");
  RClassGeneratorAction.main(ImmutableList.<String>of("--primaryRTxt",binarySymbols.toString(),"--primaryManifest",binaryManifest.toString(),"--classJarOutput",jarPath.toString()).toArray(new String[0]));
  assertThat(Files.exists(jarPath)).isTrue();
  assertThat(Files.getLastModifiedTime(jarPath)).isEqualTo(FileTime.fromMillis(0));
  try (ZipFile zip=new ZipFile(jarPath.toFile())){
    List<? extends ZipEntry> zipEntries=Collections.list(zip.entries());
    Iterable<String> entries=getZipFilenames(zipEntries);
    assertThat(entries).containsExactly(Paths.get("com/google/app/R$attr.class").toString(),Paths.get("com/google/app/R$drawable.class").toString(),Paths.get("com/google/app/R$id.class").toString(),Paths.get("com/google/app/R$integer.class").toString(),Paths.get("com/google/app/R$string.class").toString(),Paths.get("com/google/app/R.class").toString(),Paths.get("META-INF/MANIFEST.MF").toString());
  }
 }
