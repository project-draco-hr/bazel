{
  final String source=ruleContext.attributes().get("source_version",Type.STRING);
  final String target=ruleContext.attributes().get("target_version",Type.STRING);
  final String encoding=ruleContext.attributes().get("encoding",Type.STRING);
  final List<String> xlint=ruleContext.attributes().get("xlint",Type.STRING_LIST);
  final List<String> misc=ruleContext.attributes().get("misc",Type.STRING_LIST);
  final JavaConfiguration configuration=ruleContext.getFragment(JavaConfiguration.class);
  JavaToolchainProvider provider=new JavaToolchainProvider(source,target,encoding,ImmutableList.copyOf(xlint),ImmutableList.copyOf(misc),configuration.getDefaultJavacFlags());
  RuleConfiguredTargetBuilder builder=new RuleConfiguredTargetBuilder(ruleContext).add(JavaToolchainProvider.class,provider).setFilesToBuild(new NestedSetBuilder<Artifact>(Order.STABLE_ORDER).build()).add(RunfilesProvider.class,RunfilesProvider.simple(Runfiles.EMPTY));
  return builder.build();
}
