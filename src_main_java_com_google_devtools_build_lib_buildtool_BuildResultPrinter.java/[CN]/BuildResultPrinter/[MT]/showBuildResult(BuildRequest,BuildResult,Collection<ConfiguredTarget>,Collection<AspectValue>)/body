{
  Collection<ConfiguredTarget> targetsToPrint=filterTargetsToPrint(configuredTargets);
  Collection<AspectValue> aspectsToPrint=filterAspectsToPrint(aspects);
  Collection<ConfiguredTarget> succeeded=new ArrayList<>();
  Collection<ConfiguredTarget> failed=new ArrayList<>();
  for (  ConfiguredTarget target : targetsToPrint) {
    Collection<ConfiguredTarget> successfulTargets=result.getSuccessfulTargets();
    (successfulTargets.contains(target) ? succeeded : failed).add(target);
  }
  if (succeeded.size() + failed.size() + aspectsToPrint.size() > request.getBuildOptions().maxResultTargets) {
    return;
  }
  OutErr outErr=request.getOutErr();
  TopLevelArtifactContext context=request.getTopLevelArtifactContext();
  for (  ConfiguredTarget target : succeeded) {
    Label label=target.getLabel();
    boolean headerFlag=true;
    for (    Artifact artifact : TopLevelArtifactHelper.getAllArtifactsToBuild(target,context).getImportantArtifacts()) {
      if (shouldPrint(artifact)) {
        if (headerFlag) {
          outErr.printErr("Target " + label + " up-to-date:\n");
          headerFlag=false;
        }
        outErr.printErrLn(formatArtifactForShowResults(artifact,request));
      }
    }
    if (headerFlag) {
      outErr.printErr("Target " + label + " up-to-date (nothing to build)\n");
    }
  }
  for (  AspectValue aspect : aspectsToPrint) {
    Label label=aspect.getLabel();
    String aspectName=aspect.getConfiguredAspect().getName();
    boolean headerFlag=true;
    NestedSet<Artifact> importantArtifacts=TopLevelArtifactHelper.getAllArtifactsToBuild(aspect,context).getImportantArtifacts();
    for (    Artifact importantArtifact : importantArtifacts) {
      if (headerFlag) {
        outErr.printErr("Aspect " + aspectName + " of "+ label+ " up-to-date:\n");
        headerFlag=false;
      }
      if (shouldPrint(importantArtifact)) {
        outErr.printErrLn(formatArtifactForShowResults(importantArtifact,request));
      }
    }
    if (headerFlag) {
      outErr.printErr("Aspect " + aspectName + " of "+ label+ " up-to-date (nothing to build)\n");
    }
  }
  for (  ConfiguredTarget target : failed) {
    outErr.printErr("Target " + target.getLabel() + " failed to build\n");
    OutputGroupProvider topLevelProvider=target.getProvider(OutputGroupProvider.class);
    String productName=env.getRuntime().getProductName();
    if (topLevelProvider != null) {
      for (      Artifact temp : topLevelProvider.getOutputGroup(OutputGroupProvider.TEMP_FILES)) {
        if (temp.getPath().exists()) {
          outErr.printErrLn("  See temp at " + OutputDirectoryLinksUtils.getPrettyPath(temp.getPath(),env.getWorkspaceName(),env.getWorkspace(),request.getBuildOptions().getSymlinkPrefix(productName),productName));
        }
      }
    }
  }
  if (!failed.isEmpty() && !request.getOptions(ExecutionOptions.class).verboseFailures) {
    outErr.printErr("Use --verbose_failures to see the command lines of failed build steps.\n");
  }
}
