{
  String genDir=ruleContext.getConfiguration().getGenfilesDirectory(ruleContext.getRule().getRepository()).getExecPathString();
  Artifact compiler=ruleContext.getPrerequisiteArtifact("$protoc",Mode.HOST);
  Artifact j2objcPlugin=ruleContext.getPrerequisiteArtifact("$j2objc_plugin",Mode.HOST);
  String langPluginParameter=Joiner.on(',').join(J2OBJC_PLUGIN_PARAMS) + ":" + genDir;
  String command=String.format("%s --plugin=protoc-gen-j2objc=%s --j2objc_out=%s --proto_path=%s --proto_path=. " + "--absolute_paths %s",compiler.getExecPathString(),j2objcPlugin.getExecPathString(),langPluginParameter,genDir,Joiner.on(" ").join(Artifact.toExecPaths(protoSources)));
  ruleContext.registerAction(ObjcRuleClasses.spawnBashOnDarwinActionBuilder(command).setMnemonic("GeneratingJ2ObjcProtos").addInput(compiler).addInput(j2objcPlugin).addInputs(protoSources).addTransitiveInputs(transitiveProtoSources).addOutputs(j2ObjcSource.getObjcSrcs()).addOutputs(j2ObjcSource.getObjcHdrs()).addOutputs(headerMappingFiles).addOutputs(classMappingFiles).build(ruleContext));
}
