{
  ImmutableList<CToolchain.Builder> toolchains=ImmutableList.<CToolchain.Builder>builder().add(createBaseArmeabiClangToolchain(clangVersion,thumb).setToolchainIdentifier(createArmeabiName("arm-linux-androideabi-clang%s",clangVersion,thumb)).setTargetCpu("armeabi").addCompilerFlag("-target").addCompilerFlag("armv5te-none-linux-androideabi").addCompilerFlag("-march=armv5te").addCompilerFlag("-mtune=xscale").addCompilerFlag("-msoft-float").addLinkerFlag("-target").addLinkerFlag("armv5te-none-linux-androideabi")).add(createBaseArmeabiClangToolchain(clangVersion,thumb).setToolchainIdentifier(createArmeabiName("arm-linux-androideabi-clang%s-v7a",clangVersion,thumb)).setTargetCpu("armeabi-v7a").addCompilerFlag("-target").addCompilerFlag("armv7-none-linux-androideabi").addCompilerFlag("-march=armv7-a").addCompilerFlag("-mfloat-abi=softfp").addCompilerFlag("-mfpu=vfpv3-d16").addLinkerFlag("-target").addLinkerFlag("armv7-none-linux-androideabi").addLinkerFlag("-Wl,--fix-cortex-a8")).add(createBaseArmeabiClangToolchain(clangVersion,thumb).setToolchainIdentifier(createArmeabiName("arm-linux-androideabi-clang%s-v7a-hard",clangVersion,thumb)).setTargetCpu("armeabi-v7a-hard").addCompilerFlag("-target").addCompilerFlag("armv7-none-linux-androideabi").addCompilerFlag("-march=armv7-a").addCompilerFlag("-mfpu=vfpv3-d16").addCompilerFlag("-mhard-float").addCompilerFlag("-D_NDK_MATH_NO_SOFTFP=1").addLinkerFlag("-target").addLinkerFlag("armv7-none-linux-androideabi").addLinkerFlag("-Wl,--fix-cortex-a8").addLinkerFlag("-Wl,--no-warn-mismatch").addLinkerFlag("-lm_hard")).build();
  stlImpl.addStlImpl(toolchains,"4.9",thumb);
  return toolchains;
}
