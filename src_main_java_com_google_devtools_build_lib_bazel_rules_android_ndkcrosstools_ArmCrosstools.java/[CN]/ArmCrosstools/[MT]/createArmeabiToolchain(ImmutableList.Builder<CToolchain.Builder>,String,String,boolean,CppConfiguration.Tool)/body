{
  builder.add(createBaseArmeabiToolchain(thumb,gccVersion,stackProtectorFlag,excludedTools).setToolchainIdentifier(createArmeabiName("arm-linux-androideabi-%s",gccVersion,thumb)).setTargetCpu("armeabi").addCompilerFlag("-march=armv5te").addCompilerFlag("-mtune=xscale").addCompilerFlag("-msoft-float"));
  builder.add(createBaseArmeabiToolchain(thumb,gccVersion,stackProtectorFlag,excludedTools).setToolchainIdentifier(createArmeabiName("arm-linux-androideabi-%s-v7a",gccVersion,thumb)).setTargetCpu("armeabi-v7a").addCompilerFlag("-march=armv7-a").addCompilerFlag("-mfpu=vfpv3-d16").addCompilerFlag("-mfloat-abi=softfp").addLinkerFlag("-march=armv7-a").addLinkerFlag("-Wl,--fix-cortex-a8"));
  builder.add(createBaseArmeabiToolchain(thumb,gccVersion,stackProtectorFlag,excludedTools).setToolchainIdentifier(createArmeabiName("arm-linux-androideabi-%s-v7a-hard",gccVersion,thumb)).setTargetCpu("armeabi-v7a-hard").addCompilerFlag("-march=armv7-a").addCompilerFlag("-mfpu=vfpv3-d16").addCompilerFlag("-mhard-float").addCompilerFlag("-D_NDK_MATH_NO_SOFTFP=1").addLinkerFlag("-march=armv7-a").addLinkerFlag("-Wl,--fix-cortex-a8").addLinkerFlag("-Wl,--no-warn-mismatch").addLinkerFlag("-lm_hard"));
}
