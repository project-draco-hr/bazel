{
  String toolchainName="arm-linux-androideabi-4.8";
  String targetPlatform="arm-linux-androideabi";
  String gccToolchain=ndkPaths.createGccToolchainPath("arm-linux-androideabi-4.8");
  CToolchain.Builder builder=CToolchain.newBuilder().setTargetSystemName("arm-linux-androideabi").setCompiler("clang" + clangVersion).addAllToolPath(ndkPaths.createClangToolpaths(toolchainName,targetPlatform,clangVersion,CppConfiguration.Tool.GCOVTOOL)).addAllCxxBuiltinIncludeDirectory(ndkPaths.createToolchainIncludePaths(toolchainName,targetPlatform,"4.8")).setBuiltinSysroot(ndkPaths.createBuiltinSysroot("arm")).addCompilerFlag("-gcc-toolchain").addCompilerFlag(gccToolchain).addCompilerFlag("-fpic").addCompilerFlag("-ffunction-sections").addCompilerFlag("-funwind-tables").addCompilerFlag("-fstack-protector-strong").addCompilerFlag("-Wno-invalid-command-line-argument").addCompilerFlag("-Wno-unused-command-line-argument").addCompilerFlag("-no-canonical-prefixes").addCompilerFlag("-fno-integrated-as").addLinkerFlag("-gcc-toolchain").addLinkerFlag(gccToolchain).addLinkerFlag("-no-canonical-prefixes");
  if (thumb) {
    builder.addCompilationModeFlags(CompilationModeFlags.newBuilder().setMode(CompilationMode.OPT).addCompilerFlag("-mthumb").addCompilerFlag("-Os").addCompilerFlag("-g").addCompilerFlag("-DNDEBUG").addCompilerFlag("-fomit-frame-pointer").addCompilerFlag("-fno-strict-aliasing"));
    builder.addCompilationModeFlags(CompilationModeFlags.newBuilder().setMode(CompilationMode.DBG).addCompilerFlag("-g").addCompilerFlag("-fno-strict-aliasing").addCompilerFlag("-O0").addCompilerFlag("-UNDEBUG").addCompilerFlag("-marm").addCompilerFlag("-fno-omit-frame-pointer"));
  }
 else {
    builder.addCompilationModeFlags(CompilationModeFlags.newBuilder().setMode(CompilationMode.OPT).addCompilerFlag("-O2").addCompilerFlag("-g").addCompilerFlag("-DNDEBUG").addCompilerFlag("-fomit-frame-pointer").addCompilerFlag("-fstrict-aliasing"));
    builder.addCompilationModeFlags(CompilationModeFlags.newBuilder().setMode(CompilationMode.DBG).addCompilerFlag("-g").addCompilerFlag("-O0").addCompilerFlag("-UNDEBUG").addCompilerFlag("-fno-omit-frame-pointer").addCompilerFlag("-fno-strict-aliasing"));
  }
  return builder;
}
