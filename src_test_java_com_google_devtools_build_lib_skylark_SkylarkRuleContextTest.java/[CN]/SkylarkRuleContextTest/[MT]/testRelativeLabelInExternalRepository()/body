{
  scratch.file("external_rule.bzl","def _impl(ctx):","  return","external_rule = rule(","  implementation = _impl,","  attrs = {","    'internal_dep': attr.label(default = Label('//:dep'))","  }",")");
  scratch.file("BUILD","filegroup(name='dep')");
  scratch.file("/r/a/BUILD","load('/external_rule', 'external_rule')","external_rule(name='r')");
  scratch.overwriteFile("WORKSPACE","local_repository(name='r', path='/r')");
  invalidatePackages(false);
  SkylarkRuleContext context=createRuleContext("@r//a:r");
  Label depLabel=(Label)evalRuleContextCode(context,"ruleContext.attr.internal_dep.label");
  assertThat(depLabel).isEqualTo(Label.parseAbsolute("//:dep"));
}
