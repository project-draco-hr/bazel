{
  NestedSet<Artifact> filesToBuild=NestedSetBuilder.wrap(Order.STABLE_ORDER,ruleContext.getPrerequisiteArtifacts("srcs",Mode.TARGET).list());
  NestedSet<Artifact> middleman=CompilationHelper.getAggregatingMiddleman(ruleContext,Actions.escapeLabel(ruleContext.getLabel()),filesToBuild);
  InstrumentedFilesCollector instrumentedFilesCollector=new InstrumentedFilesCollector(ruleContext,new InstrumentationSpec(FileTypeSet.ANY_FILE,"srcs","deps","data"),InstrumentedFilesCollector.NO_METADATA_COLLECTOR,filesToBuild);
  RunfilesProvider runfilesProvider=RunfilesProvider.withData(new Runfiles.Builder(ruleContext.getWorkspaceName()).addRunfiles(ruleContext,RunfilesProvider.DEFAULT_RUNFILES).build(),new Runfiles.Builder(ruleContext.getWorkspaceName()).addTransitiveArtifacts(filesToBuild).addDataDeps(ruleContext).build());
  return new RuleConfiguredTargetBuilder(ruleContext).add(RunfilesProvider.class,runfilesProvider).setFilesToBuild(filesToBuild).setRunfilesSupport(null,getExecutable(filesToBuild)).add(InstrumentedFilesProvider.class,new InstrumentedFilesProviderImpl(instrumentedFilesCollector)).add(MiddlemanProvider.class,new MiddlemanProvider(middleman)).add(FilegroupPathProvider.class,new FilegroupPathProvider(getFilegroupPath(ruleContext))).build();
}
