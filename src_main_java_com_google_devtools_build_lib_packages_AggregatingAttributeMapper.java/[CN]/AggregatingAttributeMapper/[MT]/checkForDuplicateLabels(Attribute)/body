{
  String attrName=attribute.getName();
  Type<?> attrType=attribute.getType();
  ImmutableSet.Builder<Label> duplicates=ImmutableSet.builder();
  SelectorList<?> selectorList=getSelectorList(attribute.getName(),attrType);
  if (selectorList == null || selectorList.getSelectors().size() == 1) {
    for (    Object value : visitAttribute(attrName,attrType)) {
      if (value != null) {
        duplicates.addAll(CollectionUtils.duplicatedElementsOf(extractLabels(attrType,value)));
      }
    }
  }
 else {
    List<Label> combinedLabels=new LinkedList<>();
    for (    Selector<?> selector : selectorList.getSelectors()) {
      Set<Label> selectorLabels=new LinkedHashSet<>();
      for (      Object selectorValue : selector.getEntries().values()) {
        List<Label> labelsInSelectorValue=extractLabels(attrType,selectorValue);
        duplicates.addAll(CollectionUtils.duplicatedElementsOf(labelsInSelectorValue));
        Iterables.addAll(selectorLabels,labelsInSelectorValue);
      }
      combinedLabels.addAll(selectorLabels);
    }
    duplicates.addAll(CollectionUtils.duplicatedElementsOf(combinedLabels));
  }
  return duplicates.build();
}
