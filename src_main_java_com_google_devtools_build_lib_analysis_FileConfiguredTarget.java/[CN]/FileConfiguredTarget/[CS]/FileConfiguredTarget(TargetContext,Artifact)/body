{
  super(targetContext);
  NestedSet<Artifact> filesToBuild=NestedSetBuilder.create(Order.STABLE_ORDER,artifact);
  this.artifact=artifact;
  Builder<Class<? extends TransitiveInfoProvider>,TransitiveInfoProvider> builder=ImmutableMap.<Class<? extends TransitiveInfoProvider>,TransitiveInfoProvider>builder().put(VisibilityProvider.class,this).put(LicensesProvider.class,this).put(FileProvider.class,new FileProvider(targetContext.getLabel(),filesToBuild)).put(FilesToRunProvider.class,new FilesToRunProvider(targetContext.getLabel(),ImmutableList.copyOf(filesToBuild),null,artifact));
  if (this instanceof FilesetProvider) {
    builder.put(FilesetProvider.class,this);
  }
  if (this instanceof InstrumentedFilesProvider) {
    builder.put(InstrumentedFilesProvider.class,this);
  }
  this.providers=builder.build();
}
