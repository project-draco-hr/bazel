{
  GroupedList<String> groupedList=new GroupedList<>();
  assertTrue(groupedList.isEmpty());
  GroupedListHelper<String> helper=new GroupedListHelper<>();
  @SuppressWarnings("unchecked") List<List<String>> elements=Lists.newArrayList((List<String>)ImmutableList.of("1"),ImmutableList.<String>of(),Lists.newArrayList("2a","2b"),ImmutableList.of("3"),ImmutableList.of("removedGroup1","removedGroup2"),ImmutableList.of("4"));
  List<String> allElts=new ArrayList<>();
  for (  List<String> group : elements) {
    helper.startGroup();
    for (    String elt : group) {
      helper.add(elt);
    }
    helper.endGroup();
    allElts.addAll(group);
  }
  groupedList.append(helper);
  Set<String> removed=ImmutableSet.of("2a","3","removedGroup1","removedGroup2");
  groupedList.remove(removed);
  Object compressed=groupedList.compress();
  allElts.removeAll(removed);
  assertElementsEqual(compressed,allElts);
  elements.get(2).remove("2a");
  elements.remove(ImmutableList.of("3"));
  elements.remove(ImmutableList.of());
  elements.remove(ImmutableList.of("removedGroup1","removedGroup2"));
  assert_().that(GroupedList.create(compressed)).containsExactlyElementsIn(elements).inOrder();
  assert_().that(groupedList).containsExactlyElementsIn(elements).inOrder();
}
