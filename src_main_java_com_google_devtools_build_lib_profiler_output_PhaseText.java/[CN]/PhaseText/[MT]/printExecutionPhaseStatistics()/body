{
  PhaseStatistics prepPhase=phaseStatistics.get(ProfilePhase.PREPARE);
  PhaseStatistics execPhase=phaseStatistics.get(ProfilePhase.EXECUTE);
  PhaseStatistics finishPhase=phaseStatistics.get(ProfilePhase.FINISH);
  if (!execPhase.wasExecuted()) {
    return;
  }
  lnPrint("=== EXECUTION PHASE INFORMATION ===\n");
  long graphTime=execPhase.getTotalDurationNanos(ProfilerTask.ACTION_GRAPH);
  long execTime=execPhase.getPhaseDurationNanos() - graphTime;
  if (prepPhase.wasExecuted()) {
    lnPrintf(TWO_COLUMN_FORMAT,"Total preparation time",TimeUtilities.prettyTime(prepPhase.getPhaseDurationNanos()));
  }
  lnPrintf(TWO_COLUMN_FORMAT,"Total execution phase time",TimeUtilities.prettyTime(execPhase.getPhaseDurationNanos()));
  if (finishPhase.wasExecuted()) {
    lnPrintf(TWO_COLUMN_FORMAT,"Total time finalizing build",TimeUtilities.prettyTime(finishPhase.getPhaseDurationNanos()));
  }
  printLn();
  lnPrintf(TWO_COLUMN_FORMAT,"Action dependency map creation",TimeUtilities.prettyTime(graphTime));
  lnPrintf(TWO_COLUMN_FORMAT,"Actual execution time",TimeUtilities.prettyTime(execTime));
  CriticalPathText criticalPaths=null;
  if (criticalPathStatistics.isPresent()) {
    criticalPaths=new CriticalPathText(out,criticalPathStatistics.get(),execTime);
    criticalPaths.printTimingBreakdown();
    printLn();
  }
  printTimingDistribution(execPhase);
  printLn();
  if (criticalPathStatistics.isPresent()) {
    criticalPaths.printCriticalPaths();
    printLn();
  }
  if (missingActionsCount > 0) {
    lnPrint(missingActionsCount);
    print(" action(s) are present in the" + " action graph but missing instrumentation data. Most likely the profile file" + " has been created during a failed or aborted build.");
    printLn();
  }
  printVfsStatistics(execPhase.getVfsStatistics());
}
