{
  ImmutableMap.Builder<String,String> optionCategoriesBuilder=ImmutableMap.builder();
  String name=Constants.PRODUCT_NAME;
  optionCategoriesBuilder.put("checking",String.format("Checking options, which control %s's error checking and/or warnings",name)).put("coverage",String.format("Options that affect how %s generates code coverage information",name)).put("experimental","Experimental options, which control experimental (and potentially risky) features").put("flags","Flags options, for passing options to other tools").put("help","Help options").put("host jvm startup",String.format("Options that affect the startup of the %s server's JVM",name)).put("misc","Miscellaneous options").put("package loading","Options that specify how to locate packages").put("query",String.format("Options affecting the '%s query' dependency query command",name)).put("run",String.format("Options specific to '%s run'",name)).put("semantics","Semantics options, which affect the build commands and/or output file contents").put("server startup",String.format("Startup options, which affect the startup of the %s server",name)).put("strategy",String.format("Strategy options, which affect how %s will execute the build",name)).put("testing",String.format("Options that affect how %s runs tests",name)).put("verbosity",String.format("Verbosity options, which control what %s prints",name)).put("version","Version options, for selecting which version of other tools will be used").put("what","Output selection options, for determining what to build/test");
  for (  BlazeModule module : runtime.getBlazeModules()) {
    optionCategoriesBuilder.putAll(module.getOptionCategories());
  }
  return optionCategoriesBuilder.build();
}
