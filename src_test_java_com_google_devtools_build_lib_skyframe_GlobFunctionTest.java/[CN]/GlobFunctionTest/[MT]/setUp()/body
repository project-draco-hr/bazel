{
  fs=new CustomInMemoryFs(new ManualClock());
  root=fs.getRootDirectory().getRelative("root/workspace");
  outputBase=fs.getRootDirectory().getRelative("output_base");
  pkgPath=root.getRelative(PKG_PATH_ID.getPackageFragment());
  pkgLocator=new AtomicReference<>(new PathPackageLocator(outputBase,ImmutableList.of(root)));
  tsgm=new TimestampGranularityMonitor(BlazeClock.instance());
  differencer=new RecordingDifferencer();
  evaluator=new InMemoryMemoizingEvaluator(createFunctionMap(),differencer);
  driver=new SequentialBuildDriver(evaluator);
  PrecomputedValue.BUILD_ID.set(differencer,UUID.randomUUID());
  PrecomputedValue.PATH_PACKAGE_LOCATOR.set(differencer,pkgLocator.get());
  PrecomputedValue.BLACKLISTED_PKG_PREFIXES.set(differencer,ImmutableSet.<PathFragment>of());
  createTestFiles();
}
