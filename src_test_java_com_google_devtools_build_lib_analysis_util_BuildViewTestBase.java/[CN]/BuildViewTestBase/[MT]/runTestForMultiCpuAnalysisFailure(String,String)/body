{
  reporter.removeHandler(failFastHandler);
  useConfiguration("--experimental_multi_cpu=" + badCpu + ","+ goodCpu);
  scratch.file("multi/BUILD","cc_library(name='cpu', abi='$(TARGET_CPU)', abi_deps={'" + badCpu + "':[':fail']})","genrule(name='fail', outs=['file1', 'file2'], executable = 1, cmd='touch $@')");
  update(defaultFlags().with(Flag.KEEP_GOING),"//multi:cpu");
  AnalysisResult result=getAnalysisResult();
  assertThat(result.getTargetsToBuild()).hasSize(1);
  ConfiguredTarget targetA=Iterables.get(result.getTargetsToBuild(),0);
  assertEquals(goodCpu,targetA.getConfiguration().getCpu());
  assertContainsEvent("if genrules produce executables, they are allowed only one output");
}
