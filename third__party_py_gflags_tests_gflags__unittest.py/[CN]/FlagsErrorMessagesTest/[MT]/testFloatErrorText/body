def testFloatErrorText(self):
    gflags.DEFINE_float('positive', 4, 'non-negative flag', lower_bound=1, flag_values=self.flag_values)
    gflags.DEFINE_float('non_negative', 4, 'positive flag', lower_bound=0, flag_values=self.flag_values)
    gflags.DEFINE_float('negative', (-4), 'negative flag', upper_bound=(-1), flag_values=self.flag_values)
    gflags.DEFINE_float('non_positive', (-4), 'non-positive flag', upper_bound=0, flag_values=self.flag_values)
    gflags.DEFINE_float('greater', 19, 'greater-than flag', lower_bound=4, flag_values=self.flag_values)
    gflags.DEFINE_float('smaller', (-19), 'smaller-than flag', upper_bound=4, flag_values=self.flag_values)
    gflags.DEFINE_float('usual', 4, 'usual flag', lower_bound=0, upper_bound=10000, flag_values=self.flag_values)
    gflags.DEFINE_float('another_usual', 0, 'usual flag', lower_bound=(-1), upper_bound=1, flag_values=self.flag_values)
    self._CheckErrorMessage('positive', 0.5, 'number >= 1')
    self._CheckErrorMessage('non_negative', (-4.0), 'a non-negative number')
    self._CheckErrorMessage('negative', 0.5, 'number <= -1')
    self._CheckErrorMessage('non_positive', 4.0, 'a non-positive number')
    self._CheckErrorMessage('usual', (-4.0), 'a number in the range [0, 10000]')
    self._CheckErrorMessage('another_usual', 4.0, 'a number in the range [-1, 1]')
    self._CheckErrorMessage('smaller', 5.0, 'number <= 4')
