def testIntegerErrorText(self):
    gflags.DEFINE_integer('positive', 4, 'non-negative flag', lower_bound=1, flag_values=self.flag_values)
    gflags.DEFINE_integer('non_negative', 4, 'positive flag', lower_bound=0, flag_values=self.flag_values)
    gflags.DEFINE_integer('negative', (-4), 'negative flag', upper_bound=(-1), flag_values=self.flag_values)
    gflags.DEFINE_integer('non_positive', (-4), 'non-positive flag', upper_bound=0, flag_values=self.flag_values)
    gflags.DEFINE_integer('greater', 19, 'greater-than flag', lower_bound=4, flag_values=self.flag_values)
    gflags.DEFINE_integer('smaller', (-19), 'smaller-than flag', upper_bound=4, flag_values=self.flag_values)
    gflags.DEFINE_integer('usual', 4, 'usual flag', lower_bound=0, upper_bound=10000, flag_values=self.flag_values)
    gflags.DEFINE_integer('another_usual', 0, 'usual flag', lower_bound=(-1), upper_bound=1, flag_values=self.flag_values)
    self._CheckErrorMessage('positive', (-4), 'a positive integer')
    self._CheckErrorMessage('non_negative', (-4), 'a non-negative integer')
    self._CheckErrorMessage('negative', 0, 'a negative integer')
    self._CheckErrorMessage('non_positive', 4, 'a non-positive integer')
    self._CheckErrorMessage('usual', (-4), 'an integer in the range [0, 10000]')
    self._CheckErrorMessage('another_usual', 4, 'an integer in the range [-1, 1]')
    self._CheckErrorMessage('greater', (-5), 'integer >= 4')
    self._CheckErrorMessage('smaller', 5, 'integer <= 4')
