{
  scratch.file("foo/BUILD","sh_library(name = 'foo', srcs = glob(['*.txt']))");
  scratch.file("foo/b.txt");
  scratch.file("foo/a.config");
  preparePackageLoading(rootDirectory);
  SkyKey skyKey=PackageValue.key(PackageIdentifier.parse("@//foo"));
  PackageValue value=validPackage(skyKey);
  assertThat((Iterable<Label>)value.getPackage().getTarget("foo").getAssociatedRule().getAttributeContainer().getAttr("srcs")).containsExactly(Label.parseAbsoluteUnchecked("//foo:b.txt"));
  scratch.overwriteFile("foo/BUILD","sh_library(name = 'foo', srcs = glob(['*.txt', '*.config']))");
  getSkyframeExecutor().invalidateFilesUnderPathForTesting(reporter,ModifiedFileSet.builder().modify(new PathFragment("foo/BUILD")).build(),rootDirectory);
  value=validPackage(skyKey);
  assertThat((Iterable<Label>)value.getPackage().getTarget("foo").getAssociatedRule().getAttributeContainer().getAttr("srcs")).containsExactly(Label.parseAbsoluteUnchecked("//foo:a.config"),Label.parseAbsoluteUnchecked("//foo:b.txt")).inOrder();
  scratch.overwriteFile("foo/BUILD","sh_library(name = 'foo', srcs = glob(['*.txt', '*.config'])) # comment");
  getSkyframeExecutor().invalidateFilesUnderPathForTesting(reporter,ModifiedFileSet.builder().modify(new PathFragment("foo/BUILD")).build(),rootDirectory);
  value=validPackage(skyKey);
  assertThat((Iterable<Label>)value.getPackage().getTarget("foo").getAssociatedRule().getAttributeContainer().getAttr("srcs")).containsExactly(Label.parseAbsoluteUnchecked("//foo:a.config"),Label.parseAbsoluteUnchecked("//foo:b.txt")).inOrder();
  getSkyframeExecutor().resetEvaluator();
  getSkyframeExecutor().preparePackageLoading(new PathPackageLocator(outputBase,ImmutableList.<Path>of(rootDirectory)),ConstantRuleVisibility.PUBLIC,true,7,"",UUID.randomUUID(),ImmutableMap.of(),tsgm);
  value=validPackage(skyKey);
  assertThat((Iterable<Label>)value.getPackage().getTarget("foo").getAssociatedRule().getAttributeContainer().getAttr("srcs")).containsExactly(Label.parseAbsoluteUnchecked("//foo:a.config"),Label.parseAbsoluteUnchecked("//foo:b.txt")).inOrder();
}
