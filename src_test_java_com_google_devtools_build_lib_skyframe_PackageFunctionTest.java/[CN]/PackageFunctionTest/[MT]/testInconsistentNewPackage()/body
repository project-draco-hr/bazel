{
  scratch.file("pkg/BUILD","subinclude('//foo:sub')");
  scratch.file("foo/sub");
  getSkyframeExecutor().preparePackageLoading(new PathPackageLocator(outputBase,ImmutableList.of(rootDirectory)),ConstantRuleVisibility.PUBLIC,true,7,"",UUID.randomUUID());
  SkyKey pkgLookupKey=PackageLookupValue.key(new PathFragment("foo"));
  EvaluationResult<PackageLookupValue> result=SkyframeExecutorTestUtils.evaluate(getSkyframeExecutor(),pkgLookupKey,false,reporter);
  assertFalse(result.hasError());
  assertFalse(result.get(pkgLookupKey).packageExists());
  scratch.file("foo/BUILD");
  SkyKey skyKey=PackageValue.key(PackageIdentifier.parse("@//pkg"));
  result=SkyframeExecutorTestUtils.evaluate(getSkyframeExecutor(),skyKey,false,reporter);
  assertTrue(result.hasError());
  Throwable exception=result.getError(skyKey).getException();
  assertThat(exception.getMessage()).contains("Inconsistent filesystem operations");
  assertThat(exception.getMessage()).contains("Unexpected package");
}
