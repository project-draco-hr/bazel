{
  if (file == null) {
    throw new NullPointerException();
  }
  byte[] fixedSizeData=new byte[FIXED_DATA_SIZE];
  if (ZipUtil.readFully(in,fixedSizeData) != FIXED_DATA_SIZE) {
    throw new ZipException("Unexpected end of file while reading End of Central Directory Record.");
  }
  if (!ZipUtil.arrayStartsWith(fixedSizeData,ZipUtil.intToLittleEndian(SIGNATURE))) {
    throw new ZipException(String.format("Malformed End of Central Directory Record; does not start with %08x",SIGNATURE));
  }
  byte[] comment=new byte[ZipUtil.getUnsignedShort(fixedSizeData,COMMENT_LENGTH_OFFSET)];
  if (comment.length > 0 && ZipUtil.readFully(in,comment) != comment.length) {
    throw new ZipException("Unexpected end of file while reading End of Central Directory Record.");
  }
  short diskNumber=ZipUtil.get16(fixedSizeData,DISK_NUMBER_OFFSET);
  short centralDirectoryDisk=ZipUtil.get16(fixedSizeData,CD_DISK_OFFSET);
  short entriesOnDisk=ZipUtil.get16(fixedSizeData,DISK_ENTRIES_OFFSET);
  short totalEntries=ZipUtil.get16(fixedSizeData,TOTAL_ENTRIES_OFFSET);
  int centralDirectorySize=ZipUtil.get32(fixedSizeData,CD_SIZE_OFFSET);
  int centralDirectoryOffset=ZipUtil.get32(fixedSizeData,CD_OFFSET_OFFSET);
  if (diskNumber == -1 || centralDirectoryDisk == -1 || entriesOnDisk == -1 || totalEntries == -1 || centralDirectorySize == -1 || centralDirectoryOffset == -1) {
    file.setMaybeZip64(true);
  }
  file.setComment(comment);
  file.setCentralDirectorySize(ZipUtil.getUnsignedInt(fixedSizeData,CD_SIZE_OFFSET));
  file.setCentralDirectoryOffset(ZipUtil.getUnsignedInt(fixedSizeData,CD_OFFSET_OFFSET));
  file.setExpectedEntries(ZipUtil.getUnsignedShort(fixedSizeData,TOTAL_ENTRIES_OFFSET));
  return file;
}
