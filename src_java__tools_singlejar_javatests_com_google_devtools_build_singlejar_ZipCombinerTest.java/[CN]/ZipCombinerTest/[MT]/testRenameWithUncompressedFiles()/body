{
  MockZipEntryFilter mockFilter=new MockZipEntryFilter();
  mockFilter.behavior.put("hello.txt",COPY_PLACEHOLDER);
  mockFilter.behavior.put("hello2.txt",COPY_PLACEHOLDER);
  mockFilter.renameMap.putAll("hello.txt",Arrays.asList("hello1.txt","hello2.txt","hello3.txt"));
  mockFilter.renameMap.put("hello2.txt","hello2.txt");
  ByteArrayOutputStream out=new ByteArrayOutputStream();
  try (ZipCombiner zipCombiner=new ZipCombiner(mockFilter,out)){
    zipCombiner.addZip(sampleZipWithTwoUncompressedEntries());
    zipCombiner.addZip(sampleZipWithTwoUncompressedEntries());
    zipCombiner.addZip(sampleZipWithTwoUncompressedEntries());
  }
   assertThat(mockFilter.calls).containsExactly("hello.txt","hello2.txt","hello.txt","hello2.txt","hello.txt","hello2.txt").inOrder();
  ZipInputStream zipInput=new ZipInputStream(new ByteArrayInputStream(out.toByteArray()));
  assertEntry(zipInput,"hello1.txt","Hello World!");
  assertEntry(zipInput,"hello2.txt","Hello World 2!");
  assertEntry(zipInput,"hello3.txt","Hello World!");
  assertNull(zipInput.getNextEntry());
}
