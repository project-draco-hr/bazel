{
  final Stopwatch timer=Stopwatch.createStarted();
  OptionsParser optionsParser=OptionsParser.newOptionsParser(Options.class);
  if (args.length == 1 && args[0].startsWith("@")) {
    args=Files.readAllLines(Paths.get(args[0].substring(1)),StandardCharsets.UTF_8).toArray(new String[0]);
  }
  optionsParser.parseAndExitUponError(args);
  Options options=optionsParser.getOptions(Options.class);
  Preconditions.checkNotNull(options.classJarOutput);
  final AndroidResourceProcessor resourceProcessor=new AndroidResourceProcessor(STD_LOGGER);
  try (ScopedTemporaryDirectory scopedTmp=new ScopedTemporaryDirectory("android_res_compile_tmp")){
    Path tmp=scopedTmp.getPath();
    Path classOutPath=tmp.resolve("compiled_classes");
    LOGGER.fine(String.format("Setup finished at %sms",timer.elapsed(TimeUnit.MILLISECONDS)));
    List<SymbolFileProvider> libraries=new ArrayList<>();
    for (    DependencySymbolFileProvider library : options.libraries) {
      libraries.add(library);
    }
    if (options.primaryRTxt != null) {
      String appPackageName=options.packageForR;
      if (appPackageName == null) {
        appPackageName=VariantConfiguration.getManifestPackage(options.primaryManifest.toFile());
      }
      Multimap<String,SymbolLoader> libSymbolMap=ArrayListMultimap.create();
      SymbolLoader fullSymbolValues=resourceProcessor.loadResourceSymbolTable(libraries,appPackageName,options.primaryRTxt,libSymbolMap);
      LOGGER.fine(String.format("Load symbols finished at %sms",timer.elapsed(TimeUnit.MILLISECONDS)));
      resourceProcessor.writePackageRClasses(libSymbolMap,fullSymbolValues,appPackageName,classOutPath,true);
      LOGGER.fine(String.format("Finished R.class at %sms",timer.elapsed(TimeUnit.MILLISECONDS)));
    }
 else {
      Files.createDirectories(classOutPath);
    }
    resourceProcessor.createClassJar(classOutPath,options.classJarOutput);
    LOGGER.fine(String.format("createClassJar finished at %sms",timer.elapsed(TimeUnit.MILLISECONDS)));
  }
  finally {
    resourceProcessor.shutdown();
  }
  LOGGER.fine(String.format("Compile action done in %sms",timer.elapsed(TimeUnit.MILLISECONDS)));
}
