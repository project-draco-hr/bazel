{
  final int flags=getUnsignedShort(headerBuffer,GENERAL_PURPOSE_FLAGS_OFFSET);
  final int method=getUnsignedShort(headerBuffer,COMPRESSION_METHOD_OFFSET);
  final long compressedSize=getUnsignedInt(headerBuffer,COMPRESSED_SIZE_OFFSET);
  final int fileNameLength=getUnsignedShort(headerBuffer,FILENAME_LENGTH_OFFSET);
  final int extraFieldLength=getUnsignedShort(headerBuffer,EXTRA_LENGTH_OFFSET);
  copyOrSkipData(in,fileNameLength,SkipMode.SKIP);
  copyOrSkipData(in,extraFieldLength,SkipMode.SKIP);
  if (method == STORED_METHOD) {
    mergeStrategy.merge(new FixedLengthInputStream(in,compressedSize),outputBuffer);
  }
 else   if (method == DEFLATE_METHOD) {
    inflater.reset();
    mergeStrategy.merge(new DeflateInputStream(in),outputBuffer);
    if ((flags & SIZE_MASKED_FLAG) != 0) {
      copyOrSkipData(in,16,SkipMode.SKIP);
    }
  }
 else {
    throw new AssertionError("This should have been checked in validateHeader().");
  }
}
