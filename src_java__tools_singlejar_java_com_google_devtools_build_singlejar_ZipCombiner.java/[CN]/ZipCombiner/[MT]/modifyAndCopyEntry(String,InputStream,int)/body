{
  final int method=getUnsignedShort(headerBuffer,COMPRESSION_METHOD_OFFSET);
  final int flags=getUnsignedShort(headerBuffer,GENERAL_PURPOSE_FLAGS_OFFSET);
  final int fileNameLength=getUnsignedShort(headerBuffer,FILENAME_LENGTH_OFFSET);
  final int extraFieldLength=getUnsignedShort(headerBuffer,EXTRA_LENGTH_OFFSET);
  forkOrSkipData(in,fileNameLength,SkipMode.SKIP);
  forkOrSkipData(in,extraFieldLength,SkipMode.SKIP);
  if (method == STORED_METHOD) {
    long compressedSize=getUnsignedInt(headerBuffer,COMPRESSED_SIZE_OFFSET);
    copyStreamToEntry(filename,new FixedLengthInputStream(in,compressedSize),dosTime,NO_EXTRA_ENTRIES,true,DEFAULT_DIRECTORY_ENTRY_INFO);
  }
 else   if (method == DEFLATE_METHOD) {
    inflater.reset();
    copyStreamToEntry(filename,new DeflateInputStream(in),dosTime,NO_EXTRA_ENTRIES,false,DEFAULT_DIRECTORY_ENTRY_INFO);
    if ((flags & SIZE_MASKED_FLAG) != 0) {
      copyOrSkipData(in,16,SkipMode.SKIP);
    }
  }
 else {
    throw new AssertionError("This should have been checked in validateHeader().");
  }
}
