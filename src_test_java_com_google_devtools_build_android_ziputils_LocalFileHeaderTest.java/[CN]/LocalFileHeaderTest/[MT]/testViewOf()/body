{
  ByteBuffer buffer=ByteBuffer.allocate(100).order(ByteOrder.LITTLE_ENDIAN);
  for (int i=0; i < 100; i++) {
    buffer.put((byte)i);
  }
  int offset=20;
  int filenameLength=10;
  int extraLength=25;
  int marker=LocalFileHeader.SIGNATURE;
  buffer.putShort(offset + ZipInputStream.LOCNAM,(short)filenameLength);
  buffer.putShort(offset + ZipInputStream.LOCEXT,(short)extraLength);
  buffer.putInt(offset,marker);
  buffer.position(offset);
  LocalFileHeader view=LocalFileHeader.viewOf(buffer);
  int expMark=(int)ZipInputStream.LOCSIG;
  int expSize=ZipInputStream.LOCHDR + filenameLength + extraLength;
  int expPos=0;
  assertEquals("not based at current position",expMark,view.get(LOCSIG));
  assertEquals("Not slice with position 0",expPos,view.buffer.position());
  assertEquals("Not sized with comment",expSize,view.getSize());
  assertEquals("Not limited to size",expSize,view.buffer.limit());
}
