{
  scratch.file("a/BUILD","filegroup(name='a', licenses=['restricted'], output_licenses=['unencumbered'])","alias(name='b', actual=':a')","filegroup(name='c', srcs=[':b'])","genrule(name='d', outs=['do'], tools=[':b'], cmd='cmd')","genrule(name='e', outs=['eo'], srcs=[':b'], cmd='cmd')");
  useConfiguration("--check_licenses");
  assertThat(getLicenses("//a:d","//a:a")).containsExactly(LicenseType.UNENCUMBERED);
  assertThat(getLicenses("//a:e","//a:a")).containsExactly(LicenseType.RESTRICTED);
  assertThat(getLicenses("//a:b","//a:a")).containsExactly(LicenseType.RESTRICTED);
  assertThat(getConfiguredTarget("//a:b").getProvider(LicensesProvider.class).getTransitiveLicenses()).hasSize(1);
}
