{
  ImmutableMap<ActionAnalysisMetadata,ConflictException> badActions=PrecomputedValue.BAD_ACTIONS.get(env);
  ConfiguredTargetValue ctValue=(ConfiguredTargetValue)env.getValue(ConfiguredTargetValue.key((ConfiguredTargetKey)skyKey.argument()));
  if (env.valuesMissing()) {
    return null;
  }
  for (  ActionAnalysisMetadata action : ctValue.getActions()) {
    if (badActions.containsKey(action)) {
      throw new ActionConflictFunctionException(badActions.get(action));
    }
  }
  ConfiguredTarget ct=ctValue.getConfiguredTarget();
  TargetAndConfiguration ctgValue=new TargetAndConfiguration(ct.getTarget(),ct.getConfiguration());
  ImmutableMap<Label,ConfigMatchingProvider> configConditions=getConfigurableAttributeConditions(ctgValue,env);
  if (configConditions == null) {
    return null;
  }
  OrderedSetMultimap<Attribute,Dependency> deps;
  try {
    BuildConfiguration hostConfiguration=buildViewProvider.getSkyframeBuildView().getHostConfiguration(ct.getConfiguration());
    SkyframeDependencyResolver resolver=buildViewProvider.getSkyframeBuildView().createDependencyResolver(env);
    deps=resolver.dependentNodeMap(ctgValue,hostConfiguration,null,configConditions);
    if (ct.getConfiguration() != null && ct.getConfiguration().useDynamicConfigurations()) {
      deps=ConfiguredTargetFunction.trimConfigurations(env,ctgValue,deps,hostConfiguration,ruleClassProvider);
    }
  }
 catch (  EvalException e) {
    throw new PostConfiguredTargetFunctionException(e);
  }
catch (  ConfiguredTargetFunction.DependencyEvaluationException e) {
    throw new PostConfiguredTargetFunctionException(e);
  }
catch (  InvalidConfigurationException e) {
    throw new PostConfiguredTargetFunctionException(e);
  }
  env.getValues(Iterables.transform(deps.values(),TO_KEYS));
  if (env.valuesMissing()) {
    return null;
  }
  return new PostConfiguredTargetValue(ct);
}
