{
  assertThat((Iterable<Object>)eval("['foo/%s.java' % x for x in []]")).isEmpty();
  assertThat((Iterable<Object>)eval("['foo/%s.java' % y for y in ['bar', 'wiz', 'quux']]")).containsExactly("foo/bar.java","foo/wiz.java","foo/quux.java").inOrder();
  assertThat((Iterable<Object>)eval("['%s/%s.java' % (z, t) " + "for z in ['foo', 'bar'] " + "for t in ['baz', 'wiz', 'quux']]")).containsExactly("foo/baz.java","foo/wiz.java","foo/quux.java","bar/baz.java","bar/wiz.java","bar/quux.java").inOrder();
  assertThat((Iterable<Object>)eval("['%s/%s.java' % (b, b) " + "for a in ['foo', 'bar'] " + "for b in ['baz', 'wiz', 'quux']]")).containsExactly("baz/baz.java","wiz/wiz.java","quux/quux.java","baz/baz.java","wiz/wiz.java","quux/quux.java").inOrder();
  assertThat((Iterable<Object>)eval("['%s/%s.%s' % (c, d, e) " + "for c in ['foo', 'bar'] " + "for d in ['baz', 'wiz', 'quux'] "+ "for e in ['java', 'cc']]")).containsExactly("foo/baz.java","foo/baz.cc","foo/wiz.java","foo/wiz.cc","foo/quux.java","foo/quux.cc","bar/baz.java","bar/baz.cc","bar/wiz.java","bar/wiz.cc","bar/quux.java","bar/quux.cc").inOrder();
}
