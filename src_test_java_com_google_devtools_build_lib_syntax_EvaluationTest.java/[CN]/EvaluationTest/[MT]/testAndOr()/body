{
  assertEquals(8,eval("8 or 9"));
  assertEquals(9,eval("0 or 9"));
  assertEquals(9,eval("8 and 9"));
  assertEquals(0,eval("0 and 9"));
  assertEquals(2,eval("1 and 2 or 3"));
  assertEquals(3,eval("0 and 2 or 3"));
  assertEquals(3,eval("1 and 0 or 3"));
  assertEquals(1,eval("1 or 2 and 3"));
  assertEquals(3,eval("0 or 2 and 3"));
  assertEquals(0,eval("0 or 0 and 3"));
  assertEquals(1,eval("1 or 0 and 3"));
  assertEquals(1,eval("1 or 0 and 3"));
  assertEquals(Environment.NONE,eval("None and 1"));
  if (isSkylark()) {
    checkEvalError("ERROR 1:6: name 'foo' is not defined","8 or foo");
    checkEvalError("ERROR 1:7: name 'foo' is not defined","0 and foo");
    checkEvalError("ERROR 1:7: bad or operator: int is incompatible with string at 1:1","\"\" or 9");
    checkEvalError("ERROR 1:10: bad or operator: int is incompatible with string at 1:1","\"abc\" or 9");
  }
 else {
    assertEquals(8,eval("8 or foo"));
    assertEquals(0,eval("0 and foo"));
    assertEquals(9,eval("\"\" or 9"));
    assertEquals("abc",eval("\"abc\" or 9"));
  }
}
