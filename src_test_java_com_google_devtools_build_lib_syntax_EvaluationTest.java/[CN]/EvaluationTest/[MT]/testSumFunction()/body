{
  Function sum=new AbstractFunction("sum"){
    @Override public Object call(    List<Object> args,    Map<String,Object> kwargs,    FuncallExpression ast,    Environment env){
      int sum=0;
      for (      Object arg : args) {
        sum+=(Integer)arg;
      }
      return sum;
    }
  }
;
  Environment env=singletonEnv(sum.getName(),sum);
  String callExpr="sum(1, 2, 3, 4, 5, 6)";
  assertEquals(21,eval(callExpr,env));
  assertEquals(sum,eval("sum",env));
  assertEquals(0,eval("sum(a=1, b=2)",env));
  env=new Environment();
  exec(parseStmt("sum = 123456"),env);
  assertEquals(123456,env.lookup("sum"));
  checkEvalError(callExpr,env,"'int' object is not callable");
  assertEquals(123456,eval("sum",env));
}
