{
  Fingerprint f=new Fingerprint();
  f.addString(GUID);
  f.addInt(privateHeaders.size());
  for (  Artifact artifact : privateHeaders) {
    f.addPath(artifact.getExecPath());
  }
  f.addInt(publicHeaders.size());
  for (  Artifact artifact : publicHeaders) {
    f.addPath(artifact.getExecPath());
  }
  f.addInt(dependencies.size());
  for (  CppModuleMap dep : dependencies) {
    f.addPath(dep.getArtifact().getExecPath());
  }
  f.addInt(additionalExportedHeaders.size());
  for (  PathFragment path : additionalExportedHeaders) {
    f.addPath(path);
  }
  f.addPath(cppModuleMap.getArtifact().getExecPath());
  f.addString(cppModuleMap.getName());
  f.addBoolean(moduleMapHomeIsCwd);
  f.addBoolean(compiledModule);
  f.addBoolean(generateSubmodules);
  f.addBoolean(externDependencies);
  return f.hexDigestAndReset();
}
