{
  Options options=buildOptions.get(BuildConfiguration.Options.class);
  Label gcovLabel=null;
  if (options.collectCodeCoverage) {
    try {
      gcovLabel=Label.parseAbsolute("//third_party/gcov:gcov_for_xcode");
      env.getTarget(gcovLabel);
    }
 catch (    Label.SyntaxException|NoSuchPackageException|NoSuchTargetException e) {
      throw new InvalidConfigurationException("Error parsing or loading objc coverage label: " + e.getMessage(),e);
    }
  }
  return new ObjcConfiguration(buildOptions.get(ObjcCommandLineOptions.class),options,gcovLabel);
}
