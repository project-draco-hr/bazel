{
  final List<DelayedFuture> futureList=new ArrayList<>();
  for (int i=1; i < 6; i++) {
    DelayedFuture future=new DelayedFuture(i * 1000);
    executorService.execute(future);
    futureList.add(future);
  }
  DelayedFuture toFail=new DelayedFuture(1000);
  futureList.add(toFail);
  toFail.makeItFail();
  ListenableFuture<List<Object>> list=MoreFutures.allAsListOrCancelAll(futureList);
  try {
    list.get();
    fail("This should fail");
  }
 catch (  InterruptedException|ExecutionException ignored) {
  }
  Thread.sleep(100);
  for (  DelayedFuture delayedFuture : futureList) {
    assertTrue(delayedFuture.wasCanceled || delayedFuture == toFail);
    assertFalse(delayedFuture.wasInterrupted);
  }
}
