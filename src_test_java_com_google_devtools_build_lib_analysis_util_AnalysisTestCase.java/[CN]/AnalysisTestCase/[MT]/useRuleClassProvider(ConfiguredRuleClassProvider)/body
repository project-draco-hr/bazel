{
  this.ruleClassProvider=ruleClassProvider;
  PackageFactory pkgFactory=new PackageFactory(ruleClassProvider);
  skyframeExecutor=SequencedSkyframeExecutor.create(reporter,pkgFactory,new TimestampGranularityMonitor(BlazeClock.instance()),directories,workspaceStatusActionFactory,ruleClassProvider.getBuildInfoFactories(),ImmutableSet.<Path>of(),ImmutableList.<DiffAwareness.Factory>of(),Predicates.<PathFragment>alwaysFalse(),Preprocessor.Factory.Supplier.NullSupplier.INSTANCE,ImmutableMap.<SkyFunctionName,SkyFunction>of(),getPrecomputedValues());
  skyframeExecutor.preparePackageLoading(pkgLocator,Options.getDefaults(PackageCacheOptions.class).defaultVisibility,true,3,ruleClassProvider.getDefaultsPackageContent(),UUID.randomUUID());
  packageManager=skyframeExecutor.getPackageManager();
  loadingPhaseRunner=new LoadingPhaseRunner(packageManager,pkgFactory.getRuleClassNames());
  buildView=new BuildView(directories,skyframeExecutor.getPackageManager(),ruleClassProvider,skyframeExecutor,BinTools.forUnitTesting(directories,TestConstants.EMBEDDED_TOOLS),null);
  useConfiguration();
}
