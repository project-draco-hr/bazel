{
  scratch.file("com/google/example/BUILD","cc_binary(","    name = 'simple',","    srcs = ['simple/simple.cc'],",")");
  Map<String,RuleIdeInfo> ruleIdeInfos=buildRuleIdeInfo("//com/google/example:simple");
  assertThat(ruleIdeInfos).hasSize(2);
  RuleIdeInfo ruleIdeInfo=getRuleInfoAndVerifyLabel("//com/google/example:simple",ruleIdeInfos);
  ArtifactLocation location=ruleIdeInfo.getBuildFileArtifactLocation();
  assertThat(Paths.get(location.getRelativePath()).toString()).isEqualTo(Paths.get("com/google/example/BUILD").toString());
  assertThat(ruleIdeInfo.getKindString()).isEqualTo("cc_binary");
  assertThat(ruleIdeInfo.getDependenciesCount()).isEqualTo(1);
  assertThat(relativePathsForCSourcesOf(ruleIdeInfo)).containsExactly("com/google/example/simple/simple.cc");
  assertThat(ruleIdeInfo.hasCRuleIdeInfo()).isTrue();
  assertThat(ruleIdeInfo.hasJavaRuleIdeInfo()).isFalse();
  assertThat(ruleIdeInfo.hasAndroidRuleIdeInfo()).isFalse();
  CRuleIdeInfo cRuleIdeInfo=ruleIdeInfo.getCRuleIdeInfo();
  assertThat(cRuleIdeInfo.getRuleCoptList()).isEmpty();
  assertThat(cRuleIdeInfo.getRuleDefineList()).isEmpty();
  assertThat(cRuleIdeInfo.getRuleIncludeList()).isEmpty();
  assertThat(ruleIdeInfo.getJavaRuleIdeInfo().getJarsList()).isEmpty();
  assertThat(getIdeResolveFiles()).isEmpty();
}
