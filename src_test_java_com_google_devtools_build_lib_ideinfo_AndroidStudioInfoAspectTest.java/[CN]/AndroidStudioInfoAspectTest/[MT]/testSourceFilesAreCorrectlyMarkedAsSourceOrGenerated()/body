{
  scratch.file("com/google/example/BUILD","genrule(","   name = 'gen',","   outs = ['gen.java'],","   cmd = '',",")","java_library(","    name = 'lib',","    srcs = ['Test.java', ':gen'],",")");
  Map<String,RuleIdeInfo> ruleIdeInfos=buildRuleIdeInfo("//com/google/example:lib");
  RuleIdeInfo ruleIdeInfo=getRuleInfoAndVerifyLabel("//com/google/example:lib",ruleIdeInfos);
  assertThat(ruleIdeInfo.getJavaRuleIdeInfo().getSourcesList()).containsExactly(ArtifactLocation.newBuilder().setRootPath(isNativeTest() ? targetConfig.getGenfilesDirectory().getPath().getPathString() : "").setRootExecutionPathFragment(targetConfig.getGenfilesDirectory().getExecPathString()).setRelativePath("com/google/example/gen.java").setIsSource(false).build(),ArtifactLocation.newBuilder().setRootPath(isNativeTest() ? directories.getWorkspace().getPathString() : "").setRelativePath("com/google/example/Test.java").setIsSource(true).build());
}
