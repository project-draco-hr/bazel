{
  scratch.file("java/com/google/example/BUILD","java_library(","  name = 'test',","  plugins = [':plugin']",")","java_plugin(","  name = 'plugin',","  processor_class = 'com.google.example.Plugin',","  deps = ['plugin_lib'],",")","java_library(","  name = 'plugin_lib',","  srcs = ['Plugin.java'],",")");
  Map<String,RuleIdeInfo> ruleIdeInfos=buildRuleIdeInfo("//java/com/google/example:test");
  RuleIdeInfo ruleIdeInfo=getRuleInfoAndVerifyLabel("//java/com/google/example:test",ruleIdeInfos);
  assertThat(transform(ruleIdeInfo.getJavaRuleIdeInfo().getGeneratedJarsList(),LIBRARY_ARTIFACT_TO_STRING)).containsExactly(jarString("java/com/google/example","libtest-gen.jar",null,"libtest-gensrc.jar"));
  assertThat(relativePathsForSourcesOf(ruleIdeInfo)).isEmpty();
}
