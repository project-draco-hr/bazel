{
  scratch.file("com/google/example/BUILD","java_library(","    name = 'simple',","    srcs = ['simple/Simple.java']",")","java_library(","    name = 'complex',","    srcs = ['complex/Complex.java'],","    deps = [':simple']",")","java_library(","    name = 'complex1',","    srcs = ['complex1/Complex.java'],","    deps = [':simple']",")","java_library(","    name = 'extracomplex',","    srcs = ['extracomplex/ExtraComplex.java'],","    deps = [':complex', ':complex1']",")");
  Map<String,RuleIdeInfo> ruleIdeInfos=buildRuleIdeInfo("//com/google/example:extracomplex");
  getRuleInfoAndVerifyLabel("//com/google/example:simple",ruleIdeInfos);
  getRuleInfoAndVerifyLabel("//com/google/example:complex",ruleIdeInfos);
  getRuleInfoAndVerifyLabel("//com/google/example:complex1",ruleIdeInfos);
  RuleIdeInfo extraComplexRuleIdeInfo=getRuleInfoAndVerifyLabel("//com/google/example:extracomplex",ruleIdeInfos);
  assertThat(relativePathsForJavaSourcesOf(extraComplexRuleIdeInfo)).containsExactly("com/google/example/extracomplex/ExtraComplex.java");
  assertThat(extraComplexRuleIdeInfo.getDependenciesList()).containsAllOf("//com/google/example:complex","//com/google/example:complex1");
}
