{
  scratch.file("com/google/example/BUILD","cc_library(","    name = 'simple',","    srcs = ['simple/simple.cc'],","    hdrs = ['simple/simple.h'],","    copts = ['-DGOPT', '-Ifoo/baz/'],",")");
  Map<String,RuleIdeInfo> ruleIdeInfos=buildRuleIdeInfo("//com/google/example:simple");
  assertThat(ruleIdeInfos).hasSize(2);
  RuleIdeInfo ruleIdeInfo=getRuleInfoAndVerifyLabel("//com/google/example:simple",ruleIdeInfos);
  assertThat(ruleIdeInfo.hasCRuleIdeInfo()).isTrue();
  CRuleIdeInfo cRuleIdeInfo=ruleIdeInfo.getCRuleIdeInfo();
  assertThat(cRuleIdeInfo.getRuleCoptList()).containsExactly("-DGOPT","-Ifoo/baz/");
  Entry<String,RuleIdeInfo> toolchainEntry=getCcToolchainRuleAndVerifyThereIsOnlyOne(ruleIdeInfos);
  RuleIdeInfo toolchainInfo=toolchainEntry.getValue();
  assertThat(toolchainInfo.hasCToolchainIdeInfo()).isTrue();
  CToolchainIdeInfo cToolchainIdeInfo=toolchainInfo.getCToolchainIdeInfo();
  ProtocolStringList baseCompilerOptionList=cToolchainIdeInfo.getBaseCompilerOptionList();
  assertThat(baseCompilerOptionList).doesNotContain("-DGOPT");
  assertThat(baseCompilerOptionList).doesNotContain("-Ifoo/baz/");
  ProtocolStringList cOptionList=cToolchainIdeInfo.getCOptionList();
  assertThat(cOptionList).doesNotContain("-DGOPT");
  assertThat(cOptionList).doesNotContain("-Ifoo/baz/");
  ProtocolStringList cppOptionList=cToolchainIdeInfo.getCppOptionList();
  assertThat(cppOptionList).doesNotContain("-DGOPT");
  assertThat(cppOptionList).doesNotContain("-Ifoo/baz/");
}
