{
  List<Artifact> instrumentedObjectFiles=new ArrayList<>();
  instrumentedObjectFiles.addAll(ccCompilationOutputs.getObjectFiles(false));
  instrumentedObjectFiles.addAll(ccCompilationOutputs.getObjectFiles(true));
  builder.setFilesToBuild(filesToBuild).add(CppCompilationContext.class,cppCompilationContext).add(TransitiveLipoInfoProvider.class,transitiveLipoInfo).add(CcExecutionDynamicLibrariesProvider.class,new CcExecutionDynamicLibrariesProvider(collectExecutionDynamicLibraryArtifacts(ruleContext,linkingOutputs.getExecutionDynamicLibraries()))).add(CcNativeLibraryProvider.class,new CcNativeLibraryProvider(collectTransitiveCcNativeLibraries(ruleContext,linkingOutputs.getDynamicLibraries()))).add(InstrumentedFilesProvider.class,common.getInstrumentedFilesProvider(instrumentedObjectFiles)).add(CppDebugFileProvider.class,new CppDebugFileProvider(dwoArtifacts.getDwoArtifacts(),dwoArtifacts.getPicDwoArtifacts())).addOutputGroup(OutputGroupProvider.TEMP_FILES,getTemps(cppConfiguration,ccCompilationOutputs)).addOutputGroup(OutputGroupProvider.FILES_TO_COMPILE,common.getFilesToCompile(ccCompilationOutputs)).addOutputGroup(OutputGroupProvider.COMPILATION_PREREQUISITES,CcCommon.collectCompilationPrerequisites(ruleContext,cppCompilationContext));
}
