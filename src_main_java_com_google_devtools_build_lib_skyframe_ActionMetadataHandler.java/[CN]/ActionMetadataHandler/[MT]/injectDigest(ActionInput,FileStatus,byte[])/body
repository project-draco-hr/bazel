{
  if (output instanceof Artifact) {
    Artifact artifact=(Artifact)output;
    Preconditions.checkState(injectedArtifacts.add(artifact),artifact);
    FileValue fileValue;
    try {
      fileValue=fileValueFromArtifact(artifact,FileStatusWithDigestAdapter.adapt(statNoFollow),tsgm);
      byte[] fileDigest=fileValue.getDigest();
      if (fileDigest != null && !Arrays.equals(digest,fileDigest)) {
        BaseEncoding base16=BaseEncoding.base16();
        String digestString=(digest != null) ? base16.encode(digest) : "null";
        String fileDigestString=(fileDigest != null) ? base16.encode(fileDigest) : "null";
        throw new IllegalStateException("Expected digest " + digestString + " for artifact "+ artifact+ ", but got "+ fileDigestString);
      }
      outputArtifactData.put(artifact,fileValue);
    }
 catch (    IOException e) {
      return;
    }
    try {
      maybeStoreAdditionalData(artifact,fileValue,digest);
    }
 catch (    IOException e) {
      if (fileValue.getSize() != 0) {
        throw new IllegalStateException("Filesystem should not have been accessed while injecting data for " + artifact.prettyPrint(),e);
      }
    }
  }
}
