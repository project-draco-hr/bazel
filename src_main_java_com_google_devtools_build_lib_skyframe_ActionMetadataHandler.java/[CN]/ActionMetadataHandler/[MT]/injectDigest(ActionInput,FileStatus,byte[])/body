{
  if (output instanceof ArtifactFile) {
    final ArtifactFile file=(ArtifactFile)output;
    Preconditions.checkState(injectedFiles.add(file),file);
    FileValue fileValue;
    try {
      fileValue=fileValueFromArtifactFile(file,FileStatusWithDigestAdapter.adapt(statNoFollow),tsgm);
      byte[] fileDigest=fileValue.getDigest();
      if (fileDigest != null && !Arrays.equals(digest,fileDigest)) {
        BaseEncoding base16=BaseEncoding.base16();
        String digestString=(digest != null) ? base16.encode(digest) : "null";
        String fileDigestString=base16.encode(fileDigest);
        throw new IllegalStateException("Expected digest " + digestString + " for artifact "+ file+ ", but got "+ fileDigestString+ " ("+ fileValue+ ")");
      }
      outputArtifactFileData.put(file,fileValue);
    }
 catch (    IOException e) {
      return;
    }
    try {
      maybeStoreAdditionalData(file,fileValue,digest);
    }
 catch (    IOException e) {
      if (fileValue.getSize() != 0) {
        throw new IllegalStateException("Filesystem should not have been accessed while injecting data for " + file.prettyPrint(),e);
      }
    }
  }
}
