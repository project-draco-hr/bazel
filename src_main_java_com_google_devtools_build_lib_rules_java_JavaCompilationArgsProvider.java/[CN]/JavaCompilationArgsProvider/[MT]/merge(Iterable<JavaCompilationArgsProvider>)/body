{
  JavaCompilationArgs.Builder javaCompilationArgs=JavaCompilationArgs.builder();
  JavaCompilationArgs.Builder recursiveJavaCompilationArgs=JavaCompilationArgs.builder();
  NestedSetBuilder<Artifact> compileTimeJavaDepArtifacts=NestedSetBuilder.stableOrder();
  NestedSetBuilder<Artifact> runTimeJavaDepArtifacts=NestedSetBuilder.stableOrder();
  for (  JavaCompilationArgsProvider provider : providers) {
    javaCompilationArgs.addTransitiveArgs(provider.getJavaCompilationArgs(),JavaCompilationArgs.ClasspathType.BOTH);
    recursiveJavaCompilationArgs.addTransitiveArgs(provider.getRecursiveJavaCompilationArgs(),JavaCompilationArgs.ClasspathType.BOTH);
    compileTimeJavaDepArtifacts.addTransitive(provider.getCompileTimeJavaDependencyArtifacts());
    runTimeJavaDepArtifacts.addTransitive(provider.getRunTimeJavaDependencyArtifacts());
  }
  return JavaCompilationArgsProvider.create(javaCompilationArgs.build(),recursiveJavaCompilationArgs.build(),compileTimeJavaDepArtifacts.build(),runTimeJavaDepArtifacts.build());
}
