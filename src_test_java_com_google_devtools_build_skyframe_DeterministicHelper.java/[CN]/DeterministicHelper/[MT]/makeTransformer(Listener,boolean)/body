{
  if (deterministic) {
    return new MemoizingEvaluator.GraphTransformerForTesting(){
      @Override public InMemoryGraph transform(      InMemoryGraph graph){
        return new DeterministicInMemoryGraph(graph,listener);
      }
      @Override public InvalidatableGraph transform(      InvalidatableGraph graph){
        return new DeterministicInvalidatableGraph(graph,listener);
      }
      @Override public ProcessableGraph transform(      ProcessableGraph graph){
        return new DeterministicProcessableGraph(graph,listener);
      }
    }
;
  }
 else {
    return NotifyingHelper.makeNotifyingTransformer(listener);
  }
}
