def RunJ2ObjC(java, jvm_flags, j2objc, main_class, j2objc_args):
    'Runs J2ObjC transpiler to translate Java source files to ObjC.\n\n  Args:\n    java: The path of the Java executable.\n    jvm_flags: A comma-separated list of flags to pass to JVM.\n    j2objc: The deploy jar of J2ObjC.\n    main_class: The J2ObjC main class to invoke.\n    j2objc_args: A list of args to pass to J2ObjC transpiler.\n  Returns:\n    None.\n  '
    (source_files, flags) = _ParseArgs(j2objc_args)
    source_file_manifest_content = ' '.join(source_files)
    fd = None
    param_filename = None
    try:
        (fd, param_filename) = tempfile.mkstemp(text=True)
        os.write(fd, source_file_manifest_content)
    finally:
        if fd:
            os.close(fd)
    try:
        j2objc_cmd = [java]
        j2objc_cmd.extend(filter(None, jvm_flags.split(',')))
        j2objc_cmd.extend(['-cp', j2objc, main_class])
        j2objc_cmd.extend(flags)
        j2objc_cmd.extend([('@%s' % param_filename)])
        subprocess.check_call(j2objc_cmd, stderr=subprocess.STDOUT)
    finally:
        if param_filename:
            os.remove(param_filename)
