def add_file(self, name, kind=tarfile.REGTYPE, content=None, link=None, file_content=None, uid=0, gid=0, uname='', gname='', mtime=0, mode=None):
    'Add a file to the current tar.\n\n    Args:\n      name: the name of the file to add.\n      kind: the type of the file to add, see tarfile.*TYPE.\n      content: a textual content to put in the file.\n      link: if the file is a link, the destination of the link.\n      file_content: file to read the content from. Provide either this\n          one or `content` to specifies a content for the file.\n      uid: owner user identifier.\n      gid: owner group identifier.\n      uname: owner user names.\n      gname: owner group names.\n      mtime: modification time to put in the archive.\n      mode: unix permission mode of the file, default 0644 (0755).\n    '
    if (file_content and os.path.isdir(file_content)):
        self.add_dir(name, file_content, uid, gid, uname, gname, mtime, mode)
        return
    if (not ((name == '.') or name.startswith('/') or name.startswith('./'))):
        name = ('./' + name)
    if (kind == tarfile.DIRTYPE):
        name = name.rstrip('/')
        if (name in self.directories):
            return
    components = name.rsplit('/', 1)
    if (len(components) > 1):
        d = components[0]
        self.add_file(d, tarfile.DIRTYPE, uid=uid, gid=gid, uname=uname, gname=gname, mtime=mtime, mode=493)
    tarinfo = tarfile.TarInfo(name)
    tarinfo.mtime = mtime
    tarinfo.uid = uid
    tarinfo.gid = gid
    tarinfo.uname = uname
    tarinfo.gname = gname
    tarinfo.type = kind
    if (mode is None):
        tarinfo.mode = (420 if (kind == tarfile.REGTYPE) else 493)
    else:
        tarinfo.mode = mode
    if link:
        tarinfo.linkname = link
    if content:
        tarinfo.size = len(content)
        self._addfile(tarinfo, StringIO(content))
    elif file_content:
        with open(file_content, 'rb') as f:
            tarinfo.size = os.fstat(f.fileno()).st_size
            self._addfile(tarinfo, f)
    else:
        if (kind == tarfile.DIRTYPE):
            self.directories.add(name)
        self._addfile(tarinfo)
