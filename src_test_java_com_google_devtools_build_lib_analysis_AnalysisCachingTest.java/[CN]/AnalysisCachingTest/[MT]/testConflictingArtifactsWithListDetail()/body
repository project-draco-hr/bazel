{
  useConfiguration("--cpu=k8");
  scratch.file("conflict/BUILD","cc_library(name='x', srcs=['foo1.cc', 'foo2.cc', 'foo3.cc', 'foo4.cc', 'foo5.cc'" + ", 'foo6.cc'])","genrule(name = 'foo', outs=['_objs/x/conflict/foo1.pic.o'], srcs=['foo1.cc', 'foo2.cc', " + "'foo3.cc', 'foo4.cc', 'foo5.cc', 'foo6.cc'], cmd='', output_to_bindir=1)");
  reporter.removeHandler(failFastHandler);
  update(defaultFlags().with(Flag.KEEP_GOING),"//conflict:x","//conflict:foo");
  Event event=assertContainsEvent("file 'conflict/_objs/x/conflict/foo1.pic.o' " + CONFLICT_MSG);
  assertContainsEvent("MandatoryInputs");
  assertContainsEvent("Outputs");
  Pattern pattern=Pattern.compile("\tconflict\\/foo[1-6].cc");
  Matcher matcher=pattern.matcher(event.getMessage());
  int matchCount=0;
  while (matcher.find()) {
    matchCount++;
  }
  assertEquals(5,matchCount);
}
