{
  final Artifact archiveA=getSourceArtifact("myArchiveA.zip");
  final Artifact archiveB=getSourceArtifact("myArchiveB.zip");
  final Artifact treeArtifactToPopulateA=createTreeArtifact("testA/archive_member");
  final Artifact treeArtifactToPopulateB=createTreeArtifact("testB/archive_member");
  final Artifact archiveManifestA=getSourceArtifact("archiveManifestA.txt");
  final Artifact archiveManifestB=getSourceArtifact("archiveManifestB.txt");
  final FilesToRunProvider zipperA=FilesToRunProvider.fromSingleExecutableArtifact(getSourceArtifact("unzipBinaryA"));
  final FilesToRunProvider zipperB=FilesToRunProvider.fromSingleExecutableArtifact(getSourceArtifact("unzipBinaryB"));
  ActionTester.runTest(16,new ActionCombinationFactory(){
    @Override public Action generate(    int i){
      Artifact archive=(i & 1) == 0 ? archiveA : archiveB;
      Artifact treeArtifactToPopulate=(i & 2) == 0 ? treeArtifactToPopulateA : treeArtifactToPopulateB;
      Artifact archiveManifest=(i & 4) == 0 ? archiveManifestA : archiveManifestB;
      FilesToRunProvider zipper=(i & 8) == 0 ? zipperA : zipperB;
      return new PopulateTreeArtifactAction(ActionsTestUtil.NULL_ACTION_OWNER,archive,archiveManifest,treeArtifactToPopulate,zipper);
    }
  }
);
}
