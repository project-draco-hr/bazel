{
  Object selector1=new SelectorValue(ImmutableMap.of("//conditions:a",ImmutableList.of("//a:a"),"//conditions:b",ImmutableList.of("//b:b")));
  Object selector2=new SelectorValue(ImmutableMap.of("//conditions:c",ImmutableList.of("//c:c"),"//conditions:d",ImmutableList.of("//d:d")));
  Type.SelectorList<List<Label>> selectorList=new Type.SelectorList<>(ImmutableList.of(selector1,selector2),null,currentRule,Type.LABEL_LIST);
  assertEquals(Type.LABEL_LIST,selectorList.getOriginalType());
  assertSameContents(ImmutableSet.of(Label.parseAbsolute("//conditions:a"),Label.parseAbsolute("//conditions:b"),Label.parseAbsolute("//conditions:c"),Label.parseAbsolute("//conditions:d")),selectorList.getKeyLabels());
  List<Type.Selector<List<Label>>> selectors=selectorList.getSelectors();
  assertSameContents(ImmutableMap.of(Label.parseAbsolute("//conditions:a"),ImmutableList.of(Label.create("a","a")),Label.parseAbsolute("//conditions:b"),ImmutableList.of(Label.create("b","b"))).entrySet(),selectors.get(0).getEntries().entrySet());
  assertSameContents(ImmutableMap.of(Label.parseAbsolute("//conditions:c"),ImmutableList.of(Label.create("c","c")),Label.parseAbsolute("//conditions:d"),ImmutableList.of(Label.create("d","d"))).entrySet(),selectors.get(1).getEntries().entrySet());
}
