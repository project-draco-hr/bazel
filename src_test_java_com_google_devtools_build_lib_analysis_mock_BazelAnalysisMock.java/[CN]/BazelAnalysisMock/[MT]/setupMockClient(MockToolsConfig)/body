{
  String bazelToolWorkspace=config.getPath("/bazel_tools_workspace").getPathString();
  ArrayList<String> workspaceContents=new ArrayList<>(ImmutableList.of("local_repository(name = 'bazel_tools', path = '" + bazelToolWorkspace + "')","bind(","  name = 'objc_proto_lib',","  actual = '//objcproto:ProtocolBuffers_lib',",")","bind(","  name = 'objc_proto_cpp_lib',","  actual = '//objcproto:ProtocolBuffersCPP_lib',",")","bind(name = 'android/sdk', actual='@bazel_tools//tools/android:sdk')","bind(name = 'tools/python', actual='//tools/python')"));
  config.overwrite("WORKSPACE",workspaceContents.toArray(new String[workspaceContents.size()]));
  config.create("/bazel_tools_workspace/WORKSPACE","workspace(name = 'bazel_tools')");
  config.create("/bazel_tools_workspace/tools/jdk/BUILD","package(default_visibility=['//visibility:public'])","java_toolchain(name = 'toolchain', encoding = 'UTF-8', source_version = '8', ","  target_version = '8')","filegroup(name = 'jdk-null')","filegroup(name = 'jdk-default', srcs = [':java'], path = 'jdk/jre')","filegroup(name = 'jdk', srcs = [':jdk-default', ':jdk-null'])","filegroup(name='langtools', srcs=['jdk/lib/tools.jar'])","filegroup(name='bootclasspath', srcs=['jdk/jre/lib/rt.jar'])","filegroup(name='extdir', srcs=glob(['jdk/jre/lib/ext/*']))","filegroup(name='java', srcs = ['jdk/jre/bin/java', 'dummy'])","exports_files(['JavaBuilder_deploy.jar','SingleJar_deploy.jar','TestRunner_deploy.jar',","               'JavaBuilderCanary_deploy.jar', 'ijar', 'GenClass_deploy.jar',","               'turbine_deploy.jar'])");
  ImmutableList<String> androidBuildContents=createAndroidBuildContents();
  config.create("/bazel_tools_workspace/tools/android/BUILD",androidBuildContents.toArray(new String[androidBuildContents.size()]));
  config.create("/bazel_tools_workspace/tools/genrule/BUILD","exports_files(['genrule-setup.sh'])");
  config.create("/bazel_tools_workspace/third_party/java/jarjar/BUILD","package(default_visibility=['//visibility:public'])","licenses(['notice'])","java_binary(name = 'jarjar_bin',","            runtime_deps = [ ':jarjar_import' ],","            main_class = 'com.tonicsystems.jarjar.Main')","java_import(name = 'jarjar_import',","            jars = [ 'jarjar.jar' ])");
  config.create("/bazel_tools_workspace/tools/test/BUILD","filegroup(name = 'runtime')");
  config.create("/bazel_tools_workspace/tools/python/BUILD","package(default_visibility=['//visibility:public'])","exports_files(['precompile.py'])","sh_binary(name='2to3', srcs=['2to3.sh'])");
  ccSupport().setup(config);
}
