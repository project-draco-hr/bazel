{
  RuleClass androidSdkRuleClass=TestRuleClassProvider.getRuleClassProvider().getRuleClassMap().get("android_sdk");
  List<Attribute> attrs=androidSdkRuleClass.getAttributes();
  Builder<String> androidBuildContents=ImmutableList.builder();
  BuildRuleWithDefaultsBuilder ruleBuilder=new BuildRuleWithDefaultsBuilder("android_sdk","sdk").popuplateAttributes("",false);
  androidBuildContents.add(ruleBuilder.build());
  for (  BuildRuleBuilder generatedRuleBuilder : ruleBuilder.getRulesToGenerate()) {
    androidBuildContents.add(generatedRuleBuilder.build());
  }
  androidBuildContents.add("sh_binary(name = 'aar_generator', srcs = ['empty.sh'])").add("sh_binary(name = 'dexbuilder', srcs = ['empty.sh'])").add("sh_binary(name = 'dexmerger', srcs = ['empty.sh'])").add("sh_binary(name = 'resources_processor', srcs = ['empty.sh'])").add("sh_binary(name = 'resource_shrinker', srcs = ['empty.sh'])").add("android_library(name = 'incremental_stub_application')").add("android_library(name = 'incremental_split_stub_application')").add("sh_binary(name = 'stubify_manifest', srcs = ['empty.sh'])").add("sh_binary(name = 'merge_dexzips', srcs = ['empty.sh'])").add("sh_binary(name = 'merge_manifests', srcs = ['empty.sh'])").add("sh_binary(name = 'build_split_manifest', srcs = ['empty.sh'])").add("filegroup(name = 'debug_keystore', srcs = ['fake.file'])").add("sh_binary(name = 'shuffle_jars', srcs = ['empty.sh'])").add("sh_binary(name = 'strip_resources', srcs = ['empty.sh'])").add("sh_binary(name = 'build_incremental_dexmanifest', srcs = ['empty.sh'])").add("sh_binary(name = 'incremental_install', srcs = ['empty.sh'])").add("java_binary(name = 'PackageParser',").add("          runtime_deps = [ ':PackageParser_import'],").add("          main_class = 'com.google.devtools.build.android.ideinfo.PackageParser')").add("java_import(name = 'PackageParser_import',").add("          jars = [ 'package_parser_deploy.jar' ])").add("java_binary(name = 'IdlClass',").add("            runtime_deps = [ ':idlclass_import' ],").add("            main_class = 'com.google.devtools.build.android.idlclass.IdlClass')").add("java_import(name = 'idlclass_import',").add("            jars = [ 'idlclass.jar' ])");
  return androidBuildContents.build();
}
