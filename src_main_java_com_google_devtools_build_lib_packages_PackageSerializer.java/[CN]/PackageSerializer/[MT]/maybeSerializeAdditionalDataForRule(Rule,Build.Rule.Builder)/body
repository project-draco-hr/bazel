{
  if (rule.getRuleClassObject().isSkylark()) {
    builder.setIsSkylark(true);
    Collection<OutputFile> outputsFromAttributes=rule.getOutputFileMap().values();
    Set<Label> outputLabelsFromAttributes=Sets.newHashSetWithExpectedSize(outputsFromAttributes.size());
    for (    OutputFile outputFile : outputsFromAttributes) {
      outputLabelsFromAttributes.add(outputFile.getLabel());
    }
    for (    OutputFile outputFile : rule.getOutputFiles()) {
      Label label=outputFile.getLabel();
      if (!outputLabelsFromAttributes.contains(label)) {
        builder.addRuleOutput(label.getName());
      }
    }
    List<Attribute> attributes=rule.getRuleClassObject().getAttributes();
    for (    Attribute attribute : attributes) {
      ImmutableList<Aspect> aspects=attribute.getAspects(rule);
      for (      Aspect aspect : aspects) {
        if (aspect.getAspectClass() instanceof NativeAspectClass<?>) {
          continue;
        }
        SkylarkAspect skylarkAspect=serializeSkylarkAspect(rule,aspect);
        builder.addSkylarkAttributeAspects(AttributeAspect.newBuilder().setAttributeName(attribute.getName()).setAspect(skylarkAspect).build());
      }
    }
  }
}
