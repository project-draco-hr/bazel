{
  Preconditions.checkNotNull(ruleContext);
  Preconditions.checkNotNull(androidSdk);
  boolean useSanityChecks=ruleContext.getConfiguration().getFragment(AndroidConfiguration.class).isJackSanityChecked();
  FilesToRunProvider jackBinary=androidSdk.getJack();
  FilesToRunProvider jillBinary=androidSdk.getJill();
  FilesToRunProvider resourceExtractorBinary=androidSdk.getResourceExtractor();
  Artifact androidBaseLibraryForJack=androidSdk.getAndroidJack();
  return new JackCompilationHelper(ruleContext,useSanityChecks,Preconditions.checkNotNull(resourceExtractorBinary),Preconditions.checkNotNull(jackBinary),Preconditions.checkNotNull(jillBinary),Preconditions.checkNotNull(androidBaseLibraryForJack),Preconditions.checkNotNull(outputArtifact),ImmutableSet.copyOf(javaSources),ImmutableSet.copyOf(sourceJars),ImmutableMap.copyOf(resources),processorClasspathJars.build(),ImmutableSet.copyOf(processorNames),exportedJackLibraries.build(),ImmutableSet.copyOf(exportedNonLibraryFiles),classpathJackLibraries.build(),ImmutableSet.copyOf(classpathNonLibraryFiles),dexJacks.build(),ImmutableSet.copyOf(dexJars));
}
