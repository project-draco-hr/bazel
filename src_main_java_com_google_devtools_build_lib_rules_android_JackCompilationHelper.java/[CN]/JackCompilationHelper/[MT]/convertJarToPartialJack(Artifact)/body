{
  PathFragment outputPath=FileSystemUtils.replaceExtension(getPartialJackRoot().getRelative(jar.getRootRelativePath()),".jack");
  Artifact result=ruleContext.getAnalysisEnvironment().getDerivedArtifact(outputPath,ruleContext.getBinOrGenfilesDirectory());
  ruleContext.registerAction(new SpawnAction.Builder().setExecutable(jillBinary).addArgument(JILL_OUTPUT).addOutputArgument(result).addInputArgument(jar).setProgressMessage("Converting " + jar.getExecPath().getBaseName() + " to Jack library with Jill").setMnemonic("AndroidJill").build(ruleContext));
  return result;
}
