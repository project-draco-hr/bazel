{
  RuleClass ruleClass=ruleContext.getRule().getRuleClassObject();
  Set<Class<?>> missingFragments=new LinkedHashSet<>();
  for (  Class<?> fragment : ruleClass.getRequiredConfigurationFragments()) {
    if (!ruleContext.getConfiguration().hasFragment(fragment.asSubclass(Fragment.class))) {
      missingFragments.add(fragment);
    }
  }
  Preconditions.checkState(!missingFragments.isEmpty());
  StringBuilder result=new StringBuilder();
  result.append("all rules of type " + ruleClass.getName() + " require the presence of ");
  List<String> names=new ArrayList<>();
  for (  Class<?> fragment : missingFragments) {
    names.add(fragment.getSimpleName());
  }
  result.append("all of [");
  result.append(Joiner.on(",").join(names));
  result.append("], but these were all disabled");
  return result.toString();
}
