{
  WriteInputToFilesAction actionOne=new WriteInputToFilesAction(buttonOne,in,outOneFileOne,outOneFileTwo);
  registerAction(actionOne);
  CopyTreeAction actionTwo=new CopyTreeAction(buttonTwo,ImmutableList.of(outOneFileOne,outOneFileTwo),ImmutableList.of(outTwoFileOne,outTwoFileTwo));
  registerAction(actionTwo);
  buttonOne.pressed=buttonTwo.pressed=false;
  buildArtifact(outTwo);
  assertTrue(buttonOne.pressed);
  assertTrue(buttonTwo.pressed);
  buttonOne.pressed=buttonTwo.pressed=false;
  Path spuriousOutputOne=outOne.getPath().getRelative("spuriousOutput");
  touchFile(spuriousOutputOne);
  buildArtifact(outTwo);
  assertFalse(spuriousOutputOne.exists());
  assertTrue(buttonOne.pressed);
  assertFalse(buttonTwo.pressed);
  buttonOne.pressed=buttonTwo.pressed=false;
  Path spuriousOutputTwo=outTwo.getPath().getRelative("anotherSpuriousOutput");
  touchFile(spuriousOutputTwo);
  buildArtifact(outTwo);
  assertFalse(spuriousOutputTwo.exists());
  assertFalse(buttonOne.pressed);
  assertTrue(buttonTwo.pressed);
  buttonOne.pressed=buttonTwo.pressed=false;
  deleteFile(outOneFileOne);
  buildArtifact(outTwo);
  assertTrue(outOneFileOne.getPath().exists());
  assertTrue(buttonOne.pressed);
  assertFalse(buttonTwo.pressed);
  buttonOne.pressed=buttonTwo.pressed=false;
  deleteFile(outTwoFileOne);
  buildArtifact(outTwo);
  assertTrue(outTwoFileOne.getPath().exists());
  assertFalse(buttonOne.pressed);
  assertTrue(buttonTwo.pressed);
}
