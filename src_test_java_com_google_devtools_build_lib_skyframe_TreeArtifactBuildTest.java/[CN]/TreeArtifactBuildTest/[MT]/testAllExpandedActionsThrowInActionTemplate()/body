{
  reporter.removeHandler(failFastHandler);
  Artifact artifact1=createTreeArtifact("treeArtifact1");
  TreeFileArtifact treeFileArtifactA=ActionInputHelper.treeFileArtifact(artifact1,new PathFragment("child1"));
  TreeFileArtifact treeFileArtifactB=ActionInputHelper.treeFileArtifact(artifact1,new PathFragment("child2"));
  registerAction(new TouchingTestAction(treeFileArtifactA,treeFileArtifactB));
  Artifact artifact2=createTreeArtifact("treeArtifact2");
  SpawnActionTemplate actionTemplate=ActionsTestUtil.createDummySpawnActionTemplate(artifact1,artifact2);
  registerAction(actionTemplate);
  TreeFileArtifact expectedOutputTreeFileArtifact1=ActionInputHelper.treeFileArtifact(artifact2,new PathFragment("child1"));
  TreeFileArtifact expectedOutputTreeFileArtifact2=ActionInputHelper.treeFileArtifact(artifact2,new PathFragment("child2"));
  Action throwingAction=new ThrowingDummyAction(ImmutableList.<Artifact>of(treeFileArtifactA),ImmutableList.<Artifact>of(expectedOutputTreeFileArtifact1));
  Action anotherThrowingAction=new ThrowingDummyAction(ImmutableList.<Artifact>of(treeFileArtifactB),ImmutableList.<Artifact>of(expectedOutputTreeFileArtifact2));
  actionTemplateExpansionFunction=new DummyActionTemplateExpansionFunction(ImmutableMultimap.of(actionTemplate,throwingAction,actionTemplate,anotherThrowingAction));
  try {
    buildArtifact(artifact2);
    fail("Expected BuildFailedException");
  }
 catch (  BuildFailedException e) {
    assertThat(e.getMessage()).contains("Throwing dummy action");
  }
}
