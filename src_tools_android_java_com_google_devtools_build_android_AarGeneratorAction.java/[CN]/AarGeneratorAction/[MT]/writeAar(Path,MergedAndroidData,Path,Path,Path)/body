{
  try (final ZipOutputStream zipOut=new ZipOutputStream(new FileOutputStream(aar.toFile()))){
    ZipEntry manifestEntry=new ZipEntry("AndroidManifest.xml");
    zipOut.putNextEntry(manifestEntry);
    zipOut.write(Files.readAllBytes(manifest));
    zipOut.closeEntry();
    ZipEntry classJar=new ZipEntry("classes.jar");
    zipOut.putNextEntry(classJar);
    zipOut.write(Files.readAllBytes(classes));
    zipOut.closeEntry();
    Files.walkFileTree(data.getResourceDir(),new ZipDirectoryWriter(zipOut,data.getResourceDir(),"res"));
    ZipEntry r=new ZipEntry("R.txt");
    zipOut.putNextEntry(r);
    zipOut.write(Files.readAllBytes(rtxt));
    zipOut.closeEntry();
    if (Files.exists(data.getAssetDir()) && data.getAssetDir().toFile().list().length > 0) {
      Files.walkFileTree(data.getAssetDir(),new ZipDirectoryWriter(zipOut,data.getAssetDir(),"assets"));
    }
  }
   aar.toFile().setLastModified(EPOCH);
}
