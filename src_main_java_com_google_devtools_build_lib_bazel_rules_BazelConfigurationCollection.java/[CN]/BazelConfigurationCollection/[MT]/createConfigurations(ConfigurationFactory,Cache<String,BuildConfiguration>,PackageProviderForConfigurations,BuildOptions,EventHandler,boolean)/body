{
  BuildConfiguration targetConfiguration=configurationFactory.getConfiguration(loadedPackageProvider,buildOptions,false,cache);
  if (targetConfiguration == null) {
    return null;
  }
  BuildConfiguration dataConfiguration=targetConfiguration;
  BuildConfiguration hostConfiguration=getHostConfigurationFromRequest(configurationFactory,loadedPackageProvider,dataConfiguration,buildOptions,cache);
  if (hostConfiguration == null) {
    return null;
  }
  ListMultimap<SplitTransition<?>,BuildConfiguration> splitTransitionsTable=ArrayListMultimap.create();
  for (  SplitTransition<BuildOptions> transition : buildOptions.getPotentialSplitTransitions()) {
    List<BuildOptions> splitOptionsList=transition.split(buildOptions);
    for (    BuildOptions splitOptions : splitOptionsList) {
      BuildConfiguration splitConfig=configurationFactory.getConfiguration(loadedPackageProvider,splitOptions,false,cache);
      splitTransitionsTable.put(transition,splitConfig);
    }
  }
  if (loadedPackageProvider.valuesMissing()) {
    return null;
  }
  Set<Label> reachableLabels=new HashSet<>();
  if (performSanityCheck) {
    for (    Label label : buildOptions.getAllLabels().values()) {
      try {
        collectTransitiveClosure(loadedPackageProvider,reachableLabels,label);
      }
 catch (      NoSuchThingException e) {
        throw new IllegalStateException(e);
      }
    }
    sanityCheckImplicitLabels(reachableLabels,targetConfiguration);
    sanityCheckImplicitLabels(reachableLabels,hostConfiguration);
  }
  BuildConfiguration result=setupTransitions(targetConfiguration,dataConfiguration,hostConfiguration,splitTransitionsTable);
  result.reportInvalidOptions(errorEventListener);
  return result;
}
