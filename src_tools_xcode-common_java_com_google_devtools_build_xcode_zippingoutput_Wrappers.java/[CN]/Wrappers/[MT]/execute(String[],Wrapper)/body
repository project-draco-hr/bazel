{
  FileSystem filesystem=FileSystems.getDefault();
  ArgumentsParsing argsParsing=ArgumentsParsing.parse(filesystem,argsArray,wrapper.name(),wrapper.subtoolName());
  for (  String error : argsParsing.error().asSet()) {
    System.err.printf(error);
    System.exit(1);
  }
  Path tempDir=getTempDir(filesystem);
  for (  Arguments args : argsParsing.arguments().asSet()) {
    Path outputDir=Files.createTempDirectory(tempDir,"ZippingOutput");
    Path rootedOutputDir=outputDir.resolve(args.bundleRoot());
    Files.createDirectories(wrapper.outputDirectoryMustExist() ? rootedOutputDir : rootedOutputDir.getParent());
    ImmutableList<String> subCommandArguments=ImmutableList.copyOf(wrapper.subCommand(args,rootedOutputDir.toString()));
    Process subProcess=new ProcessBuilder(subCommandArguments).inheritIO().start();
    int exit=subProcess.waitFor();
    if (exit != 0) {
      System.exit(exit);
    }
    try (OutputStream out=Files.newOutputStream(Paths.get(args.outputZip()));ZipCombiner combiner=new ZipCombiner(out)){
      ZipInputEntry.addAll(combiner,ZipInputEntry.fromDirectory(outputDir));
    }
   }
}
