{
  this.packageDirectory=Preconditions.checkNotNull(packageDirectory);
  this.packageId=Preconditions.checkNotNull(packageId);
  this.globExecutor=Preconditions.checkNotNull(globExecutor);
  this.syscalls=syscalls == null ? new AtomicReference<>(UnixGlob.DEFAULT_SYSCALLS) : syscalls;
  Preconditions.checkNotNull(locator);
  childDirectoryPredicate=new Predicate<Path>(){
    @Override public boolean apply(    Path directory){
      if (directory.equals(packageDirectory)) {
        return true;
      }
      PackageIdentifier subPackageId=PackageIdentifier.create(packageId.getRepository(),packageId.getPackageFragment().getRelative(directory.relativeTo(packageDirectory)));
      return locator.getBuildFileForPackage(subPackageId) == null;
    }
  }
;
}
