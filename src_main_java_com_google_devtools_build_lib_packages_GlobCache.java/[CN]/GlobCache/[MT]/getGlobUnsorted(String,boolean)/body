{
  Future<List<Path>> futureResult=getGlobUnsortedAsync(pattern,excludeDirs);
  List<Path> globPaths=fromFuture(futureResult);
  if (!(futureResult instanceof SettableFuture<?>)) {
    SettableFuture<List<Path>> completedFuture=SettableFuture.create();
    completedFuture.set(globPaths);
    globCache.put(Pair.of(pattern,excludeDirs),completedFuture);
  }
  List<String> result=Lists.newArrayListWithCapacity(globPaths.size());
  for (  Path path : globPaths) {
    String relative=path.relativeTo(packageDirectory).getPathString();
    if (!relative.isEmpty()) {
      result.add(relative);
    }
  }
  return result;
}
