{
  reporter.removeHandler(failFastHandler);
  scratch.file("conflict/BUILD","config_setting(name = 'a', values = {'test_arg': 'a'})","cc_library(name='x', srcs=select({':a': ['a.cc'], '//conditions:default': ['foo.cc']}))","cc_binary(name='_objs/x/conflict/foo.pic.o', srcs=['bar.cc'])");
  AnalysisResult result=update(defaultFlags().with(Flag.KEEP_GOING),"//conflict:_objs/x/conflict/foo.pic.o","//conflict:x");
  assertContainsEvent("file 'conflict/_objs/x/conflict/foo.pic.o' is generated by these conflicting actions");
}
