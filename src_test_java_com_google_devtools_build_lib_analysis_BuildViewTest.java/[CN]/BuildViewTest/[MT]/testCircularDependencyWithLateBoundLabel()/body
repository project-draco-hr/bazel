{
  scratch.file("cycle/BUILD","cc_library(name = 'foo', deps = [':bar'])","cc_library(name = 'bar')");
  useConfiguration("--experimental_stl=//cycle:foo");
  reporter.removeHandler(failFastHandler);
  EventBus eventBus=new EventBus();
  LoadingFailureRecorder loadingFailureRecorder=new LoadingFailureRecorder();
  AnalysisFailureRecorder analysisFailureRecorder=new AnalysisFailureRecorder();
  eventBus.register(loadingFailureRecorder);
  eventBus.register(analysisFailureRecorder);
  AnalysisResult result=update(eventBus,defaultFlags().with(Flag.KEEP_GOING),"//cycle:foo");
  assertThat(result.hasError()).isTrue();
  assertContainsEvent("in cc_library rule //cycle:foo: cycle in dependency graph:");
  assertThat(Iterables.transform(analysisFailureRecorder.events,ANALYSIS_EVENT_TO_STRING_PAIR)).containsExactly(Pair.of("//cycle:foo","//cycle:foo"));
  assertThat(loadingFailureRecorder.events).isEmpty();
}
