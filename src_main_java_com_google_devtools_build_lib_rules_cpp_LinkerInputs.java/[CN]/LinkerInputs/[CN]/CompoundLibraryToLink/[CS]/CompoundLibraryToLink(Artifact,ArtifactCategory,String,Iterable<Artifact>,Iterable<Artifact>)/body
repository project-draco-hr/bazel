{
  String basename=libraryArtifact.getFilename();
switch (category) {
case STATIC_LIBRARY:
    Preconditions.checkState(Link.ARCHIVE_LIBRARY_FILETYPES.matches(basename));
  break;
case DYNAMIC_LIBRARY:
Preconditions.checkState(Link.SHARED_LIBRARY_FILETYPES.matches(basename));
break;
default :
throw new IllegalStateException();
}
this.libraryArtifact=Preconditions.checkNotNull(libraryArtifact);
this.category=category;
this.libraryIdentifier=libraryIdentifier;
this.objectFiles=objectFiles == null ? null : CollectionUtils.makeImmutable(objectFiles);
this.ltoBitcodeFiles=(ltoBitcodeFiles == null) ? ImmutableList.<Artifact>of() : CollectionUtils.makeImmutable(ltoBitcodeFiles);
}
