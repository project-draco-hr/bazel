{
  Predicate<Target> tagFilter=TestTargetUtils.tagFilter(Lists.<String>newArrayList());
  assertTrue(tagFilter.apply(test1));
  assertTrue(tagFilter.apply(test2));
  assertTrue(tagFilter.apply(test1b));
  tagFilter=TestTargetUtils.tagFilter(Lists.newArrayList("tag1","tag2"));
  assertTrue(tagFilter.apply(test1));
  assertTrue(tagFilter.apply(test2));
  assertTrue(tagFilter.apply(test1b));
  tagFilter=TestTargetUtils.tagFilter(Lists.newArrayList("tag1"));
  assertTrue(tagFilter.apply(test1));
  assertFalse(tagFilter.apply(test2));
  assertTrue(tagFilter.apply(test1b));
  tagFilter=TestTargetUtils.tagFilter(Lists.newArrayList("-tag2"));
  assertTrue(tagFilter.apply(test1));
  assertFalse(tagFilter.apply(test2));
  assertTrue(tagFilter.apply(test1b));
  tagFilter=TestTargetUtils.tagFilter(Lists.newArrayList("tag2","-tag2"));
  assertFalse(tagFilter.apply(test1));
  assertFalse(tagFilter.apply(test2));
  assertFalse(tagFilter.apply(test1b));
  tagFilter=TestTargetUtils.tagFilter(Lists.newArrayList("tag2","-tag1"));
  assertFalse(tagFilter.apply(test1));
  assertTrue(tagFilter.apply(test2));
  assertFalse(tagFilter.apply(test1b));
}
