{
  if (densities.isEmpty()) {
    return manifest;
  }
  try {
    DocumentBuilder db=getSecureDocumentBuilder();
    Document doc=db.parse(Files.newInputStream(manifest));
    NodeList manifestElements=doc.getElementsByTagName("manifest");
    if (manifestElements.getLength() != 1) {
      throw new ManifestProcessingException(String.format("Manifest %s does not contain exactly one <manifest> tag. " + "It contains %d.",manifest,manifestElements.getLength()));
    }
    Node manifestElement=manifestElements.item(0);
    Set<String> existingDensities=new HashSet<>();
    NodeList screenElements=doc.getElementsByTagName("screen");
    for (int i=0; i < screenElements.getLength(); i++) {
      Node screen=screenElements.item(i);
      existingDensities.add(PLAY_STORE_SUPPORTED_DENSITIES.inverse().get(screen.getAttributes().getNamedItem("android:screenDensity").getNodeValue()));
    }
    if (existingDensities.containsAll(densities)) {
      return manifest;
    }
    NodeList compatibleScreensElements=doc.getElementsByTagName("compatible-screens");
    for (int i=0; i < compatibleScreensElements.getLength(); i++) {
      Node compatibleScreensElement=compatibleScreensElements.item(i);
      compatibleScreensElement.getParentNode().removeChild(compatibleScreensElement);
    }
    boolean omitCompatibleScreens=false;
    for (    String density : densities) {
      if (!PLAY_STORE_SUPPORTED_DENSITIES.containsKey(density)) {
        omitCompatibleScreens=true;
        System.out.println(density + " is not an accepted Play Store density.");
        System.out.println("Omitting <compatible-screens> declaration from output manifest.");
        break;
      }
    }
    if (!omitCompatibleScreens) {
      Node compatibleScreens=doc.createElement("compatible-screens");
      manifestElement.appendChild(compatibleScreens);
      for (      String density : densities) {
        for (        String screenSize : SCREEN_SIZES) {
          Element screen=doc.createElement("screen");
          screen.setAttribute("android:screenSize",screenSize);
          screen.setAttribute("android:screenDensity",PLAY_STORE_SUPPORTED_DENSITIES.get(density));
          compatibleScreens.appendChild(screen);
        }
      }
    }
    Files.createDirectories(out.getParent());
    TransformerFactory transformerFactory=TransformerFactory.newInstance();
    transformerFactory.newTransformer().transform(new DOMSource(doc),new StreamResult(Files.newOutputStream(out)));
    return out;
  }
 catch (  ParserConfigurationException|SAXException|IOException|TransformerException e) {
    throw new ManifestProcessingException(e.getMessage());
  }
}
