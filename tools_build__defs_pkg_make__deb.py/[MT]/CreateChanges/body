def CreateChanges(output, deb_file, architecture, short_description, maintainer, package, version, section, priority, distribution, urgency, timestamp=0):
    'Create the changes file.'
    checksums = GetChecksumsFromFile(deb_file, {'md5': hashlib.md5, 'sha1': hashlib.sha1, 'sha256': hashlib.sha256, })
    debsize = str(os.path.getsize(deb_file))
    deb_basename = os.path.basename(deb_file)
    changesdata = ''.join((MakeDebianControlField(*x) for x in [('Format', '1.8'), ('Date', time.ctime(timestamp)), ('Source', package), ('Binary', package), ('Architecture', architecture), ('Version', version), ('Distribution', distribution), ('Urgency', urgency), ('Maintainer', maintainer), ('Changed-By', maintainer), ('Description', ('\n%s - %s' % (package, short_description))), ('Changes', ('\n%s (%s) %s; urgency=%s\nChanges are tracked in revision control.' % (package, version, distribution, urgency))), ('Files', ('\n' + ' '.join([checksums['md5'], debsize, section, priority, deb_basename]))), ('Checksums-Sha1', ('\n' + ' '.join([checksums['sha1'], debsize, deb_basename]))), ('Checksums-Sha256', ('\n' + ' '.join([checksums['sha256'], debsize, deb_basename])))]))
    with open(output, 'w') as changes_fh:
        changes_fh.write(changesdata)
