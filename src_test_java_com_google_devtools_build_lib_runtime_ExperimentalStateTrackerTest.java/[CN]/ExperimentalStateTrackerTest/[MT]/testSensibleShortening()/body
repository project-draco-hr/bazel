{
  ManualClock clock=new ManualClock();
  ExperimentalStateTracker stateTracker=new ExperimentalStateTracker(clock,70);
  Action action=mockAction("Building some/very/very/long/path/for/some/library/directory/foo.jar (42 source files)","/home/user/bazel/out/abcdef/some/very/very/long/path/for/some/library/directory/foo.jar");
  Label label=Label.parseAbsolute("//some/very/very/long/path/for/some/library/directory:libfoo");
  ActionOwner owner=new ActionOwner(label,null,null,null,"fedcba",null);
  when(action.getOwner()).thenReturn(owner);
  clock.advanceMillis(TimeUnit.SECONDS.toMillis(3));
  stateTracker.actionStarted(new ActionStartedEvent(action,clock.nanoTime()));
  clock.advanceMillis(TimeUnit.SECONDS.toMillis(5));
  LoggingTerminalWriter terminalWriter=new LoggingTerminalWriter(true);
  stateTracker.writeProgressBar(terminalWriter);
  String output=terminalWriter.getTranscript();
  assertTrue("Progress bar should contain 'Building ', but was:\n" + output,output.contains("Building "));
  assertTrue("Progress bar should contain 'foo.jar (42 source files)', but was:\n" + output,output.contains("foo.jar (42 source files)"));
}
