{
  ManualClock clock=new ManualClock();
  ExperimentalStateTracker stateTracker=new ExperimentalStateTracker(clock);
  TestFilteringCompleteEvent filteringComplete=Mockito.mock(TestFilteringCompleteEvent.class);
  Label labelA=Label.parseAbsolute("//foo/bar:baz");
  ConfiguredTarget targetA=Mockito.mock(ConfiguredTarget.class);
  when(targetA.getLabel()).thenReturn(labelA);
  ConfiguredTarget targetB=Mockito.mock(ConfiguredTarget.class);
  when(filteringComplete.getTestTargets()).thenReturn(ImmutableSet.of(targetA,targetB));
  TestSummary testSummary=Mockito.mock(TestSummary.class);
  when(testSummary.getStatus()).thenReturn(BlazeTestStatus.PASSED);
  when(testSummary.getTarget()).thenReturn(targetA);
  stateTracker.testFilteringComplete(filteringComplete);
  stateTracker.testSummary(testSummary);
  LoggingTerminalWriter terminalWriter=new LoggingTerminalWriter();
  stateTracker.writeProgressBar(terminalWriter);
  String output=terminalWriter.getWritten();
  assertTrue("Label " + labelA.toString() + " should be present in progress bar: "+ output,output.contains(labelA.toString()));
}
