{
  ManualClock clock=new ManualClock();
  clock.advanceMillis(TimeUnit.SECONDS.toMillis(123));
  ExperimentalStateTracker stateTracker=new ExperimentalStateTracker(clock);
  clock.advanceMillis(TimeUnit.SECONDS.toMillis(2));
  stateTracker.actionStarted(new ActionStartedEvent(mockAction("First action","foo"),clock.nanoTime()));
  clock.advanceMillis(TimeUnit.SECONDS.toMillis(7));
  stateTracker.actionStarted(new ActionStartedEvent(mockAction("Second action","bar"),clock.nanoTime()));
  clock.advanceMillis(TimeUnit.SECONDS.toMillis(20));
  LoggingTerminalWriter terminalWriter=new LoggingTerminalWriter(true);
  stateTracker.writeProgressBar(terminalWriter);
  String output=terminalWriter.getTranscript();
  assertTrue("Runtime of first action should be visible in output: " + output,output.contains("27s"));
  assertTrue("Runtime of second action should be visible in output: " + output,output.contains("20s"));
  terminalWriter=new LoggingTerminalWriter(true);
  stateTracker.writeProgressBar(terminalWriter,true);
  output=terminalWriter.getTranscript();
  assertTrue("Runtime of first action should be visible in short output: " + output,output.contains("27s"));
}
