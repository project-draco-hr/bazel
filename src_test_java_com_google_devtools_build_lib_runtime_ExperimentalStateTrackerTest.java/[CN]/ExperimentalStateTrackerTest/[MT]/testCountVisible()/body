{
  ManualClock clock=new ManualClock();
  ExperimentalStateTracker stateTracker=new ExperimentalStateTracker(clock);
  TestFilteringCompleteEvent filteringComplete=Mockito.mock(TestFilteringCompleteEvent.class);
  ConfiguredTarget targetA=Mockito.mock(ConfiguredTarget.class);
  ConfiguredTarget targetB=Mockito.mock(ConfiguredTarget.class);
  when(filteringComplete.getTestTargets()).thenReturn(ImmutableSet.of(targetA,targetB));
  TestSummary testSummary=Mockito.mock(TestSummary.class);
  stateTracker.testFilteringComplete(filteringComplete);
  stateTracker.testSummary(testSummary);
  LoggingTerminalWriter terminalWriter=new LoggingTerminalWriter();
  stateTracker.writeProgressBar(terminalWriter);
  String output=terminalWriter.getWritten();
  assertTrue("Test count should be visible in output: " + output,output.contains(" 1 / 2 tests"));
  terminalWriter=new LoggingTerminalWriter();
  stateTracker.writeProgressBar(terminalWriter,true);
  output=terminalWriter.getWritten();
  assertTrue("Test count should be visible in short output: " + output,output.contains(" 1 / 2 tests"));
}
