{
  Path tempMergedPlist=Files.createTempFile(tempDir,null,INFOPLIST_FILENAME);
  Path tempPkgInfo=Files.createTempFile(tempDir,null,PKGINFO_FILENAME);
  ImmutableList.Builder<Path> sourcePlistFilesBuilder=new ImmutableList.Builder<>();
  for (  String sourcePlist : control.getSourcePlistFileList()) {
    sourcePlistFilesBuilder.add(fileSystem.getPath(sourcePlist));
  }
  ImmutableList<Path> sourcePlistFiles=sourcePlistFilesBuilder.build();
  ImmutableMap.Builder<String,String> substitutionMap=ImmutableMap.builder();
  for (  VariableSubstitution substitution : control.getVariableSubstitutionList()) {
    substitutionMap.put(substitution.getName(),substitution.getValue());
  }
  PlistMerging plistMerging=PlistMerging.from(sourcePlistFiles,PlistMerging.automaticEntries(control.getTargetDeviceFamilyList(),platformFromName(control.getPlatform()),control.getSdkVersion(),control.getMinimumOsVersion()),substitutionMap.build(),new KeysToRemoveIfEmptyString("CFBundleIconFile","NSPrincipalClass"));
  if (control.hasExecutableName()) {
    plistMerging.setExecutableName(control.getExecutableName());
  }
  plistMerging.setBundleIdentifier(control.hasPrimaryBundleIdentifier() ? control.getPrimaryBundleIdentifier() : null,control.hasFallbackBundleIdentifier() ? control.getFallbackBundleIdentifier() : null);
  plistMerging.write(tempMergedPlist,tempPkgInfo);
  bundleRoot=joinPath(bundleRoot,control.getBundleRoot());
  packagedFilesBuilder.add(new ZipInputEntry(tempMergedPlist,joinPath(bundleRoot,INFOPLIST_FILENAME)));
  if (includePkgInfo) {
    packagedFilesBuilder.add(new ZipInputEntry(tempPkgInfo,joinPath(bundleRoot,PKGINFO_FILENAME)));
  }
  for (  BundleFile bundleFile : control.getBundleFileList()) {
    int externalFileAttribute=bundleFile.hasExternalFileAttribute() ? bundleFile.getExternalFileAttribute() : ZipInputEntry.DEFAULT_EXTERNAL_FILE_ATTRIBUTE;
    packagedFilesBuilder.add(new ZipInputEntry(fileSystem.getPath(bundleFile.getSourceFile()),joinPath(bundleRoot,bundleFile.getBundlePath()),externalFileAttribute));
  }
  for (  String mergeZip : control.getMergeWithoutNamePrefixZipList()) {
    mergeZipsBuilder.add(MergeZip.newBuilder().setSourcePath(mergeZip).build());
  }
  mergeZipsBuilder.addAll(control.getMergeZipList());
  for (  Control nestedControl : control.getNestedBundleList()) {
    mergeInto(tempDir,fileSystem,nestedControl,bundleRoot,packagedFilesBuilder,mergeZipsBuilder,false);
  }
}
