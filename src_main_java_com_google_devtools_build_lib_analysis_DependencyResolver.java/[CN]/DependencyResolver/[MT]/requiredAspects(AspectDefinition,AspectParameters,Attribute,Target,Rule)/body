{
  if (!(target instanceof Rule)) {
    return ImmutableSet.of();
  }
  Set<AspectWithParameters> aspectCandidates=extractAspectCandidates(aspectDefinition,aspectParameters,attribute,originalRule);
  RuleClass ruleClass=((Rule)target).getRuleClassObject();
  ImmutableSet.Builder<AspectWithParameters> result=ImmutableSet.builder();
  for (  AspectWithParameters candidateClass : aspectCandidates) {
    ConfiguredAspectFactory candidate=(ConfiguredAspectFactory)AspectFactory.Util.create(candidateClass.getAspectFactory());
    if (Sets.difference(candidate.getDefinition().getRequiredProviders(),ruleClass.getAdvertisedProviders()).isEmpty()) {
      result.add(candidateClass);
    }
  }
  return result.build();
}
