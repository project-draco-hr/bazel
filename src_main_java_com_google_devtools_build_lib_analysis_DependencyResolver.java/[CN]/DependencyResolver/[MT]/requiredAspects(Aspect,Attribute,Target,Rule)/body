{
  if (!(target instanceof Rule)) {
    return ImmutableSet.of();
  }
  Iterable<Aspect> aspectCandidates=extractAspectCandidates(aspect,attribute,originalRule);
  RuleClass ruleClass=((Rule)target).getRuleClassObject();
  ImmutableSet.Builder<AspectDescriptor> result=ImmutableSet.builder();
  for (  Aspect aspectCandidate : aspectCandidates) {
    if (ruleClass.canHaveAnyProvider() || Sets.difference(aspectCandidate.getDefinition().getRequiredProviders(),ruleClass.getAdvertisedProviders()).isEmpty()) {
      result.add(new AspectDescriptor(aspectCandidate.getAspectClass(),aspectCandidate.getParameters()));
    }
  }
  return result.build();
}
