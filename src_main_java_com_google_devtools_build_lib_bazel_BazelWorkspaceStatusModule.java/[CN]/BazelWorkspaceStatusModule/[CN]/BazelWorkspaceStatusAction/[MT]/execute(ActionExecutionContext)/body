{
  try {
    Map<String,String> statusMap=parseWorkspaceStatus(getAdditionalWorkspaceStatus(actionExecutionContext));
    Map<String,String> volatileMap=new TreeMap<>();
    Map<String,String> stableMap=new TreeMap<>();
    for (    Map.Entry<String,String> entry : statusMap.entrySet()) {
      if (isStableKey(entry.getKey())) {
        stableMap.put(entry.getKey(),entry.getValue());
      }
 else {
        volatileMap.put(entry.getKey(),entry.getValue());
      }
    }
    stableMap.put(BuildInfo.BUILD_EMBED_LABEL,options.embedLabel);
    stableMap.put(BuildInfo.BUILD_HOST,hostname);
    stableMap.put(BuildInfo.BUILD_USER,username);
    volatileMap.put(BuildInfo.BUILD_TIMESTAMP,Long.toString(System.currentTimeMillis()));
    FileSystemUtils.writeContent(stableStatus.getPath(),printStatusMap(stableMap));
    FileSystemUtils.writeContent(volatileStatus.getPath(),printStatusMap(volatileMap));
  }
 catch (  IOException e) {
    throw new ActionExecutionException("Failed to run workspace status command " + options.workspaceStatusCommand,e,this,true);
  }
}
