{
  if (parsingMode == PYTHON || !FORBIDDEN_KEYWORDS.contains(token.kind)) {
    return;
  }
  String error;
switch (token.kind) {
case ASSERT:
    error="'assert' not supported, use 'fail' instead";
  break;
case TRY:
error="'try' not supported, all exceptions are fatal";
break;
case IMPORT:
error="'import' not supported, use 'load' instead";
break;
case IS:
error="'is' not supported, use '==' instead";
break;
case LAMBDA:
error="'lambda' not supported, declare a function instead";
break;
case RAISE:
error="'raise' not supported, use 'fail' instead";
break;
case WHILE:
error="'while' not supported, use 'for' instead";
break;
default :
error="keyword '" + token.kind.getPrettyName() + "' not supported";
break;
}
reportError(lexer.createLocation(token.left,token.right),error);
}
