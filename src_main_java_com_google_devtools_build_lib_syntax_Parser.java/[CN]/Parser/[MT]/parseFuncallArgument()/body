{
  final int start=token.left;
  if (token.kind == TokenKind.STAR_STAR) {
    if (parsingMode != SKYLARK) {
      reportError(lexer.createLocation(token.left,token.right),"**kwargs arguments are not allowed in BUILD files");
    }
    nextToken();
    Expression expr=parseNonTupleExpression();
    return setLocation(new Argument.StarStar(expr),start,expr);
  }
  if (token.kind == TokenKind.STAR) {
    if (parsingMode != SKYLARK) {
      reportError(lexer.createLocation(token.left,token.right),"*args arguments are not allowed in BUILD files");
    }
    nextToken();
    Expression expr=parseNonTupleExpression();
    return setLocation(new Argument.Star(expr),start,expr);
  }
  if (token.kind == TokenKind.IDENTIFIER) {
    Token identToken=token;
    String name=(String)token.value;
    nextToken();
    if (token.kind == TokenKind.EQUALS) {
      nextToken();
      Expression expr=parseNonTupleExpression();
      return setLocation(new Argument.Keyword(name,expr),start,expr);
    }
 else {
      pushToken(identToken);
    }
  }
  Expression expr=parseNonTupleExpression();
  return setLocation(new Argument.Positional(expr),start,expr);
}
