{
  while (true) {
switch (token.kind) {
case FOR:
      nextToken();
    Expression loopVar=parseForLoopVariables();
  expect(TokenKind.IN);
Expression listExpression=parseExpression();
listComprehension.add(loopVar,listExpression);
break;
case IF:
reportError(lexer.createLocation(token.left,token.right),"List comprehension with filtering is not yet supported");
nextToken();
parseExpression();
break;
case RBRACKET:
nextToken();
return listComprehension;
default :
syntaxError(token,"expected ']', 'for' or 'if'");
syncPast(LIST_TERMINATOR_SET);
return makeErrorExpression(token.left,token.right);
}
}
}
