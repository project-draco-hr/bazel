{
  ImmutableList.Builder<Artifact> builder=new ImmutableList.Builder<>();
  for (  Artifact proto : protos) {
    String protoOutputName;
    if (outputCpp) {
      protoOutputName=proto.getFilename();
    }
 else {
      String lowerUnderscoreBaseName=proto.getFilename().replace('-','_').toLowerCase();
      protoOutputName=LOWER_UNDERSCORE.to(UPPER_CAMEL,lowerUnderscoreBaseName);
    }
    PathFragment rawFragment=new PathFragment(rootRelativeOutputDir,proto.getExecPath().getParentDirectory(),new PathFragment(protoOutputName));
    @Nullable PathFragment outputFile=FileSystemUtils.replaceExtension(rawFragment,newFileType.getExtensions().get(0),".proto");
    if (outputFile != null) {
      builder.add(ruleContext.getAnalysisEnvironment().getDerivedArtifact(outputFile,ruleContext.getBinOrGenfilesDirectory()));
    }
  }
  return builder.build();
}
