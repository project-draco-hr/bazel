{
  ProtoSupport protoSupport=new ProtoSupport(ruleContext);
  ObjcCommon.Builder commonBuilder=new ObjcCommon.Builder(ruleContext);
  XcodeProvider.Builder xcodeProviderBuilder=new XcodeProvider.Builder();
  NestedSetBuilder<Artifact> filesToBuild=NestedSetBuilder.stableOrder();
  protoSupport.validate().addCommonOptions(commonBuilder).addXcodeProviderOptions(xcodeProviderBuilder).addFilesToBuild(filesToBuild).registerActions();
  if (ruleContext.hasErrors()) {
    return null;
  }
  ObjcCommon common=commonBuilder.build();
  filesToBuild.addAll(common.getCompiledArchive().asSet());
  new CompilationSupport(ruleContext).registerCompileAndArchiveActions(commonBuilder.build());
  new XcodeSupport(ruleContext).addFilesToBuild(filesToBuild).addXcodeSettings(xcodeProviderBuilder,common.getObjcProvider(),LIBRARY_STATIC).addDependencies(xcodeProviderBuilder,new Attribute(ObjcProtoLibraryRule.PROTO_LIB_ATTR,Mode.TARGET)).registerActions(xcodeProviderBuilder.build());
  return ObjcRuleClasses.ruleConfiguredTarget(ruleContext,filesToBuild.build()).addProvider(XcodeProvider.class,xcodeProviderBuilder.build()).addProvider(ObjcProvider.class,common.getObjcProvider()).addSkylarkTransitiveInfo(ObjcProvider.OBJC_SKYLARK_PROVIDER_NAME,common.getObjcProvider().toSkylarkProvider()).build();
}
