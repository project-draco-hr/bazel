{
  if (!(target instanceof FileTarget)) {
    throw new TargetParsingException("--compile_one_dependency target '" + target.getLabel() + "' must be a file");
  }
  Package pkg=target.getPackage();
  Iterable<Rule> orderedRuleList=getOrderedRuleList(pkg);
  Rule fallbackRule=null;
  for (  Rule rule : orderedRuleList) {
    try {
      if (SrcTargetUtil.getSrcTargets(eventHandler,rule,targetProvider).contains(target)) {
        if (rule.getRuleClassObject().isPreferredDependency(target.getName())) {
          return rule;
        }
 else         if (fallbackRule == null) {
          fallbackRule=rule;
        }
      }
    }
 catch (    NoSuchThingException e) {
    }
catch (    InterruptedException e) {
      throw new TargetParsingException("interrupted");
    }
  }
  Rule result=null;
  BinaryPredicate<Rule,Attribute> directCompileTimeInput=new BinaryPredicate<Rule,Attribute>(){
    @Override public boolean apply(    Rule rule,    Attribute attribute){
      return DependencyFilter.DIRECT_COMPILE_TIME_INPUT.apply(rule,attribute) && !rule.isConfigurableAttribute(attribute.getName());
    }
  }
;
  for (  Rule rule : orderedRuleList) {
    if (rule.getLabels(directCompileTimeInput).contains(target.getLabel())) {
      if (rule.getRuleClassObject().isPreferredDependency(target.getName())) {
        result=rule;
      }
 else       if (fallbackRule == null) {
        fallbackRule=rule;
      }
    }
  }
  if (result == null) {
    result=fallbackRule;
  }
  if (result == null) {
    throw new TargetParsingException("Couldn't find dependency on target '" + target.getLabel() + "'");
  }
  try {
    if (!SrcTargetUtil.getSrcTargets(eventHandler,result,targetProvider).isEmpty()) {
      return result;
    }
  }
 catch (  NoSuchThingException e) {
    eventHandler.handle(Event.error(e.getMessage()));
    throw new TargetParsingException("Couldn't find dependency on target '" + target.getLabel() + "'");
  }
catch (  InterruptedException e) {
    throw new TargetParsingException("interrupted");
  }
  for (  Rule rule : orderedRuleList) {
    RawAttributeMapper attributes=RawAttributeMapper.of(rule);
    if (attributes.isConfigurable("deps",BuildType.LABEL_LIST) || attributes.isConfigurable("srcs",BuildType.LABEL_LIST)) {
      continue;
    }
    RuleClass ruleClass=rule.getRuleClassObject();
    if (ruleClass.hasAttr("deps",BuildType.LABEL_LIST) && ruleClass.hasAttr("srcs",BuildType.LABEL_LIST)) {
      for (      Label dep : attributes.get("deps",BuildType.LABEL_LIST)) {
        if (dep.equals(result.getLabel())) {
          if (!attributes.get("srcs",BuildType.LABEL_LIST).isEmpty()) {
            return rule;
          }
        }
      }
    }
  }
  throw new TargetParsingException("Couldn't find dependency on target '" + target.getLabel() + "'");
}
