{
  Map<PathFragment,Artifact> symlinks=new LinkedHashMap<>();
  for (  Map.Entry<String,Iterable<Artifact>> entry : nativeLibs.entrySet()) {
    String arch=entry.getKey();
    for (    Artifact lib : entry.getValue()) {
      symlinks.put(new PathFragment(arch + "/" + lib.getExecPath().getBaseName()),lib);
    }
  }
  if (symlinks.isEmpty()) {
    return null;
  }
  Artifact inputManifest=AndroidBinary.getDxArtifact(ruleContext,"native_symlinks.manifest");
  ruleContext.registerAction(new SourceManifestAction.Builder(ManifestType.SOURCE_SYMLINKS,ruleContext.getActionOwner(),inputManifest).addRootSymlinks(symlinks).build());
  Artifact outputManifest=AndroidBinary.getDxArtifact(ruleContext,"native_symlinks/MANIFEST");
  ruleContext.registerAction(new SymlinkTreeAction(ruleContext.getActionOwner(),inputManifest,outputManifest,false));
  return outputManifest;
}
