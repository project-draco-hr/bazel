{
  NestedSet<Artifact> impliedHeaderModules=this.impliedHeaderModules.build();
  NestedSet<Artifact> topLevelHeaderModules=filterTopLevelHeaderModules(this.topLevelHeaderModules.build(),impliedHeaderModules);
  NestedSet<Artifact> picImpliedHeaderModules=this.picImpliedHeaderModules.build();
  NestedSet<Artifact> picTopLevelHeaderModules=filterTopLevelHeaderModules(this.picTopLevelHeaderModules.build(),picImpliedHeaderModules);
  Artifact prerequisiteStampFile=(ruleContext != null && ruleContext.getFragment(CppConfiguration.class).isLipoContextCollector()) ? getMiddlemanArtifact(middlemanFactory) : createMiddleman(owner,middlemanFactory);
  return new CppCompilationContext(new CommandLineContext(ImmutableList.copyOf(includeDirs),ImmutableList.copyOf(quoteIncludeDirs),ImmutableList.copyOf(systemIncludeDirs),ImmutableList.copyOf(defines)),ImmutableList.of(new DepsContext(prerequisiteStampFile,declaredIncludeDirs.build(),declaredIncludeWarnDirs.build(),declaredIncludeSrcs.build(),pregreppedHdrs.build(),headerModuleSrcs.build(),topLevelHeaderModules,picTopLevelHeaderModules,impliedHeaderModules,picImpliedHeaderModules,transitiveModuleMaps.build(),directModuleMaps.build())),cppModuleMap,headerModule,picHeaderModule,provideTransitiveModuleMaps,useHeaderModules);
}
