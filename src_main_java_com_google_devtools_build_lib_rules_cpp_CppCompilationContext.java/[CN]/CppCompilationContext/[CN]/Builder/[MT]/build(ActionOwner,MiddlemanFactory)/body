{
  NestedSet<Artifact> impliedHeaderModules=this.impliedHeaderModules.build();
  Set<Artifact> impliedHeaderModulesSet=impliedHeaderModules.toSet();
  NestedSetBuilder<Artifact> topLevelHeaderModules=NestedSetBuilder.stableOrder();
  for (  Artifact artifact : this.topLevelHeaderModules.build()) {
    if (!impliedHeaderModulesSet.contains(artifact)) {
      topLevelHeaderModules.add(artifact);
    }
  }
  Artifact prerequisiteStampFile=(ruleContext != null && ruleContext.getFragment(CppConfiguration.class).isLipoContextCollector()) ? getMiddlemanArtifact(middlemanFactory) : createMiddleman(owner,middlemanFactory);
  return new CppCompilationContext(new CommandLineContext(ImmutableList.copyOf(includeDirs),ImmutableList.copyOf(quoteIncludeDirs),ImmutableList.copyOf(systemIncludeDirs),ImmutableList.copyOf(defines)),ImmutableList.of(new DepsContext(prerequisiteStampFile,declaredIncludeDirs.build(),declaredIncludeWarnDirs.build(),declaredIncludeSrcs.build(),pregreppedHdrs.build(),headerModuleSrcs.build(),topLevelHeaderModules.build(),impliedHeaderModules,transitiveHeaderModuleSrcs.build(),transitiveModuleMaps.build(),directModuleMaps.build())),cppModuleMap,headerModule,picHeaderModule,usingHeaderModules);
}
