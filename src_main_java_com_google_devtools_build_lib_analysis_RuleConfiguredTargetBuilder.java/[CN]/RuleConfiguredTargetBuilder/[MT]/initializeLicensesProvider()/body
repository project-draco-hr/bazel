{
  if (!ruleContext.getConfiguration().checkLicenses()) {
    return LicensesProviderImpl.EMPTY;
  }
  NestedSetBuilder<TargetLicense> builder=NestedSetBuilder.linkOrder();
  BuildConfiguration configuration=ruleContext.getConfiguration();
  Rule rule=ruleContext.getRule();
  License toolOutputLicense=rule.getToolOutputLicense(ruleContext.attributes());
  if (configuration.isHostConfiguration() && toolOutputLicense != null) {
    if (toolOutputLicense != License.NO_LICENSE) {
      builder.add(new TargetLicense(rule.getLabel(),toolOutputLicense));
    }
  }
 else {
    if (rule.getLicense() != License.NO_LICENSE) {
      builder.add(new TargetLicense(rule.getLabel(),rule.getLicense()));
    }
    for (    TransitiveInfoCollection dep : ruleContext.getConfiguredTargetMap().values()) {
      LicensesProvider provider=dep.getProvider(LicensesProvider.class);
      if (provider != null) {
        builder.addTransitive(provider.getTransitiveLicenses());
      }
    }
  }
  return new LicensesProviderImpl(builder.build());
}
