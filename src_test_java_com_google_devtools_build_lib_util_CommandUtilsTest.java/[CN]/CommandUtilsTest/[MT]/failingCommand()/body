{
  String[] args=new String[3];
  args[0]="/bin/sh";
  args[1]="-c";
  args[2]="echo Some errors 1>&2; echo Some output; exit 42";
  Map<String,String> env=Maps.newTreeMap();
  env.put("FOO","foo");
  env.put("PATH","/usr/bin:/bin:/sbin");
  try {
    new Command(args,env,null).execute();
    fail();
  }
 catch (  CommandException exception) {
    String message=CommandUtils.describeCommandFailure(false,exception);
    String verboseMessage=CommandUtils.describeCommandFailure(true,exception);
    assertEquals("sh failed: error executing command " + "/bin/sh -c 'echo Some errors 1>&2; echo Some output; exit 42': " + "Process exited with status 42\n"+ "Some output\n"+ "Some errors\n",message);
    assertEquals("sh failed: error executing command \n" + "  (exec env - \\\n" + "    FOO=foo \\\n"+ "    PATH=/usr/bin:/bin:/sbin \\\n"+ "  /bin/sh -c 'echo Some errors 1>&2; echo Some output; exit 42'): "+ "Process exited with status 42\n"+ "Some output\n"+ "Some errors\n",verboseMessage);
  }
}
