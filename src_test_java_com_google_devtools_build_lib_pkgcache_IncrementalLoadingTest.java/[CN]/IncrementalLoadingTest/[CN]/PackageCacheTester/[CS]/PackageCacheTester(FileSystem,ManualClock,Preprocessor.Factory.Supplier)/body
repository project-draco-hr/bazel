{
  this.clock=clock;
  workspace=fs.getPath("/workspace");
  workspace.createDirectory();
  outputBase=fs.getPath("/output_base");
  outputBase.createDirectory();
  addFile("WORKSPACE");
  LoadingMock loadingMock=LoadingMock.get();
  skyframeExecutor=SequencedSkyframeExecutor.create(loadingMock.getPackageFactoryForTesting().create(loadingMock.createRuleClassProvider(),fs),new BlazeDirectories(fs.getPath("/install"),fs.getPath("/output"),workspace,loadingMock.getProductName()),null,null,loadingMock.createRuleClassProvider().getBuildInfoFactories(),ImmutableList.of(new ManualDiffAwarenessFactory()),Predicates.<PathFragment>alwaysFalse(),supplier,ImmutableMap.<SkyFunctionName,SkyFunction>of(),ImmutableList.<PrecomputedValue.Injected>of(),ImmutableList.<SkyValueDirtinessChecker>of(),loadingMock.getProductName());
  skyframeExecutor.preparePackageLoading(new PathPackageLocator(outputBase,ImmutableList.of(workspace)),ConstantRuleVisibility.PUBLIC,true,7,"",UUID.randomUUID(),ImmutableMap.<String,String>of(),new TimestampGranularityMonitor(BlazeClock.instance()));
}
