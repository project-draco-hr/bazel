{
  Set<String> languageSpecificRuleFamilies=new TreeSet<>();
  Set<String> genericRuleFamilies=new TreeSet<>();
  separateRuleFamilies(docEntries,languageSpecificRuleFamilies,genericRuleFamilies);
  Map<String,ListMultimap<RuleType,RuleDocumentation>> ruleMapping=new HashMap<>();
  createRuleMapping(docEntries,ruleMapping);
  List<SummaryRuleFamily> languageSpecificSummaryFamilies=new ArrayList<SummaryRuleFamily>(languageSpecificRuleFamilies.size());
  for (  String ruleFamily : languageSpecificRuleFamilies) {
    languageSpecificSummaryFamilies.add(new SummaryRuleFamily(ruleMapping.get(ruleFamily),ruleFamily));
  }
  List<SummaryRuleFamily> otherSummaryFamilies=new ArrayList<SummaryRuleFamily>(genericRuleFamilies.size());
  for (  String ruleFamily : genericRuleFamilies) {
    otherSummaryFamilies.add(new SummaryRuleFamily(ruleMapping.get(ruleFamily),ruleFamily));
  }
  page.add("langSpecificSummaryFamilies",languageSpecificSummaryFamilies);
  page.add("otherSummaryFamilies",otherSummaryFamilies);
  page.add("commonAttributes",PredefinedAttributes.COMMON_ATTRIBUTES);
  page.add("testAttributes",PredefinedAttributes.TEST_ATTRIBUTES);
  page.add("binaryAttributes",PredefinedAttributes.BINARY_ATTRIBUTES);
  page.add(DocgenConsts.VAR_LEFT_PANEL,generateLeftNavigationPanel(docEntries));
}
