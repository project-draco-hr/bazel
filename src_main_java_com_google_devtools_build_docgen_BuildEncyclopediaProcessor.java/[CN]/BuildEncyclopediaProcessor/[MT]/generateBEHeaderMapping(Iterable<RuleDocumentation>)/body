{
  Set<String> languageSpecificRuleFamilies=new TreeSet<>();
  Set<String> genericRuleFamilies=new TreeSet<>();
  separateRuleFamilies(docEntries,languageSpecificRuleFamilies,genericRuleFamilies);
  Map<String,ListMultimap<RuleType,RuleDocumentation>> ruleMapping=new HashMap<>();
  createRuleMapping(docEntries,ruleMapping);
  String languageSpecificTable;
{
    StringBuilder sb=new StringBuilder();
    sb.append("<colgroup span=\"6\" width=\"20%\"></colgroup>\n").append("<tr><th>Language</th><th>Binary rules</th><th>Library rules</th>" + "<th>Test rules</th><th>Other rules</th><th></th></tr>\n");
    for (    String ruleFamily : languageSpecificRuleFamilies) {
      generateHeaderTableRuleFamily(sb,ruleMapping.get(ruleFamily),ruleFamily);
    }
    languageSpecificTable=sb.toString();
  }
  String otherRulesTable;
{
    StringBuilder sb=new StringBuilder();
    sb.append("<colgroup span=\"6\" width=\"20%\"></colgroup>\n");
    for (    String ruleFamily : genericRuleFamilies) {
      generateHeaderTableRuleFamily(sb,ruleMapping.get(ruleFamily),ruleFamily);
    }
    otherRulesTable=sb.toString();
  }
  return new ImmutableMap.Builder<String,String>().put(DocgenConsts.VAR_LANG_SPECIFIC_HEADER_TABLE,languageSpecificTable).put(DocgenConsts.VAR_OTHER_RULES_HEADER_TABLE,otherRulesTable).put(DocgenConsts.VAR_COMMON_ATTRIBUTE_DEFINITION,generateCommonAttributeDocs(PredefinedAttributes.COMMON_ATTRIBUTES,DocgenConsts.COMMON_ATTRIBUTES)).put(DocgenConsts.VAR_TEST_ATTRIBUTE_DEFINITION,generateCommonAttributeDocs(PredefinedAttributes.TEST_ATTRIBUTES,DocgenConsts.TEST_ATTRIBUTES)).put(DocgenConsts.VAR_BINARY_ATTRIBUTE_DEFINITION,generateCommonAttributeDocs(PredefinedAttributes.BINARY_ATTRIBUTES,DocgenConsts.BINARY_ATTRIBUTES)).put(DocgenConsts.VAR_LEFT_PANEL,generateLeftNavigationPanel(docEntries)).build();
}
