{
  Set<RuleDocumentation> binaryDocs=new TreeSet<>();
  Set<RuleDocumentation> libraryDocs=new TreeSet<>();
  Set<RuleDocumentation> testDocs=new TreeSet<>();
  Set<RuleDocumentation> otherDocs=new TreeSet<>();
  for (  RuleDocumentation doc : docEntries) {
    RuleClass ruleClass=ruleClassProvider.getRuleClassMap().get(doc.getRuleName());
    if (!ruleClass.isDocumented()) {
      continue;
    }
    if (doc.isLanguageSpecific()) {
switch (doc.getRuleType()) {
case BINARY:
        binaryDocs.add(doc);
      break;
case LIBRARY:
    libraryDocs.add(doc);
  break;
case TEST:
testDocs.add(doc);
break;
case OTHER:
otherDocs.add(doc);
break;
}
}
 else {
otherDocs.add(doc);
}
}
renderBeHeader(docEntries,page);
page.add(DocgenConsts.VAR_SECTION_BINARY,getRuleDocs(binaryDocs));
page.add(DocgenConsts.VAR_SECTION_LIBRARY,getRuleDocs(libraryDocs));
page.add(DocgenConsts.VAR_SECTION_TEST,getRuleDocs(testDocs));
page.add(DocgenConsts.VAR_SECTION_OTHER,getRuleDocs(otherDocs));
}
