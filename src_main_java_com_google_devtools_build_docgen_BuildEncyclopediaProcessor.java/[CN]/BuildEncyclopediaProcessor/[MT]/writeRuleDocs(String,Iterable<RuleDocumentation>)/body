{
  Set<String> languageSpecificRuleFamilies=new TreeSet<>();
  Set<String> genericRuleFamilies=new TreeSet<>();
  separateRuleFamilies(docEntries,languageSpecificRuleFamilies,genericRuleFamilies);
  Map<String,ListMultimap<RuleType,RuleDocumentation>> ruleMapping=new HashMap<>();
  createRuleMapping(docEntries,ruleMapping);
  List<Pair<String,String>> ruleFamilyNames=new ArrayList<>(languageSpecificRuleFamilies.size() + genericRuleFamilies.size());
  List<SummaryRuleFamily> languageSpecificSummaryFamilies=new ArrayList<SummaryRuleFamily>(languageSpecificRuleFamilies.size());
  for (  String ruleFamily : languageSpecificRuleFamilies) {
    ListMultimap<RuleType,RuleDocumentation> ruleTypeMap=ruleMapping.get(ruleFamily);
    String ruleFamilyId=RuleDocumentation.normalize(ruleFamily);
    languageSpecificSummaryFamilies.add(new SummaryRuleFamily(ruleTypeMap,ruleFamily,ruleFamilyId));
    writeRuleDoc(outputDir,ruleFamily,ruleFamilyId,ruleTypeMap);
    ruleFamilyNames.add(Pair.<String,String>of(ruleFamilyId,ruleFamily));
  }
  List<SummaryRuleFamily> otherSummaryFamilies=new ArrayList<SummaryRuleFamily>(genericRuleFamilies.size());
  for (  String ruleFamily : genericRuleFamilies) {
    ListMultimap<RuleType,RuleDocumentation> ruleTypeMap=ruleMapping.get(ruleFamily);
    String ruleFamilyId=RuleDocumentation.normalize(ruleFamily);
    otherSummaryFamilies.add(new SummaryRuleFamily(ruleTypeMap,ruleFamily,ruleFamilyId));
    writeRuleDoc(outputDir,ruleFamily,ruleFamilyId,ruleTypeMap);
    ruleFamilyNames.add(Pair.<String,String>of(ruleFamilyId,ruleFamily));
  }
  writeOverviewPage(outputDir,languageSpecificSummaryFamilies,otherSummaryFamilies);
  writeBeNav(outputDir,ruleFamilyNames);
}
