{
  assertEquals("@foo",RepositoryName.create("@foo").toString());
  assertThat(RepositoryName.create("").toString()).isEmpty();
  assertEquals("@foo/bar",RepositoryName.create("@foo/bar").toString());
  assertEquals("@foo.bar",RepositoryName.create("@foo.bar").toString());
  assertEquals("@..foo",RepositoryName.create("@..foo").toString());
  assertEquals("@foo..",RepositoryName.create("@foo..").toString());
  assertEquals("@.foo",RepositoryName.create("@.foo").toString());
  assertNotValid("@/","workspace names are not allowed to start with '@/'");
  assertNotValid("@.","workspace names are not allowed to be '@.'");
  assertNotValid("@./","workspace names are not allowed to start with '@./'");
  assertNotValid("@../","workspace names are not allowed to start with '@..'");
  assertNotValid("@x/./x","workspace names are not allowed to contain '/./'");
  assertNotValid("@x/../x","workspace names are not allowed to contain '/../'");
  assertNotValid("@abc/","workspace names are not allowed to end with '/'");
  assertNotValid("@/abc","workspace names are not allowed to start with '@/'");
  assertNotValid("@a//////b","workspace names are not allowed to contain '//'");
  assertNotValid("@foo@","workspace names may contain only A-Z, a-z, 0-9, '-', '_', '.', and '/'");
  assertNotValid("@foo\0","workspace names may contain only A-Z, a-z, 0-9, '-', '_', '.', and '/'");
  assertNotValid("x","workspace names must start with '@'");
}
