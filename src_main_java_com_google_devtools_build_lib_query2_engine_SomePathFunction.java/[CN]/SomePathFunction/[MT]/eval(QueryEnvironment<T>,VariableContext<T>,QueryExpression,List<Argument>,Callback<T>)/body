{
  Set<T> fromValue=QueryUtil.evalAll(env,context,args.get(0).getExpression());
  Set<T> toValue=QueryUtil.evalAll(env,context,args.get(1).getExpression());
  env.buildTransitiveClosure(expression,fromValue,Integer.MAX_VALUE);
  Uniquifier<T> uniquifier=env.createUniquifier();
  for (  T x : uniquifier.unique(fromValue)) {
    Set<T> xtc=env.getTransitiveClosure(ImmutableSet.of(x));
    SetView<T> result;
    if (xtc.size() > toValue.size()) {
      result=Sets.intersection(toValue,xtc);
    }
 else {
      result=Sets.intersection(xtc,toValue);
    }
    if (!result.isEmpty()) {
      callback.process(env.getNodesOnPath(x,result.iterator().next()));
      return;
    }
    uniquifier.unique(xtc);
  }
  callback.process(ImmutableSet.<T>of());
}
