def testExtremeDoubleValues(self, message_module):
    message = message_module.TestAllTypes()
    kMostPosExponentNoSigBits = math.pow(2, 1023)
    message.optional_double = kMostPosExponentNoSigBits
    message.ParseFromString(message.SerializeToString())
    self.assertTrue((message.optional_double == kMostPosExponentNoSigBits))
    kMostPosExponentOneSigBit = (1.5 * math.pow(2, 1023))
    message.optional_double = kMostPosExponentOneSigBit
    message.ParseFromString(message.SerializeToString())
    self.assertTrue((message.optional_double == kMostPosExponentOneSigBit))
    message.optional_double = (- kMostPosExponentNoSigBits)
    message.ParseFromString(message.SerializeToString())
    self.assertTrue((message.optional_double == (- kMostPosExponentNoSigBits)))
    message.optional_double = (- kMostPosExponentOneSigBit)
    message.ParseFromString(message.SerializeToString())
    self.assertTrue((message.optional_double == (- kMostPosExponentOneSigBit)))
    kMostNegExponentNoSigBits = math.pow(2, (-1023))
    message.optional_double = kMostNegExponentNoSigBits
    message.ParseFromString(message.SerializeToString())
    self.assertTrue((message.optional_double == kMostNegExponentNoSigBits))
    kMostNegExponentOneSigBit = (1.5 * math.pow(2, (-1023)))
    message.optional_double = kMostNegExponentOneSigBit
    message.ParseFromString(message.SerializeToString())
    self.assertTrue((message.optional_double == kMostNegExponentOneSigBit))
    message.optional_double = (- kMostNegExponentNoSigBits)
    message.ParseFromString(message.SerializeToString())
    self.assertTrue((message.optional_double == (- kMostNegExponentNoSigBits)))
    message.optional_double = (- kMostNegExponentOneSigBit)
    message.ParseFromString(message.SerializeToString())
    self.assertTrue((message.optional_double == (- kMostNegExponentOneSigBit)))
