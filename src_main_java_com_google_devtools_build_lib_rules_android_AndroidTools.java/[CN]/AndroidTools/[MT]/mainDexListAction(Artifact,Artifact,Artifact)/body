{
  if (androidSdk != null) {
    return new SpawnAction.Builder().setExecutable(androidSdk.getMainDexListCreator()).addOutputArgument(mainDexList).addInputArgument(strippedJar).addInputArgument(jar).build(ruleContext);
  }
 else {
    StringBuilder shellCommandBuilder=new StringBuilder().append(ruleContext.getHostConfiguration().getFragment(Jvm.class).getJavaExecutable().getPathString()).append(" -cp ").append(dxJar.getExecPathString()).append(" ").append(AndroidBinary.MAIN_DEX_CLASS_BUILDER);
    for (    String opt : ruleContext.getTokenizedStringListAttr("main_dex_list_opts")) {
      shellCommandBuilder.append(" ").append(opt);
    }
    shellCommandBuilder.append(" ").append(strippedJar.getExecPathString()).append(" ").append(jar.getExecPathString()).append(" >").append(mainDexList.getExecPathString());
    return new SpawnAction.Builder().addInput(strippedJar).addInput(jar).addInput(dxJar).addTransitiveInputs(BaseJavaCompilationHelper.getHostJavabaseInputs(ruleContext)).addOutput(mainDexList).setProgressMessage("Generating main dex classes list").setMnemonic("MainDexClasses").setShellCommand(shellCommandBuilder.toString()).build(ruleContext);
  }
}
