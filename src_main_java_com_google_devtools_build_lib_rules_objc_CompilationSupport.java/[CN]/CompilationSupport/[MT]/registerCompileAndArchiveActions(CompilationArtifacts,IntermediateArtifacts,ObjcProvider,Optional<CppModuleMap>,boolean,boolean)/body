{
  ImmutableList.Builder<Artifact> objFiles=new ImmutableList.Builder<>();
  for (  Artifact sourceFile : compilationArtifacts.getSrcs()) {
    Artifact objFile=intermediateArtifacts.objFile(sourceFile);
    objFiles.add(objFile);
    if (ObjcRuleClasses.SWIFT_SOURCES.matches(sourceFile.getFilename())) {
      registerSwiftCompileAction(sourceFile,objFile,intermediateArtifacts,objcProvider);
    }
 else {
      registerCompileAction(sourceFile,objFile,objcProvider,moduleMap,intermediateArtifacts,compilationArtifacts,ImmutableList.of("-fobjc-arc"),isCodeCoverageEnabled);
    }
  }
  for (  Artifact nonArcSourceFile : compilationArtifacts.getNonArcSrcs()) {
    Artifact objFile=intermediateArtifacts.objFile(nonArcSourceFile);
    objFiles.add(objFile);
    registerCompileAction(nonArcSourceFile,objFile,objcProvider,moduleMap,intermediateArtifacts,compilationArtifacts,ImmutableList.of("-fno-objc-arc"),isCodeCoverageEnabled);
  }
  if (compilationArtifacts.hasSwiftSources()) {
    registerSwiftModuleMergeAction(intermediateArtifacts,compilationArtifacts,objcProvider);
  }
  for (  Artifact archive : compilationArtifacts.getArchive().asSet()) {
    registerArchiveActions(intermediateArtifacts,objFiles,archive);
  }
  if (isFullyLinkEnabled) {
    registerFullyLinkAction(objcProvider);
  }
}
