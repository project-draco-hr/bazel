{
  for (  PathFragment absoluteInclude : Iterables.filter(attributes.includes(),PathFragment.IS_ABSOLUTE)) {
    ruleContext.attributeError("includes",String.format(ABSOLUTE_INCLUDES_PATH_FORMAT,absoluteInclude));
  }
  if (ruleContext.attributes().has("srcs",BuildType.LABEL_LIST)) {
    ImmutableSet<Artifact> hdrsSet=ImmutableSet.copyOf(attributes.hdrs());
    ImmutableSet<Artifact> srcsSet=ImmutableSet.copyOf(ruleContext.getPrerequisiteArtifacts("srcs",Mode.TARGET).list());
    for (    Artifact header : Sets.intersection(hdrsSet,srcsSet)) {
      String path=header.getRootRelativePath().toString();
      ruleContext.attributeWarning("srcs",String.format(FILE_IN_SRCS_AND_HDRS_WARNING_FORMAT,path));
    }
    ImmutableSet<Artifact> nonArcSrcsSet=ImmutableSet.copyOf(ruleContext.getPrerequisiteArtifacts("non_arc_srcs",Mode.TARGET).list());
    for (    Artifact conflict : Sets.intersection(nonArcSrcsSet,srcsSet)) {
      String path=conflict.getRootRelativePath().toString();
      ruleContext.attributeError("srcs",String.format(FILE_IN_SRCS_AND_NON_ARC_SRCS_ERROR_FORMAT,path));
    }
  }
  ruleContext.assertNoErrors();
  return this;
}
