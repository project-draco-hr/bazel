{
  if (common.getCompilationArtifacts().isPresent()) {
    registerGenerateModuleMapAction(common.getCompilationArtifacts());
    IntermediateArtifacts intermediateArtifacts=ObjcRuleClasses.intermediateArtifacts(ruleContext);
    Optional<CppModuleMap> moduleMap;
    if (ObjcRuleClasses.objcConfiguration(ruleContext).moduleMapsEnabled()) {
      moduleMap=Optional.of(intermediateArtifacts.moduleMap());
    }
 else {
      moduleMap=Optional.<CppModuleMap>absent();
    }
    registerCompileAndArchiveActions(common.getCompilationArtifacts().get(),intermediateArtifacts,common.getObjcProvider(),moduleMap,ruleContext.getConfiguration().isCodeCoverageEnabled());
  }
  return this;
}
