{
  Artifact pruner=ruleContext.getPrerequisiteArtifact("$j2objc_dead_code_pruner",Mode.HOST);
  J2ObjcMappingFileProvider provider=ObjcRuleClasses.j2ObjcMappingFileProvider(ruleContext);
  NestedSet<Artifact> j2ObjcDependencyMappingFiles=provider.getDependencyMappingFiles();
  NestedSet<Artifact> j2ObjcHeaderMappingFiles=provider.getHeaderMappingFiles();
  NestedSet<Artifact> j2ObjcArchiveSourceMappingFiles=provider.getArchiveSourceMappingFiles();
  for (  Artifact j2objcArchive : objcProvider.get(ObjcProvider.J2OBJC_LIBRARY)) {
    PathFragment paramFilePath=FileSystemUtils.replaceExtension(j2objcArchive.getOwner().toPathFragment(),".param.j2objc");
    Artifact paramFile=ruleContext.getUniqueDirectoryArtifact("_j2objc_pruned",paramFilePath,ruleContext.getBinOrGenfilesDirectory());
    Artifact prunedJ2ObjcArchive=intermediateArtifacts.j2objcPrunedArchive(j2objcArchive);
    Artifact dummyArchive=Iterables.getOnlyElement(ruleContext.getPrerequisite("$dummy_lib",Mode.TARGET,ObjcProvider.class).get(LIBRARY));
    CustomCommandLine commandLine=CustomCommandLine.builder().addExecPath("--input_archive",j2objcArchive).addExecPath("--output_archive",prunedJ2ObjcArchive).addExecPath("--dummy_archive",dummyArchive).addExecPath("--xcrunwrapper",xcrunwrapper(ruleContext).getExecutable()).addJoinExecPaths("--dependency_mapping_files",",",j2ObjcDependencyMappingFiles).addJoinExecPaths("--header_mapping_files",",",j2ObjcHeaderMappingFiles).addJoinExecPaths("--archive_source_mapping_files",",",j2ObjcArchiveSourceMappingFiles).add("--entry_classes").add(Joiner.on(",").join(entryClasses)).build();
    ruleContext.registerAction(new ParameterFileWriteAction(ruleContext.getActionOwner(),paramFile,commandLine,ParameterFile.ParameterFileType.UNQUOTED,ISO_8859_1));
    ruleContext.registerAction(ObjcRuleClasses.spawnAppleEnvActionBuilder(ruleContext,appleConfiguration.getIosCpuPlatform()).setMnemonic("DummyPruner").setExecutable(pruner).addInput(dummyArchive).addInput(pruner).addInput(paramFile).addInput(j2objcArchive).addInput(xcrunwrapper(ruleContext).getExecutable()).addTransitiveInputs(j2ObjcDependencyMappingFiles).addTransitiveInputs(j2ObjcHeaderMappingFiles).addTransitiveInputs(j2ObjcArchiveSourceMappingFiles).setCommandLine(CustomCommandLine.builder().addPaths("@%s",paramFile.getExecPath()).build()).addOutput(prunedJ2ObjcArchive).build(ruleContext));
  }
}
