{
  ImmutableList.Builder<String> coverageFlags=new ImmutableList.Builder<>();
  ImmutableList.Builder<Artifact> gcnoFiles=new ImmutableList.Builder<>();
  ImmutableList.Builder<Artifact> additionalInputs=new ImmutableList.Builder<>();
  if (isCodeCoverageEnabled && ObjcRuleClasses.isInstrumentable(sourceFile)) {
    coverageFlags.addAll(CLANG_COVERAGE_FLAGS);
    gcnoFiles.add(intermediateArtifacts.gcnoFile(sourceFile));
  }
  CustomCommandLine.Builder commandLine=new CustomCommandLine.Builder().add(CLANG);
  if (ObjcRuleClasses.CPP_SOURCES.matches(sourceFile.getExecPath())) {
    commandLine.add("-stdlib=libc++");
    commandLine.add("-std=c++11");
  }
  if (compilationArtifacts.hasSwiftSources()) {
    commandLine.add("-I");
    commandLine.addPath(intermediateArtifacts.swiftHeader().getExecPath().getParentDirectory());
    additionalInputs.add(intermediateArtifacts.swiftHeader());
  }
  if (objcConfiguration.shouldStripBinary()) {
    commandLine.add("-g");
  }
  Artifact dotdFile=intermediateArtifacts.dotdFile(sourceFile);
  commandLine.add(compileFlagsForClang(appleConfiguration)).add(commonLinkAndCompileFlagsForClang(objcProvider,objcConfiguration,appleConfiguration)).add(objcConfiguration.getCoptsForCompilationMode()).addBeforeEachPath("-iquote",ObjcCommon.userHeaderSearchPaths(buildConfiguration)).addBeforeEachExecPath("-include",compilationArtifacts.getPchFile().asSet()).addBeforeEachPath("-I",priorityHeaders).addBeforeEachPath("-I",objcProvider.get(INCLUDE)).addBeforeEachPath("-isystem",objcProvider.get(INCLUDE_SYSTEM)).add(otherFlags).addFormatEach("-D%s",objcProvider.get(DEFINE)).add(coverageFlags.build()).add(getCompileRuleCopts());
  PathFragment sourceExecPathFragment=sourceFile.getExecPath();
  String sourcePath=sourceExecPathFragment.getPathString();
  if (!sourceExecPathFragment.isAbsolute() && objcConfiguration.getUseAbsolutePathsForActions()) {
    sourcePath=objcConfiguration.getXcodeWorkspaceRoot() + "/" + sourcePath;
  }
  commandLine.add("-c").add(sourcePath).addExecPath("-o",objFile).add("-MD").addExecPath("-MF",dotdFile);
  if (objcConfiguration.moduleMapsEnabled()) {
    additionalInputs.addAll(objcProvider.get(MODULE_MAP));
  }
  if (moduleMap.isPresent()) {
    if (!attributes.enableModules()) {
      commandLine.add("-fmodule-maps");
    }
    commandLine.add("-iquote").add(moduleMap.get().getArtifact().getExecPath().getParentDirectory().toString()).add("-fmodule-name=" + moduleMap.get().getName());
  }
  ruleContext.registerAction(ObjcRuleClasses.spawnAppleEnvActionBuilder(appleConfiguration,appleConfiguration.getSingleArchPlatform()).setMnemonic("ObjcCompile").setExecutable(xcrunwrapper(ruleContext)).setCommandLine(commandLine.build()).addInput(sourceFile).addInputs(additionalInputs.build()).addOutput(objFile).addOutputs(gcnoFiles.build()).addOutput(dotdFile).addTransitiveInputs(objcProvider.get(HEADER)).addInputs(compilationArtifacts.getPrivateHdrs()).addTransitiveInputs(objcProvider.get(STATIC_FRAMEWORK_FILE)).addTransitiveInputs(objcProvider.get(DYNAMIC_FRAMEWORK_FILE)).addInputs(compilationArtifacts.getPchFile().asSet()).build(ruleContext));
}
