{
  RepositoryName nameFromRule=(RepositoryName)skyKey.argument();
  SkyKey repositoryKey=RepositoryDirectoryValue.key(nameFromRule);
  RepositoryDirectoryValue repository=(RepositoryDirectoryValue)env.getValue(repositoryKey);
  if (repository == null) {
    return null;
  }
  SkyKey workspaceKey=PackageValue.workspaceKey(RootedPath.toRootedPath(repository.getPath(),new PathFragment("WORKSPACE")));
  PackageValue workspacePackage=(PackageValue)env.getValue(workspaceKey);
  if (workspacePackage == null) {
    return null;
  }
  RepositoryName workspaceName;
  try {
    String workspaceNameStr=workspacePackage.getPackage().getWorkspaceName();
    workspaceName=workspaceNameStr.isEmpty() ? RepositoryName.create("") : RepositoryName.create("@" + workspaceNameStr);
  }
 catch (  LabelSyntaxException e) {
    throw new IllegalStateException(e);
  }
  if (!workspaceName.isDefault() && !nameFromRule.equals(workspaceName)) {
    Path workspacePath=repository.getPath().getRelative("WORKSPACE");
    env.getListener().handle(Event.warn(Location.fromFile(workspacePath),"Workspace name in " + workspacePath + " ("+ workspaceName+ ") does not match name "+ " given in the repository's definition ("+ nameFromRule+ "), this will cause "+ " a build error in future versions."));
  }
  return new RepositoryValue(nameFromRule,repository);
}
