{
  builder.addBuildInfoFactory(new BazelJavaBuildInfoFactory()).setConfigurationCollectionFactory(new BazelConfigurationCollection()).setPrerequisiteValidator(new BazelPrerequisiteValidator()).setSkylarkAccessibleJavaClasses(skylarkBuiltinJavaObects);
  for (  Class<? extends FragmentOptions> fragmentOptions : BUILD_OPTIONS) {
    builder.addConfigurationOptions(fragmentOptions);
  }
  builder.addRuleDefinition(BaseRuleClasses.BaseRule.class);
  builder.addRuleDefinition(BaseRuleClasses.RuleBase.class);
  builder.addRuleDefinition(BazelBaseRuleClasses.BinaryBaseRule.class);
  builder.addRuleDefinition(BaseRuleClasses.TestBaseRule.class);
  builder.addRuleDefinition(BazelBaseRuleClasses.ErrorRule.class);
  builder.addRuleDefinition(EnvironmentRule.class);
  builder.addRuleDefinition(ConfigRuleClasses.ConfigBaseRule.class);
  builder.addRuleDefinition(ConfigRuleClasses.ConfigSettingRule.class);
  builder.addRuleDefinition(BazelFilegroupRule.class);
  builder.addRuleDefinition(BazelTestSuiteRule.class);
  builder.addRuleDefinition(BazelGenRuleRule.class);
  builder.addRuleDefinition(GenQueryRule.class);
  builder.addRuleDefinition(BazelShRuleClasses.ShRule.class);
  builder.addRuleDefinition(BazelShLibraryRule.class);
  builder.addRuleDefinition(BazelShBinaryRule.class);
  builder.addRuleDefinition(BazelShTestRule.class);
  builder.addRuleDefinition(CcToolchainRule.class);
  builder.addRuleDefinition(BazelCppRuleClasses.CcLinkingRule.class);
  builder.addRuleDefinition(BazelCppRuleClasses.CcDeclRule.class);
  builder.addRuleDefinition(BazelCppRuleClasses.CcBaseRule.class);
  builder.addRuleDefinition(BazelCppRuleClasses.CcRule.class);
  builder.addRuleDefinition(BazelCppRuleClasses.CcBinaryBaseRule.class);
  builder.addRuleDefinition(BazelCppRuleClasses.CcBinaryRule.class);
  builder.addRuleDefinition(BazelCppRuleClasses.CcTestRule.class);
  builder.addRuleDefinition(BazelCppRuleClasses.CcLibraryBaseRule.class);
  builder.addRuleDefinition(BazelCppRuleClasses.CcLibraryRule.class);
  builder.addWorkspaceFile(BazelJavaRuleClasses.getDefaultWorkspace());
  builder.addRuleDefinition(BazelJavaRuleClasses.BaseJavaBinaryRule.class);
  builder.addRuleDefinition(BazelJavaRuleClasses.IjarBaseRule.class);
  builder.addRuleDefinition(BazelJavaRuleClasses.JavaBaseRule.class);
  builder.addRuleDefinition(JavaImportBaseRule.class);
  builder.addRuleDefinition(BazelJavaRuleClasses.JavaRule.class);
  builder.addRuleDefinition(BazelJavaBinaryRule.class);
  builder.addRuleDefinition(BazelJavaLibraryRule.class);
  builder.addRuleDefinition(BazelJavaImportRule.class);
  builder.addRuleDefinition(BazelJavaTestRule.class);
  builder.addRuleDefinition(BazelJavaPluginRule.class);
  builder.addRuleDefinition(JavaToolchainRule.class);
  builder.addRuleDefinition(BazelIosTestRule.class);
  builder.addRuleDefinition(IosDeviceRule.class);
  builder.addRuleDefinition(ObjcBinaryRule.class);
  builder.addRuleDefinition(ObjcBundleRule.class);
  builder.addRuleDefinition(ObjcBundleLibraryRule.class);
  builder.addRuleDefinition(ObjcFrameworkRule.class);
  builder.addRuleDefinition(ObjcImportRule.class);
  builder.addRuleDefinition(ObjcLibraryRule.class);
  builder.addRuleDefinition(ObjcOptionsRule.class);
  builder.addRuleDefinition(ObjcProtoLibraryRule.class);
  builder.addRuleDefinition(ObjcXcodeprojRule.class);
  builder.addRuleDefinition(ObjcRuleClasses.IosTestBaseRule.class);
  builder.addRuleDefinition(ObjcRuleClasses.BundlingRule.class);
  builder.addRuleDefinition(ObjcRuleClasses.ReleaseBundlingRule.class);
  builder.addRuleDefinition(ObjcRuleClasses.SimulatorRule.class);
  builder.addRuleDefinition(ObjcRuleClasses.CompilingRule.class);
  builder.addRuleDefinition(ObjcRuleClasses.LinkingRule.class);
  builder.addRuleDefinition(ObjcRuleClasses.ResourcesRule.class);
  builder.addRuleDefinition(ObjcRuleClasses.XcodegenRule.class);
  builder.addRuleDefinition(ObjcRuleClasses.AlwaysLinkRule.class);
  builder.addRuleDefinition(ObjcRuleClasses.OptionsRule.class);
  builder.addRuleDefinition(ObjcRuleClasses.SdkFrameworksDependerRule.class);
  builder.addRuleDefinition(ObjcRuleClasses.CompileDependencyRule.class);
  builder.addRuleDefinition(ObjcRuleClasses.ResourceToolsRule.class);
  builder.addRuleDefinition(IosApplicationRule.class);
  builder.addRuleDefinition(IosExtensionBinaryRule.class);
  builder.addRuleDefinition(IosExtensionRule.class);
  builder.addRuleDefinition(BazelExtraActionRule.class);
  builder.addRuleDefinition(BazelActionListenerRule.class);
  builder.addRuleDefinition(BindRule.class);
  builder.addRuleDefinition(HttpArchiveRule.class);
  builder.addRuleDefinition(HttpJarRule.class);
  builder.addRuleDefinition(LocalRepositoryRule.class);
  builder.addRuleDefinition(MavenJarRule.class);
  builder.addRuleDefinition(NewHttpArchiveRule.class);
  builder.addRuleDefinition(NewLocalRepositoryRule.class);
  builder.addConfigurationFragment(new BazelConfiguration.Loader());
  builder.addConfigurationFragment(new CppConfigurationLoader(Functions.<String>identity()));
  builder.addConfigurationFragment(new JvmConfigurationLoader(JAVA_CPU_SUPPLIER));
  builder.addConfigurationFragment(new JavaConfigurationLoader(JAVA_CPU_SUPPLIER));
  builder.addConfigurationFragment(new ObjcConfigurationLoader());
}
