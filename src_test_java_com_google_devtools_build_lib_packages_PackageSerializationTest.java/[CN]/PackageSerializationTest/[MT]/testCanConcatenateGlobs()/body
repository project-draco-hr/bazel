{
  scratch.file("serrano/sinew.sh");
  scratch.file("serrano/muscle.sh");
  scratch.file("serrano/bone.sh");
  Package pkg=scratchPackage("serrano","sh_library(name='serrano',","           srcs=glob(['s*.sh']) + ['muscle.sh'] + glob(['b*.sh']))");
  Package pkg2=deserializer.deserialize(codedInputFromPackage(pkg));
  Rule ham=pkg2.getRule("serrano");
  GlobList<?> globs=Rule.getGlobInfo(RawAttributeMapper.of(ham).get("srcs",BuildType.LABEL_LIST));
  assertThat(globs).containsExactly(Label.parseAbsolute("//serrano:sinew.sh"),Label.parseAbsolute("//serrano:muscle.sh"),Label.parseAbsolute("//serrano:bone.sh"));
  List<GlobCriteria> criteria=globs.getCriteria();
  assertThat(criteria).hasSize(3);
  assertThat(criteria.get(0).getIncludePatterns()).containsExactly("s*.sh");
  assertTrue(criteria.get(0).isGlob());
  assertFalse(criteria.get(1).isGlob());
  assertThat(criteria.get(2).getIncludePatterns()).containsExactly("b*.sh");
  assertTrue(criteria.get(2).isGlob());
}
