{
  IntermediateArtifacts intermediateArtifacts=ObjcRuleClasses.intermediateArtifacts(ruleContext);
  ImmutableList<Pair<Artifact,Label>> headers=ImmutableList.copyOf(CcCommon.getHeaders(ruleContext));
  ImmutableMap.Builder<Artifact,Artifact> builder=new ImmutableMap.Builder<>();
  Artifact frameworkBinary=outputArtifact(ruleContext,new PathFragment(bundleName(ruleContext)));
  builder.put(intermediateArtifacts.combinedArchitectureBinary(),frameworkBinary);
  for (  Pair<Artifact,Label> header : headers) {
    Artifact frameworkHeader=outputArtifact(ruleContext,new PathFragment("Headers/" + header.first.getFilename()));
    builder.put(header.first,frameworkHeader);
  }
  return builder.build();
}
