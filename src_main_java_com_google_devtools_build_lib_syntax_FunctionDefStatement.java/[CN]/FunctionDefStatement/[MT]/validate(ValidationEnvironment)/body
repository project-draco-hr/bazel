{
  ValidationEnvironment localEnv=new ValidationEnvironment(env);
  FunctionSignature sig=args.getSignature();
  FunctionSignature.Shape shape=sig.getShape();
  ImmutableList<String> names=sig.getNames();
  List<Expression> defaultExpressions=args.getDefaultValues();
  int positionals=shape.getPositionals();
  int mandatoryPositionals=shape.getMandatoryPositionals();
  int namedOnly=shape.getNamedOnly();
  int mandatoryNamedOnly=shape.getMandatoryNamedOnly();
  boolean starArg=shape.hasStarArg();
  boolean kwArg=shape.hasKwArg();
  int named=positionals + namedOnly;
  int args=named + (starArg ? 1 : 0) + (kwArg ? 1 : 0);
  int startOptionals=mandatoryPositionals;
  int endOptionals=named - mandatoryNamedOnly;
  int j=0;
  for (int i=0; i < args; i++) {
    String name=names.get(i);
    if (startOptionals <= i && i < endOptionals) {
      defaultExpressions.get(j++).validate(env);
    }
    localEnv.declare(name,getLocation());
  }
  for (  Statement stmts : statements) {
    stmts.validate(localEnv);
  }
}
